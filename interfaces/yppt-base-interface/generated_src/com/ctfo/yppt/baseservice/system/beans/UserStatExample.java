package com.ctfo.yppt.baseservice.system.beans;

import java.io.Serializable;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class UserStatExample implements Serializable {

	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to the database table TS_USER_STAT
	 * @abatorgenerated  Fri Feb 06 18:13:44 CST 2015
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to the database table TS_USER_STAT
	 * @abatorgenerated  Fri Feb 06 18:13:44 CST 2015
	 */
	protected List oredCriteria;
	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to the database table TS_USER_STAT
	 * @abatorgenerated  Fri Feb 06 18:13:44 CST 2015
	 */
	protected int skipNum;
	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to the database table TS_USER_STAT
	 * @abatorgenerated  Fri Feb 06 18:13:44 CST 2015
	 */
	protected int endNum;
	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to the database table TS_USER_STAT
	 * @abatorgenerated  Fri Feb 06 18:13:44 CST 2015
	 */
	protected int limitNum;

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TS_USER_STAT
	 * @abatorgenerated  Fri Feb 06 18:13:44 CST 2015
	 */
	public UserStatExample() {
		oredCriteria = new ArrayList();
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TS_USER_STAT
	 * @abatorgenerated  Fri Feb 06 18:13:44 CST 2015
	 */
	protected UserStatExample(UserStatExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TS_USER_STAT
	 * @abatorgenerated  Fri Feb 06 18:13:44 CST 2015
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TS_USER_STAT
	 * @abatorgenerated  Fri Feb 06 18:13:44 CST 2015
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TS_USER_STAT
	 * @abatorgenerated  Fri Feb 06 18:13:44 CST 2015
	 */
	public List getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TS_USER_STAT
	 * @abatorgenerated  Fri Feb 06 18:13:44 CST 2015
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TS_USER_STAT
	 * @abatorgenerated  Fri Feb 06 18:13:44 CST 2015
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TS_USER_STAT
	 * @abatorgenerated  Fri Feb 06 18:13:44 CST 2015
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TS_USER_STAT
	 * @abatorgenerated  Fri Feb 06 18:13:44 CST 2015
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TS_USER_STAT
	 * @abatorgenerated  Fri Feb 06 18:13:44 CST 2015
	 */
	public static String tableName() {
		return "TS_USER_STAT";
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TS_USER_STAT
	 * @abatorgenerated  Fri Feb 06 18:13:44 CST 2015
	 */
	public static String daoInterface() {
		return "com.ctfo.yppt.baseservice.dao.system.UserStatDAO";
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TS_USER_STAT
	 * @abatorgenerated  Fri Feb 06 18:13:44 CST 2015
	 */
	public void setSkipNum(int skipNum) {
		this.skipNum = skipNum;
		this.endNum = this.skipNum + this.limitNum + 1;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TS_USER_STAT
	 * @abatorgenerated  Fri Feb 06 18:13:44 CST 2015
	 */
	public int getSkipNum() {
		return this.skipNum;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TS_USER_STAT
	 * @abatorgenerated  Fri Feb 06 18:13:44 CST 2015
	 */
	public void setEndNum(int endNum) {
		this.endNum = endNum;
		this.limitNum = this.endNum - this.skipNum - 1;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TS_USER_STAT
	 * @abatorgenerated  Fri Feb 06 18:13:44 CST 2015
	 */
	public int getEndNum() {
		return this.endNum;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TS_USER_STAT
	 * @abatorgenerated  Fri Feb 06 18:13:44 CST 2015
	 */
	public void setLimitNum(int limitNum) {
		this.limitNum = limitNum;
		this.endNum = this.skipNum + this.limitNum + 1;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TS_USER_STAT
	 * @abatorgenerated  Fri Feb 06 18:13:44 CST 2015
	 */
	public int getLimitNum() {
		return this.limitNum;
	}

	/**
	 * This class was generated by Abator for iBATIS. This class corresponds to the database table TS_USER_STAT
	 * @abatorgenerated  Fri Feb 06 18:13:44 CST 2015
	 */
	public static class Criteria implements Serializable {
		protected List criteriaWithoutValue;
		protected List criteriaWithSingleValue;
		protected List criteriaWithListValue;
		protected List criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList();
			criteriaWithSingleValue = new ArrayList();
			criteriaWithListValue = new ArrayList();
			criteriaWithBetweenValue = new ArrayList();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0
					|| criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition, List values,
				String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			List list = new ArrayList();
			list.add(value1);
			list.add(value2);
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		public Criteria andIdIsNull() {
			addCriterion("ID is null");
			return this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("ID is not null");
			return this;
		}

		public Criteria andIdEqualTo(String value) {
			addCriterion("ID =", value, "id");
			return this;
		}

		public Criteria andIdNotEqualTo(String value) {
			addCriterion("ID <>", value, "id");
			return this;
		}

		public Criteria andIdGreaterThan(String value) {
			addCriterion("ID >", value, "id");
			return this;
		}

		public Criteria andIdGreaterThanOrEqualTo(String value) {
			addCriterion("ID >=", value, "id");
			return this;
		}

		public Criteria andIdLessThan(String value) {
			addCriterion("ID <", value, "id");
			return this;
		}

		public Criteria andIdLessThanOrEqualTo(String value) {
			addCriterion("ID <=", value, "id");
			return this;
		}

		public Criteria andIdLike(String value) {
			addCriterion("ID like", value, "id");
			return this;
		}

		public Criteria andIdNotLike(String value) {
			addCriterion("ID not like", value, "id");
			return this;
		}

		public Criteria andIdIn(List values) {
			addCriterion("ID in", values, "id");
			return this;
		}

		public Criteria andIdNotIn(List values) {
			addCriterion("ID not in", values, "id");
			return this;
		}

		public Criteria andIdBetween(String value1, String value2) {
			addCriterion("ID between", value1, value2, "id");
			return this;
		}

		public Criteria andIdNotBetween(String value1, String value2) {
			addCriterion("ID not between", value1, value2, "id");
			return this;
		}

		public Criteria andUserIdIsNull() {
			addCriterion("USER_ID is null");
			return this;
		}

		public Criteria andUserIdIsNotNull() {
			addCriterion("USER_ID is not null");
			return this;
		}

		public Criteria andUserIdEqualTo(String value) {
			addCriterion("USER_ID =", value, "userId");
			return this;
		}

		public Criteria andUserIdNotEqualTo(String value) {
			addCriterion("USER_ID <>", value, "userId");
			return this;
		}

		public Criteria andUserIdGreaterThan(String value) {
			addCriterion("USER_ID >", value, "userId");
			return this;
		}

		public Criteria andUserIdGreaterThanOrEqualTo(String value) {
			addCriterion("USER_ID >=", value, "userId");
			return this;
		}

		public Criteria andUserIdLessThan(String value) {
			addCriterion("USER_ID <", value, "userId");
			return this;
		}

		public Criteria andUserIdLessThanOrEqualTo(String value) {
			addCriterion("USER_ID <=", value, "userId");
			return this;
		}

		public Criteria andUserIdLike(String value) {
			addCriterion("USER_ID like", value, "userId");
			return this;
		}

		public Criteria andUserIdNotLike(String value) {
			addCriterion("USER_ID not like", value, "userId");
			return this;
		}

		public Criteria andUserIdIn(List values) {
			addCriterion("USER_ID in", values, "userId");
			return this;
		}

		public Criteria andUserIdNotIn(List values) {
			addCriterion("USER_ID not in", values, "userId");
			return this;
		}

		public Criteria andUserIdBetween(String value1, String value2) {
			addCriterion("USER_ID between", value1, value2, "userId");
			return this;
		}

		public Criteria andUserIdNotBetween(String value1, String value2) {
			addCriterion("USER_ID not between", value1, value2, "userId");
			return this;
		}

		public Criteria andGoldCoinNumIsNull() {
			addCriterion("GOLD_COIN_NUM is null");
			return this;
		}

		public Criteria andGoldCoinNumIsNotNull() {
			addCriterion("GOLD_COIN_NUM is not null");
			return this;
		}

		public Criteria andGoldCoinNumEqualTo(BigDecimal value) {
			addCriterion("GOLD_COIN_NUM =", value, "goldCoinNum");
			return this;
		}

		public Criteria andGoldCoinNumNotEqualTo(BigDecimal value) {
			addCriterion("GOLD_COIN_NUM <>", value, "goldCoinNum");
			return this;
		}

		public Criteria andGoldCoinNumGreaterThan(BigDecimal value) {
			addCriterion("GOLD_COIN_NUM >", value, "goldCoinNum");
			return this;
		}

		public Criteria andGoldCoinNumGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("GOLD_COIN_NUM >=", value, "goldCoinNum");
			return this;
		}

		public Criteria andGoldCoinNumLessThan(BigDecimal value) {
			addCriterion("GOLD_COIN_NUM <", value, "goldCoinNum");
			return this;
		}

		public Criteria andGoldCoinNumLessThanOrEqualTo(BigDecimal value) {
			addCriterion("GOLD_COIN_NUM <=", value, "goldCoinNum");
			return this;
		}

		public Criteria andGoldCoinNumIn(List values) {
			addCriterion("GOLD_COIN_NUM in", values, "goldCoinNum");
			return this;
		}

		public Criteria andGoldCoinNumNotIn(List values) {
			addCriterion("GOLD_COIN_NUM not in", values, "goldCoinNum");
			return this;
		}

		public Criteria andGoldCoinNumBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("GOLD_COIN_NUM between", value1, value2, "goldCoinNum");
			return this;
		}

		public Criteria andGoldCoinNumNotBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("GOLD_COIN_NUM not between", value1, value2,
					"goldCoinNum");
			return this;
		}

		public Criteria andRebateMoneyIsNull() {
			addCriterion("REBATE_MONEY is null");
			return this;
		}

		public Criteria andRebateMoneyIsNotNull() {
			addCriterion("REBATE_MONEY is not null");
			return this;
		}

		public Criteria andRebateMoneyEqualTo(BigDecimal value) {
			addCriterion("REBATE_MONEY =", value, "rebateMoney");
			return this;
		}

		public Criteria andRebateMoneyNotEqualTo(BigDecimal value) {
			addCriterion("REBATE_MONEY <>", value, "rebateMoney");
			return this;
		}

		public Criteria andRebateMoneyGreaterThan(BigDecimal value) {
			addCriterion("REBATE_MONEY >", value, "rebateMoney");
			return this;
		}

		public Criteria andRebateMoneyGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("REBATE_MONEY >=", value, "rebateMoney");
			return this;
		}

		public Criteria andRebateMoneyLessThan(BigDecimal value) {
			addCriterion("REBATE_MONEY <", value, "rebateMoney");
			return this;
		}

		public Criteria andRebateMoneyLessThanOrEqualTo(BigDecimal value) {
			addCriterion("REBATE_MONEY <=", value, "rebateMoney");
			return this;
		}

		public Criteria andRebateMoneyIn(List values) {
			addCriterion("REBATE_MONEY in", values, "rebateMoney");
			return this;
		}

		public Criteria andRebateMoneyNotIn(List values) {
			addCriterion("REBATE_MONEY not in", values, "rebateMoney");
			return this;
		}

		public Criteria andRebateMoneyBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("REBATE_MONEY between", value1, value2, "rebateMoney");
			return this;
		}

		public Criteria andRebateMoneyNotBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("REBATE_MONEY not between", value1, value2,
					"rebateMoney");
			return this;
		}

		public Criteria andOilNumIsNull() {
			addCriterion("OIL_NUM is null");
			return this;
		}

		public Criteria andOilNumIsNotNull() {
			addCriterion("OIL_NUM is not null");
			return this;
		}

		public Criteria andOilNumEqualTo(BigDecimal value) {
			addCriterion("OIL_NUM =", value, "oilNum");
			return this;
		}

		public Criteria andOilNumNotEqualTo(BigDecimal value) {
			addCriterion("OIL_NUM <>", value, "oilNum");
			return this;
		}

		public Criteria andOilNumGreaterThan(BigDecimal value) {
			addCriterion("OIL_NUM >", value, "oilNum");
			return this;
		}

		public Criteria andOilNumGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("OIL_NUM >=", value, "oilNum");
			return this;
		}

		public Criteria andOilNumLessThan(BigDecimal value) {
			addCriterion("OIL_NUM <", value, "oilNum");
			return this;
		}

		public Criteria andOilNumLessThanOrEqualTo(BigDecimal value) {
			addCriterion("OIL_NUM <=", value, "oilNum");
			return this;
		}

		public Criteria andOilNumIn(List values) {
			addCriterion("OIL_NUM in", values, "oilNum");
			return this;
		}

		public Criteria andOilNumNotIn(List values) {
			addCriterion("OIL_NUM not in", values, "oilNum");
			return this;
		}

		public Criteria andOilNumBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("OIL_NUM between", value1, value2, "oilNum");
			return this;
		}

		public Criteria andOilNumNotBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("OIL_NUM not between", value1, value2, "oilNum");
			return this;
		}

		public Criteria andConsumeMoneyIsNull() {
			addCriterion("CONSUME_MONEY is null");
			return this;
		}

		public Criteria andConsumeMoneyIsNotNull() {
			addCriterion("CONSUME_MONEY is not null");
			return this;
		}

		public Criteria andConsumeMoneyEqualTo(BigDecimal value) {
			addCriterion("CONSUME_MONEY =", value, "consumeMoney");
			return this;
		}

		public Criteria andConsumeMoneyNotEqualTo(BigDecimal value) {
			addCriterion("CONSUME_MONEY <>", value, "consumeMoney");
			return this;
		}

		public Criteria andConsumeMoneyGreaterThan(BigDecimal value) {
			addCriterion("CONSUME_MONEY >", value, "consumeMoney");
			return this;
		}

		public Criteria andConsumeMoneyGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("CONSUME_MONEY >=", value, "consumeMoney");
			return this;
		}

		public Criteria andConsumeMoneyLessThan(BigDecimal value) {
			addCriterion("CONSUME_MONEY <", value, "consumeMoney");
			return this;
		}

		public Criteria andConsumeMoneyLessThanOrEqualTo(BigDecimal value) {
			addCriterion("CONSUME_MONEY <=", value, "consumeMoney");
			return this;
		}

		public Criteria andConsumeMoneyIn(List values) {
			addCriterion("CONSUME_MONEY in", values, "consumeMoney");
			return this;
		}

		public Criteria andConsumeMoneyNotIn(List values) {
			addCriterion("CONSUME_MONEY not in", values, "consumeMoney");
			return this;
		}

		public Criteria andConsumeMoneyBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("CONSUME_MONEY between", value1, value2,
					"consumeMoney");
			return this;
		}

		public Criteria andConsumeMoneyNotBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("CONSUME_MONEY not between", value1, value2,
					"consumeMoney");
			return this;
		}

		public Criteria andRechargeMoneyIsNull() {
			addCriterion("RECHARGE_MONEY is null");
			return this;
		}

		public Criteria andRechargeMoneyIsNotNull() {
			addCriterion("RECHARGE_MONEY is not null");
			return this;
		}

		public Criteria andRechargeMoneyEqualTo(BigDecimal value) {
			addCriterion("RECHARGE_MONEY =", value, "rechargeMoney");
			return this;
		}

		public Criteria andRechargeMoneyNotEqualTo(BigDecimal value) {
			addCriterion("RECHARGE_MONEY <>", value, "rechargeMoney");
			return this;
		}

		public Criteria andRechargeMoneyGreaterThan(BigDecimal value) {
			addCriterion("RECHARGE_MONEY >", value, "rechargeMoney");
			return this;
		}

		public Criteria andRechargeMoneyGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("RECHARGE_MONEY >=", value, "rechargeMoney");
			return this;
		}

		public Criteria andRechargeMoneyLessThan(BigDecimal value) {
			addCriterion("RECHARGE_MONEY <", value, "rechargeMoney");
			return this;
		}

		public Criteria andRechargeMoneyLessThanOrEqualTo(BigDecimal value) {
			addCriterion("RECHARGE_MONEY <=", value, "rechargeMoney");
			return this;
		}

		public Criteria andRechargeMoneyIn(List values) {
			addCriterion("RECHARGE_MONEY in", values, "rechargeMoney");
			return this;
		}

		public Criteria andRechargeMoneyNotIn(List values) {
			addCriterion("RECHARGE_MONEY not in", values, "rechargeMoney");
			return this;
		}

		public Criteria andRechargeMoneyBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("RECHARGE_MONEY between", value1, value2,
					"rechargeMoney");
			return this;
		}

		public Criteria andRechargeMoneyNotBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("RECHARGE_MONEY not between", value1, value2,
					"rechargeMoney");
			return this;
		}

		public Criteria andLastMonthComsumeMoneyIsNull() {
			addCriterion("LAST_MONTH_COMSUME_MONEY is null");
			return this;
		}

		public Criteria andLastMonthComsumeMoneyIsNotNull() {
			addCriterion("LAST_MONTH_COMSUME_MONEY is not null");
			return this;
		}

		public Criteria andLastMonthComsumeMoneyEqualTo(BigDecimal value) {
			addCriterion("LAST_MONTH_COMSUME_MONEY =", value,
					"lastMonthComsumeMoney");
			return this;
		}

		public Criteria andLastMonthComsumeMoneyNotEqualTo(BigDecimal value) {
			addCriterion("LAST_MONTH_COMSUME_MONEY <>", value,
					"lastMonthComsumeMoney");
			return this;
		}

		public Criteria andLastMonthComsumeMoneyGreaterThan(BigDecimal value) {
			addCriterion("LAST_MONTH_COMSUME_MONEY >", value,
					"lastMonthComsumeMoney");
			return this;
		}

		public Criteria andLastMonthComsumeMoneyGreaterThanOrEqualTo(
				BigDecimal value) {
			addCriterion("LAST_MONTH_COMSUME_MONEY >=", value,
					"lastMonthComsumeMoney");
			return this;
		}

		public Criteria andLastMonthComsumeMoneyLessThan(BigDecimal value) {
			addCriterion("LAST_MONTH_COMSUME_MONEY <", value,
					"lastMonthComsumeMoney");
			return this;
		}

		public Criteria andLastMonthComsumeMoneyLessThanOrEqualTo(
				BigDecimal value) {
			addCriterion("LAST_MONTH_COMSUME_MONEY <=", value,
					"lastMonthComsumeMoney");
			return this;
		}

		public Criteria andLastMonthComsumeMoneyIn(List values) {
			addCriterion("LAST_MONTH_COMSUME_MONEY in", values,
					"lastMonthComsumeMoney");
			return this;
		}

		public Criteria andLastMonthComsumeMoneyNotIn(List values) {
			addCriterion("LAST_MONTH_COMSUME_MONEY not in", values,
					"lastMonthComsumeMoney");
			return this;
		}

		public Criteria andLastMonthComsumeMoneyBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("LAST_MONTH_COMSUME_MONEY between", value1, value2,
					"lastMonthComsumeMoney");
			return this;
		}

		public Criteria andLastMonthComsumeMoneyNotBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("LAST_MONTH_COMSUME_MONEY not between", value1,
					value2, "lastMonthComsumeMoney");
			return this;
		}

		public Criteria andLastMonthOilNumIsNull() {
			addCriterion("LAST_MONTH_OIL_NUM is null");
			return this;
		}

		public Criteria andLastMonthOilNumIsNotNull() {
			addCriterion("LAST_MONTH_OIL_NUM is not null");
			return this;
		}

		public Criteria andLastMonthOilNumEqualTo(BigDecimal value) {
			addCriterion("LAST_MONTH_OIL_NUM =", value, "lastMonthOilNum");
			return this;
		}

		public Criteria andLastMonthOilNumNotEqualTo(BigDecimal value) {
			addCriterion("LAST_MONTH_OIL_NUM <>", value, "lastMonthOilNum");
			return this;
		}

		public Criteria andLastMonthOilNumGreaterThan(BigDecimal value) {
			addCriterion("LAST_MONTH_OIL_NUM >", value, "lastMonthOilNum");
			return this;
		}

		public Criteria andLastMonthOilNumGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("LAST_MONTH_OIL_NUM >=", value, "lastMonthOilNum");
			return this;
		}

		public Criteria andLastMonthOilNumLessThan(BigDecimal value) {
			addCriterion("LAST_MONTH_OIL_NUM <", value, "lastMonthOilNum");
			return this;
		}

		public Criteria andLastMonthOilNumLessThanOrEqualTo(BigDecimal value) {
			addCriterion("LAST_MONTH_OIL_NUM <=", value, "lastMonthOilNum");
			return this;
		}

		public Criteria andLastMonthOilNumIn(List values) {
			addCriterion("LAST_MONTH_OIL_NUM in", values, "lastMonthOilNum");
			return this;
		}

		public Criteria andLastMonthOilNumNotIn(List values) {
			addCriterion("LAST_MONTH_OIL_NUM not in", values, "lastMonthOilNum");
			return this;
		}

		public Criteria andLastMonthOilNumBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("LAST_MONTH_OIL_NUM between", value1, value2,
					"lastMonthOilNum");
			return this;
		}

		public Criteria andLastMonthOilNumNotBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("LAST_MONTH_OIL_NUM not between", value1, value2,
					"lastMonthOilNum");
			return this;
		}

		public Criteria andLastMonthComsumeAllMoneyIsNull() {
			addCriterion("LAST_MONTH_COMSUME_ALL_MONEY is null");
			return this;
		}

		public Criteria andLastMonthComsumeAllMoneyIsNotNull() {
			addCriterion("LAST_MONTH_COMSUME_ALL_MONEY is not null");
			return this;
		}

		public Criteria andLastMonthComsumeAllMoneyEqualTo(BigDecimal value) {
			addCriterion("LAST_MONTH_COMSUME_ALL_MONEY =", value,
					"lastMonthComsumeAllMoney");
			return this;
		}

		public Criteria andLastMonthComsumeAllMoneyNotEqualTo(BigDecimal value) {
			addCriterion("LAST_MONTH_COMSUME_ALL_MONEY <>", value,
					"lastMonthComsumeAllMoney");
			return this;
		}

		public Criteria andLastMonthComsumeAllMoneyGreaterThan(BigDecimal value) {
			addCriterion("LAST_MONTH_COMSUME_ALL_MONEY >", value,
					"lastMonthComsumeAllMoney");
			return this;
		}

		public Criteria andLastMonthComsumeAllMoneyGreaterThanOrEqualTo(
				BigDecimal value) {
			addCriterion("LAST_MONTH_COMSUME_ALL_MONEY >=", value,
					"lastMonthComsumeAllMoney");
			return this;
		}

		public Criteria andLastMonthComsumeAllMoneyLessThan(BigDecimal value) {
			addCriterion("LAST_MONTH_COMSUME_ALL_MONEY <", value,
					"lastMonthComsumeAllMoney");
			return this;
		}

		public Criteria andLastMonthComsumeAllMoneyLessThanOrEqualTo(
				BigDecimal value) {
			addCriterion("LAST_MONTH_COMSUME_ALL_MONEY <=", value,
					"lastMonthComsumeAllMoney");
			return this;
		}

		public Criteria andLastMonthComsumeAllMoneyIn(List values) {
			addCriterion("LAST_MONTH_COMSUME_ALL_MONEY in", values,
					"lastMonthComsumeAllMoney");
			return this;
		}

		public Criteria andLastMonthComsumeAllMoneyNotIn(List values) {
			addCriterion("LAST_MONTH_COMSUME_ALL_MONEY not in", values,
					"lastMonthComsumeAllMoney");
			return this;
		}

		public Criteria andLastMonthComsumeAllMoneyBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("LAST_MONTH_COMSUME_ALL_MONEY between", value1,
					value2, "lastMonthComsumeAllMoney");
			return this;
		}

		public Criteria andLastMonthComsumeAllMoneyNotBetween(
				BigDecimal value1, BigDecimal value2) {
			addCriterion("LAST_MONTH_COMSUME_ALL_MONEY not between", value1,
					value2, "lastMonthComsumeAllMoney");
			return this;
		}

		public Criteria andLastMonthRebateCoinNumIsNull() {
			addCriterion("LAST_MONTH_REBATE_COIN_NUM is null");
			return this;
		}

		public Criteria andLastMonthRebateCoinNumIsNotNull() {
			addCriterion("LAST_MONTH_REBATE_COIN_NUM is not null");
			return this;
		}

		public Criteria andLastMonthRebateCoinNumEqualTo(Long value) {
			addCriterion("LAST_MONTH_REBATE_COIN_NUM =", value,
					"lastMonthRebateCoinNum");
			return this;
		}

		public Criteria andLastMonthRebateCoinNumNotEqualTo(Long value) {
			addCriterion("LAST_MONTH_REBATE_COIN_NUM <>", value,
					"lastMonthRebateCoinNum");
			return this;
		}

		public Criteria andLastMonthRebateCoinNumGreaterThan(Long value) {
			addCriterion("LAST_MONTH_REBATE_COIN_NUM >", value,
					"lastMonthRebateCoinNum");
			return this;
		}

		public Criteria andLastMonthRebateCoinNumGreaterThanOrEqualTo(Long value) {
			addCriterion("LAST_MONTH_REBATE_COIN_NUM >=", value,
					"lastMonthRebateCoinNum");
			return this;
		}

		public Criteria andLastMonthRebateCoinNumLessThan(Long value) {
			addCriterion("LAST_MONTH_REBATE_COIN_NUM <", value,
					"lastMonthRebateCoinNum");
			return this;
		}

		public Criteria andLastMonthRebateCoinNumLessThanOrEqualTo(Long value) {
			addCriterion("LAST_MONTH_REBATE_COIN_NUM <=", value,
					"lastMonthRebateCoinNum");
			return this;
		}

		public Criteria andLastMonthRebateCoinNumIn(List values) {
			addCriterion("LAST_MONTH_REBATE_COIN_NUM in", values,
					"lastMonthRebateCoinNum");
			return this;
		}

		public Criteria andLastMonthRebateCoinNumNotIn(List values) {
			addCriterion("LAST_MONTH_REBATE_COIN_NUM not in", values,
					"lastMonthRebateCoinNum");
			return this;
		}

		public Criteria andLastMonthRebateCoinNumBetween(Long value1,
				Long value2) {
			addCriterion("LAST_MONTH_REBATE_COIN_NUM between", value1, value2,
					"lastMonthRebateCoinNum");
			return this;
		}

		public Criteria andLastMonthRebateCoinNumNotBetween(Long value1,
				Long value2) {
			addCriterion("LAST_MONTH_REBATE_COIN_NUM not between", value1,
					value2, "lastMonthRebateCoinNum");
			return this;
		}

		public Criteria andLastMonthRebateMoneyIsNull() {
			addCriterion("LAST_MONTH_REBATE_MONEY is null");
			return this;
		}

		public Criteria andLastMonthRebateMoneyIsNotNull() {
			addCriterion("LAST_MONTH_REBATE_MONEY is not null");
			return this;
		}

		public Criteria andLastMonthRebateMoneyEqualTo(BigDecimal value) {
			addCriterion("LAST_MONTH_REBATE_MONEY =", value,
					"lastMonthRebateMoney");
			return this;
		}

		public Criteria andLastMonthRebateMoneyNotEqualTo(BigDecimal value) {
			addCriterion("LAST_MONTH_REBATE_MONEY <>", value,
					"lastMonthRebateMoney");
			return this;
		}

		public Criteria andLastMonthRebateMoneyGreaterThan(BigDecimal value) {
			addCriterion("LAST_MONTH_REBATE_MONEY >", value,
					"lastMonthRebateMoney");
			return this;
		}

		public Criteria andLastMonthRebateMoneyGreaterThanOrEqualTo(
				BigDecimal value) {
			addCriterion("LAST_MONTH_REBATE_MONEY >=", value,
					"lastMonthRebateMoney");
			return this;
		}

		public Criteria andLastMonthRebateMoneyLessThan(BigDecimal value) {
			addCriterion("LAST_MONTH_REBATE_MONEY <", value,
					"lastMonthRebateMoney");
			return this;
		}

		public Criteria andLastMonthRebateMoneyLessThanOrEqualTo(
				BigDecimal value) {
			addCriterion("LAST_MONTH_REBATE_MONEY <=", value,
					"lastMonthRebateMoney");
			return this;
		}

		public Criteria andLastMonthRebateMoneyIn(List values) {
			addCriterion("LAST_MONTH_REBATE_MONEY in", values,
					"lastMonthRebateMoney");
			return this;
		}

		public Criteria andLastMonthRebateMoneyNotIn(List values) {
			addCriterion("LAST_MONTH_REBATE_MONEY not in", values,
					"lastMonthRebateMoney");
			return this;
		}

		public Criteria andLastMonthRebateMoneyBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("LAST_MONTH_REBATE_MONEY between", value1, value2,
					"lastMonthRebateMoney");
			return this;
		}

		public Criteria andLastMonthRebateMoneyNotBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("LAST_MONTH_REBATE_MONEY not between", value1, value2,
					"lastMonthRebateMoney");
			return this;
		}

		public Criteria andUpdateTimeIsNull() {
			addCriterion("UPDATE_TIME is null");
			return this;
		}

		public Criteria andUpdateTimeIsNotNull() {
			addCriterion("UPDATE_TIME is not null");
			return this;
		}

		public Criteria andUpdateTimeEqualTo(Long value) {
			addCriterion("UPDATE_TIME =", value, "updateTime");
			return this;
		}

		public Criteria andUpdateTimeNotEqualTo(Long value) {
			addCriterion("UPDATE_TIME <>", value, "updateTime");
			return this;
		}

		public Criteria andUpdateTimeGreaterThan(Long value) {
			addCriterion("UPDATE_TIME >", value, "updateTime");
			return this;
		}

		public Criteria andUpdateTimeGreaterThanOrEqualTo(Long value) {
			addCriterion("UPDATE_TIME >=", value, "updateTime");
			return this;
		}

		public Criteria andUpdateTimeLessThan(Long value) {
			addCriterion("UPDATE_TIME <", value, "updateTime");
			return this;
		}

		public Criteria andUpdateTimeLessThanOrEqualTo(Long value) {
			addCriterion("UPDATE_TIME <=", value, "updateTime");
			return this;
		}

		public Criteria andUpdateTimeIn(List values) {
			addCriterion("UPDATE_TIME in", values, "updateTime");
			return this;
		}

		public Criteria andUpdateTimeNotIn(List values) {
			addCriterion("UPDATE_TIME not in", values, "updateTime");
			return this;
		}

		public Criteria andUpdateTimeBetween(Long value1, Long value2) {
			addCriterion("UPDATE_TIME between", value1, value2, "updateTime");
			return this;
		}

		public Criteria andUpdateTimeNotBetween(Long value1, Long value2) {
			addCriterion("UPDATE_TIME not between", value1, value2,
					"updateTime");
			return this;
		}

		public Criteria andInvoiceMoneyIsNull() {
			addCriterion("INVOICE_MONEY is null");
			return this;
		}

		public Criteria andInvoiceMoneyIsNotNull() {
			addCriterion("INVOICE_MONEY is not null");
			return this;
		}

		public Criteria andInvoiceMoneyEqualTo(Long value) {
			addCriterion("INVOICE_MONEY =", value, "invoiceMoney");
			return this;
		}

		public Criteria andInvoiceMoneyNotEqualTo(Long value) {
			addCriterion("INVOICE_MONEY <>", value, "invoiceMoney");
			return this;
		}

		public Criteria andInvoiceMoneyGreaterThan(Long value) {
			addCriterion("INVOICE_MONEY >", value, "invoiceMoney");
			return this;
		}

		public Criteria andInvoiceMoneyGreaterThanOrEqualTo(Long value) {
			addCriterion("INVOICE_MONEY >=", value, "invoiceMoney");
			return this;
		}

		public Criteria andInvoiceMoneyLessThan(Long value) {
			addCriterion("INVOICE_MONEY <", value, "invoiceMoney");
			return this;
		}

		public Criteria andInvoiceMoneyLessThanOrEqualTo(Long value) {
			addCriterion("INVOICE_MONEY <=", value, "invoiceMoney");
			return this;
		}

		public Criteria andInvoiceMoneyIn(List values) {
			addCriterion("INVOICE_MONEY in", values, "invoiceMoney");
			return this;
		}

		public Criteria andInvoiceMoneyNotIn(List values) {
			addCriterion("INVOICE_MONEY not in", values, "invoiceMoney");
			return this;
		}

		public Criteria andInvoiceMoneyBetween(Long value1, Long value2) {
			addCriterion("INVOICE_MONEY between", value1, value2,
					"invoiceMoney");
			return this;
		}

		public Criteria andInvoiceMoneyNotBetween(Long value1, Long value2) {
			addCriterion("INVOICE_MONEY not between", value1, value2,
					"invoiceMoney");
			return this;
		}
	}
}