package com.ctfo.yppt.baseservice.system.beans;

import java.io.Serializable;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class CardStatExampleExtended implements Serializable {

	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to the database table TS_CARD_COMSUME_STAT
	 * @abatorgenerated  Mon Feb 02 17:58:55 CST 2015
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to the database table TS_CARD_COMSUME_STAT
	 * @abatorgenerated  Mon Feb 02 17:58:55 CST 2015
	 */
	protected List oredCriteria;
	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to the database table TS_CARD_COMSUME_STAT
	 * @abatorgenerated  Mon Feb 02 17:58:55 CST 2015
	 */
	protected String selectedField;
	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to the database table TS_CARD_COMSUME_STAT
	 * @abatorgenerated  Mon Feb 02 17:58:55 CST 2015
	 */
	protected int skipNum;
	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to the database table TS_CARD_COMSUME_STAT
	 * @abatorgenerated  Mon Feb 02 17:58:55 CST 2015
	 */
	protected int endNum;
	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to the database table TS_CARD_COMSUME_STAT
	 * @abatorgenerated  Mon Feb 02 17:58:55 CST 2015
	 */
	protected int limitNum;

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TS_CARD_COMSUME_STAT
	 * @abatorgenerated  Mon Feb 02 17:58:55 CST 2015
	 */
	public CardStatExampleExtended() {
		oredCriteria = new ArrayList();
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TS_CARD_COMSUME_STAT
	 * @abatorgenerated  Mon Feb 02 17:58:55 CST 2015
	 */
	protected CardStatExampleExtended(CardStatExampleExtended example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TS_CARD_COMSUME_STAT
	 * @abatorgenerated  Mon Feb 02 17:58:55 CST 2015
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TS_CARD_COMSUME_STAT
	 * @abatorgenerated  Mon Feb 02 17:58:55 CST 2015
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TS_CARD_COMSUME_STAT
	 * @abatorgenerated  Mon Feb 02 17:58:55 CST 2015
	 */
	public List getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TS_CARD_COMSUME_STAT
	 * @abatorgenerated  Mon Feb 02 17:58:55 CST 2015
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TS_CARD_COMSUME_STAT
	 * @abatorgenerated  Mon Feb 02 17:58:55 CST 2015
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TS_CARD_COMSUME_STAT
	 * @abatorgenerated  Mon Feb 02 17:58:55 CST 2015
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TS_CARD_COMSUME_STAT
	 * @abatorgenerated  Mon Feb 02 17:58:55 CST 2015
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TS_CARD_COMSUME_STAT
	 * @abatorgenerated  Mon Feb 02 17:58:55 CST 2015
	 */
	public void setSelectedField(String selectedField) {
		this.selectedField = selectedField;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TS_CARD_COMSUME_STAT
	 * @abatorgenerated  Mon Feb 02 17:58:55 CST 2015
	 */
	public String getSelectedField() {
		return selectedField;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TS_CARD_COMSUME_STAT
	 * @abatorgenerated  Mon Feb 02 17:58:55 CST 2015
	 */
	public static String tableName() {
		return "TS_CARD_COMSUME_STAT";
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TS_CARD_COMSUME_STAT
	 * @abatorgenerated  Mon Feb 02 17:58:55 CST 2015
	 */
	public static String daoInterface() {
		return "com.ctfo.yppt.baseservice.dao.system.CardStatDAO";
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TS_CARD_COMSUME_STAT
	 * @abatorgenerated  Mon Feb 02 17:58:55 CST 2015
	 */
	public void setSkipNum(int skipNum) {
		this.skipNum = skipNum;
		this.endNum = this.skipNum + this.limitNum + 1;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TS_CARD_COMSUME_STAT
	 * @abatorgenerated  Mon Feb 02 17:58:55 CST 2015
	 */
	public int getSkipNum() {
		return this.skipNum;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TS_CARD_COMSUME_STAT
	 * @abatorgenerated  Mon Feb 02 17:58:55 CST 2015
	 */
	public void setEndNum(int endNum) {
		this.endNum = endNum;
		this.limitNum = this.endNum - this.skipNum - 1;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TS_CARD_COMSUME_STAT
	 * @abatorgenerated  Mon Feb 02 17:58:55 CST 2015
	 */
	public int getEndNum() {
		return this.endNum;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TS_CARD_COMSUME_STAT
	 * @abatorgenerated  Mon Feb 02 17:58:55 CST 2015
	 */
	public void setLimitNum(int limitNum) {
		this.limitNum = limitNum;
		this.endNum = this.skipNum + this.limitNum + 1;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TS_CARD_COMSUME_STAT
	 * @abatorgenerated  Mon Feb 02 17:58:55 CST 2015
	 */
	public int getLimitNum() {
		return this.limitNum;
	}

	/**
	 * This class was generated by Abator for iBATIS. This class corresponds to the database table TS_CARD_COMSUME_STAT
	 * @abatorgenerated  Mon Feb 02 17:58:55 CST 2015
	 */
	public static class Criteria implements Serializable {
		protected List criteriaWithoutValue;
		protected List criteriaWithSingleValue;
		protected List criteriaWithListValue;
		protected List criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList();
			criteriaWithSingleValue = new ArrayList();
			criteriaWithListValue = new ArrayList();
			criteriaWithBetweenValue = new ArrayList();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0
					|| criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition, List values,
				String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			List list = new ArrayList();
			list.add(value1);
			list.add(value2);
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		public Criteria andIdIsNull() {
			addCriterion("ID is null");
			return this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("ID is not null");
			return this;
		}

		public Criteria andIdEqualTo(String value) {
			addCriterion("ID =", value, "id");
			return this;
		}

		public Criteria andIdNotEqualTo(String value) {
			addCriterion("ID <>", value, "id");
			return this;
		}

		public Criteria andIdGreaterThan(String value) {
			addCriterion("ID >", value, "id");
			return this;
		}

		public Criteria andIdGreaterThanOrEqualTo(String value) {
			addCriterion("ID >=", value, "id");
			return this;
		}

		public Criteria andIdLessThan(String value) {
			addCriterion("ID <", value, "id");
			return this;
		}

		public Criteria andIdLessThanOrEqualTo(String value) {
			addCriterion("ID <=", value, "id");
			return this;
		}

		public Criteria andIdLike(String value) {
			addCriterion("ID like", value, "id");
			return this;
		}

		public Criteria andIdNotLike(String value) {
			addCriterion("ID not like", value, "id");
			return this;
		}

		public Criteria andIdIn(List values) {
			addCriterion("ID in", values, "id");
			return this;
		}

		public Criteria andIdNotIn(List values) {
			addCriterion("ID not in", values, "id");
			return this;
		}

		public Criteria andIdBetween(String value1, String value2) {
			addCriterion("ID between", value1, value2, "id");
			return this;
		}

		public Criteria andIdNotBetween(String value1, String value2) {
			addCriterion("ID not between", value1, value2, "id");
			return this;
		}

		public Criteria andCardIdIsNull() {
			addCriterion("CARD_ID is null");
			return this;
		}

		public Criteria andCardIdIsNotNull() {
			addCriterion("CARD_ID is not null");
			return this;
		}

		public Criteria andCardIdEqualTo(String value) {
			addCriterion("CARD_ID =", value, "cardId");
			return this;
		}

		public Criteria andCardIdNotEqualTo(String value) {
			addCriterion("CARD_ID <>", value, "cardId");
			return this;
		}

		public Criteria andCardIdGreaterThan(String value) {
			addCriterion("CARD_ID >", value, "cardId");
			return this;
		}

		public Criteria andCardIdGreaterThanOrEqualTo(String value) {
			addCriterion("CARD_ID >=", value, "cardId");
			return this;
		}

		public Criteria andCardIdLessThan(String value) {
			addCriterion("CARD_ID <", value, "cardId");
			return this;
		}

		public Criteria andCardIdLessThanOrEqualTo(String value) {
			addCriterion("CARD_ID <=", value, "cardId");
			return this;
		}

		public Criteria andCardIdLike(String value) {
			addCriterion("CARD_ID like", value, "cardId");
			return this;
		}

		public Criteria andCardIdNotLike(String value) {
			addCriterion("CARD_ID not like", value, "cardId");
			return this;
		}

		public Criteria andCardIdIn(List values) {
			addCriterion("CARD_ID in", values, "cardId");
			return this;
		}

		public Criteria andCardIdNotIn(List values) {
			addCriterion("CARD_ID not in", values, "cardId");
			return this;
		}

		public Criteria andCardIdBetween(String value1, String value2) {
			addCriterion("CARD_ID between", value1, value2, "cardId");
			return this;
		}

		public Criteria andCardIdNotBetween(String value1, String value2) {
			addCriterion("CARD_ID not between", value1, value2, "cardId");
			return this;
		}

		public Criteria andComsumeMoneyIsNull() {
			addCriterion("COMSUME_MONEY is null");
			return this;
		}

		public Criteria andComsumeMoneyIsNotNull() {
			addCriterion("COMSUME_MONEY is not null");
			return this;
		}

		public Criteria andComsumeMoneyEqualTo(BigDecimal value) {
			addCriterion("COMSUME_MONEY =", value, "comsumeMoney");
			return this;
		}

		public Criteria andComsumeMoneyNotEqualTo(BigDecimal value) {
			addCriterion("COMSUME_MONEY <>", value, "comsumeMoney");
			return this;
		}

		public Criteria andComsumeMoneyGreaterThan(BigDecimal value) {
			addCriterion("COMSUME_MONEY >", value, "comsumeMoney");
			return this;
		}

		public Criteria andComsumeMoneyGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("COMSUME_MONEY >=", value, "comsumeMoney");
			return this;
		}

		public Criteria andComsumeMoneyLessThan(BigDecimal value) {
			addCriterion("COMSUME_MONEY <", value, "comsumeMoney");
			return this;
		}

		public Criteria andComsumeMoneyLessThanOrEqualTo(BigDecimal value) {
			addCriterion("COMSUME_MONEY <=", value, "comsumeMoney");
			return this;
		}

		public Criteria andComsumeMoneyIn(List values) {
			addCriterion("COMSUME_MONEY in", values, "comsumeMoney");
			return this;
		}

		public Criteria andComsumeMoneyNotIn(List values) {
			addCriterion("COMSUME_MONEY not in", values, "comsumeMoney");
			return this;
		}

		public Criteria andComsumeMoneyBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("COMSUME_MONEY between", value1, value2,
					"comsumeMoney");
			return this;
		}

		public Criteria andComsumeMoneyNotBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("COMSUME_MONEY not between", value1, value2,
					"comsumeMoney");
			return this;
		}

		public Criteria andComsumeAllMoneyIsNull() {
			addCriterion("COMSUME_ALL_MONEY is null");
			return this;
		}

		public Criteria andComsumeAllMoneyIsNotNull() {
			addCriterion("COMSUME_ALL_MONEY is not null");
			return this;
		}

		public Criteria andComsumeAllMoneyEqualTo(BigDecimal value) {
			addCriterion("COMSUME_ALL_MONEY =", value, "comsumeAllMoney");
			return this;
		}

		public Criteria andComsumeAllMoneyNotEqualTo(BigDecimal value) {
			addCriterion("COMSUME_ALL_MONEY <>", value, "comsumeAllMoney");
			return this;
		}

		public Criteria andComsumeAllMoneyGreaterThan(BigDecimal value) {
			addCriterion("COMSUME_ALL_MONEY >", value, "comsumeAllMoney");
			return this;
		}

		public Criteria andComsumeAllMoneyGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("COMSUME_ALL_MONEY >=", value, "comsumeAllMoney");
			return this;
		}

		public Criteria andComsumeAllMoneyLessThan(BigDecimal value) {
			addCriterion("COMSUME_ALL_MONEY <", value, "comsumeAllMoney");
			return this;
		}

		public Criteria andComsumeAllMoneyLessThanOrEqualTo(BigDecimal value) {
			addCriterion("COMSUME_ALL_MONEY <=", value, "comsumeAllMoney");
			return this;
		}

		public Criteria andComsumeAllMoneyIn(List values) {
			addCriterion("COMSUME_ALL_MONEY in", values, "comsumeAllMoney");
			return this;
		}

		public Criteria andComsumeAllMoneyNotIn(List values) {
			addCriterion("COMSUME_ALL_MONEY not in", values, "comsumeAllMoney");
			return this;
		}

		public Criteria andComsumeAllMoneyBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("COMSUME_ALL_MONEY between", value1, value2,
					"comsumeAllMoney");
			return this;
		}

		public Criteria andComsumeAllMoneyNotBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("COMSUME_ALL_MONEY not between", value1, value2,
					"comsumeAllMoney");
			return this;
		}

		public Criteria andOilNumIsNull() {
			addCriterion("OIL_NUM is null");
			return this;
		}

		public Criteria andOilNumIsNotNull() {
			addCriterion("OIL_NUM is not null");
			return this;
		}

		public Criteria andOilNumEqualTo(BigDecimal value) {
			addCriterion("OIL_NUM =", value, "oilNum");
			return this;
		}

		public Criteria andOilNumNotEqualTo(BigDecimal value) {
			addCriterion("OIL_NUM <>", value, "oilNum");
			return this;
		}

		public Criteria andOilNumGreaterThan(BigDecimal value) {
			addCriterion("OIL_NUM >", value, "oilNum");
			return this;
		}

		public Criteria andOilNumGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("OIL_NUM >=", value, "oilNum");
			return this;
		}

		public Criteria andOilNumLessThan(BigDecimal value) {
			addCriterion("OIL_NUM <", value, "oilNum");
			return this;
		}

		public Criteria andOilNumLessThanOrEqualTo(BigDecimal value) {
			addCriterion("OIL_NUM <=", value, "oilNum");
			return this;
		}

		public Criteria andOilNumIn(List values) {
			addCriterion("OIL_NUM in", values, "oilNum");
			return this;
		}

		public Criteria andOilNumNotIn(List values) {
			addCriterion("OIL_NUM not in", values, "oilNum");
			return this;
		}

		public Criteria andOilNumBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("OIL_NUM between", value1, value2, "oilNum");
			return this;
		}

		public Criteria andOilNumNotBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("OIL_NUM not between", value1, value2, "oilNum");
			return this;
		}

		public Criteria andLastMonthComsumeMoneyIsNull() {
			addCriterion("LAST_MONTH_COMSUME_MONEY is null");
			return this;
		}

		public Criteria andLastMonthComsumeMoneyIsNotNull() {
			addCriterion("LAST_MONTH_COMSUME_MONEY is not null");
			return this;
		}

		public Criteria andLastMonthComsumeMoneyEqualTo(BigDecimal value) {
			addCriterion("LAST_MONTH_COMSUME_MONEY =", value,
					"lastMonthComsumeMoney");
			return this;
		}

		public Criteria andLastMonthComsumeMoneyNotEqualTo(BigDecimal value) {
			addCriterion("LAST_MONTH_COMSUME_MONEY <>", value,
					"lastMonthComsumeMoney");
			return this;
		}

		public Criteria andLastMonthComsumeMoneyGreaterThan(BigDecimal value) {
			addCriterion("LAST_MONTH_COMSUME_MONEY >", value,
					"lastMonthComsumeMoney");
			return this;
		}

		public Criteria andLastMonthComsumeMoneyGreaterThanOrEqualTo(
				BigDecimal value) {
			addCriterion("LAST_MONTH_COMSUME_MONEY >=", value,
					"lastMonthComsumeMoney");
			return this;
		}

		public Criteria andLastMonthComsumeMoneyLessThan(BigDecimal value) {
			addCriterion("LAST_MONTH_COMSUME_MONEY <", value,
					"lastMonthComsumeMoney");
			return this;
		}

		public Criteria andLastMonthComsumeMoneyLessThanOrEqualTo(
				BigDecimal value) {
			addCriterion("LAST_MONTH_COMSUME_MONEY <=", value,
					"lastMonthComsumeMoney");
			return this;
		}

		public Criteria andLastMonthComsumeMoneyIn(List values) {
			addCriterion("LAST_MONTH_COMSUME_MONEY in", values,
					"lastMonthComsumeMoney");
			return this;
		}

		public Criteria andLastMonthComsumeMoneyNotIn(List values) {
			addCriterion("LAST_MONTH_COMSUME_MONEY not in", values,
					"lastMonthComsumeMoney");
			return this;
		}

		public Criteria andLastMonthComsumeMoneyBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("LAST_MONTH_COMSUME_MONEY between", value1, value2,
					"lastMonthComsumeMoney");
			return this;
		}

		public Criteria andLastMonthComsumeMoneyNotBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("LAST_MONTH_COMSUME_MONEY not between", value1,
					value2, "lastMonthComsumeMoney");
			return this;
		}

		public Criteria andLastMonthOilNumIsNull() {
			addCriterion("LAST_MONTH_OIL_NUM is null");
			return this;
		}

		public Criteria andLastMonthOilNumIsNotNull() {
			addCriterion("LAST_MONTH_OIL_NUM is not null");
			return this;
		}

		public Criteria andLastMonthOilNumEqualTo(BigDecimal value) {
			addCriterion("LAST_MONTH_OIL_NUM =", value, "lastMonthOilNum");
			return this;
		}

		public Criteria andLastMonthOilNumNotEqualTo(BigDecimal value) {
			addCriterion("LAST_MONTH_OIL_NUM <>", value, "lastMonthOilNum");
			return this;
		}

		public Criteria andLastMonthOilNumGreaterThan(BigDecimal value) {
			addCriterion("LAST_MONTH_OIL_NUM >", value, "lastMonthOilNum");
			return this;
		}

		public Criteria andLastMonthOilNumGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("LAST_MONTH_OIL_NUM >=", value, "lastMonthOilNum");
			return this;
		}

		public Criteria andLastMonthOilNumLessThan(BigDecimal value) {
			addCriterion("LAST_MONTH_OIL_NUM <", value, "lastMonthOilNum");
			return this;
		}

		public Criteria andLastMonthOilNumLessThanOrEqualTo(BigDecimal value) {
			addCriterion("LAST_MONTH_OIL_NUM <=", value, "lastMonthOilNum");
			return this;
		}

		public Criteria andLastMonthOilNumIn(List values) {
			addCriterion("LAST_MONTH_OIL_NUM in", values, "lastMonthOilNum");
			return this;
		}

		public Criteria andLastMonthOilNumNotIn(List values) {
			addCriterion("LAST_MONTH_OIL_NUM not in", values, "lastMonthOilNum");
			return this;
		}

		public Criteria andLastMonthOilNumBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("LAST_MONTH_OIL_NUM between", value1, value2,
					"lastMonthOilNum");
			return this;
		}

		public Criteria andLastMonthOilNumNotBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("LAST_MONTH_OIL_NUM not between", value1, value2,
					"lastMonthOilNum");
			return this;
		}

		public Criteria andLastMonthComsumeAllMoneyIsNull() {
			addCriterion("LAST_MONTH_COMSUME_ALL_MONEY is null");
			return this;
		}

		public Criteria andLastMonthComsumeAllMoneyIsNotNull() {
			addCriterion("LAST_MONTH_COMSUME_ALL_MONEY is not null");
			return this;
		}

		public Criteria andLastMonthComsumeAllMoneyEqualTo(BigDecimal value) {
			addCriterion("LAST_MONTH_COMSUME_ALL_MONEY =", value,
					"lastMonthComsumeAllMoney");
			return this;
		}

		public Criteria andLastMonthComsumeAllMoneyNotEqualTo(BigDecimal value) {
			addCriterion("LAST_MONTH_COMSUME_ALL_MONEY <>", value,
					"lastMonthComsumeAllMoney");
			return this;
		}

		public Criteria andLastMonthComsumeAllMoneyGreaterThan(BigDecimal value) {
			addCriterion("LAST_MONTH_COMSUME_ALL_MONEY >", value,
					"lastMonthComsumeAllMoney");
			return this;
		}

		public Criteria andLastMonthComsumeAllMoneyGreaterThanOrEqualTo(
				BigDecimal value) {
			addCriterion("LAST_MONTH_COMSUME_ALL_MONEY >=", value,
					"lastMonthComsumeAllMoney");
			return this;
		}

		public Criteria andLastMonthComsumeAllMoneyLessThan(BigDecimal value) {
			addCriterion("LAST_MONTH_COMSUME_ALL_MONEY <", value,
					"lastMonthComsumeAllMoney");
			return this;
		}

		public Criteria andLastMonthComsumeAllMoneyLessThanOrEqualTo(
				BigDecimal value) {
			addCriterion("LAST_MONTH_COMSUME_ALL_MONEY <=", value,
					"lastMonthComsumeAllMoney");
			return this;
		}

		public Criteria andLastMonthComsumeAllMoneyIn(List values) {
			addCriterion("LAST_MONTH_COMSUME_ALL_MONEY in", values,
					"lastMonthComsumeAllMoney");
			return this;
		}

		public Criteria andLastMonthComsumeAllMoneyNotIn(List values) {
			addCriterion("LAST_MONTH_COMSUME_ALL_MONEY not in", values,
					"lastMonthComsumeAllMoney");
			return this;
		}

		public Criteria andLastMonthComsumeAllMoneyBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("LAST_MONTH_COMSUME_ALL_MONEY between", value1,
					value2, "lastMonthComsumeAllMoney");
			return this;
		}

		public Criteria andLastMonthComsumeAllMoneyNotBetween(
				BigDecimal value1, BigDecimal value2) {
			addCriterion("LAST_MONTH_COMSUME_ALL_MONEY not between", value1,
					value2, "lastMonthComsumeAllMoney");
			return this;
		}

		public Criteria andUpdateTimeIsNull() {
			addCriterion("UPDATE_TIME is null");
			return this;
		}

		public Criteria andUpdateTimeIsNotNull() {
			addCriterion("UPDATE_TIME is not null");
			return this;
		}

		public Criteria andUpdateTimeEqualTo(Long value) {
			addCriterion("UPDATE_TIME =", value, "updateTime");
			return this;
		}

		public Criteria andUpdateTimeNotEqualTo(Long value) {
			addCriterion("UPDATE_TIME <>", value, "updateTime");
			return this;
		}

		public Criteria andUpdateTimeGreaterThan(Long value) {
			addCriterion("UPDATE_TIME >", value, "updateTime");
			return this;
		}

		public Criteria andUpdateTimeGreaterThanOrEqualTo(Long value) {
			addCriterion("UPDATE_TIME >=", value, "updateTime");
			return this;
		}

		public Criteria andUpdateTimeLessThan(Long value) {
			addCriterion("UPDATE_TIME <", value, "updateTime");
			return this;
		}

		public Criteria andUpdateTimeLessThanOrEqualTo(Long value) {
			addCriterion("UPDATE_TIME <=", value, "updateTime");
			return this;
		}

		public Criteria andUpdateTimeIn(List values) {
			addCriterion("UPDATE_TIME in", values, "updateTime");
			return this;
		}

		public Criteria andUpdateTimeNotIn(List values) {
			addCriterion("UPDATE_TIME not in", values, "updateTime");
			return this;
		}

		public Criteria andUpdateTimeBetween(Long value1, Long value2) {
			addCriterion("UPDATE_TIME between", value1, value2, "updateTime");
			return this;
		}

		public Criteria andUpdateTimeNotBetween(Long value1, Long value2) {
			addCriterion("UPDATE_TIME not between", value1, value2,
					"updateTime");
			return this;
		}
	}
}