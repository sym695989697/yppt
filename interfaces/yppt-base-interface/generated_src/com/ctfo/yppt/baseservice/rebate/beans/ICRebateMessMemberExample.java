package com.ctfo.yppt.baseservice.rebate.beans;

import java.io.Serializable;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ICRebateMessMemberExample implements Serializable {

	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to the database table TB_IC_REBATE_MESS_USER
	 * @abatorgenerated  Wed Jan 21 20:45:54 CST 2015
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to the database table TB_IC_REBATE_MESS_USER
	 * @abatorgenerated  Wed Jan 21 20:45:54 CST 2015
	 */
	protected List oredCriteria;
	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to the database table TB_IC_REBATE_MESS_USER
	 * @abatorgenerated  Wed Jan 21 20:45:54 CST 2015
	 */
	protected int skipNum;
	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to the database table TB_IC_REBATE_MESS_USER
	 * @abatorgenerated  Wed Jan 21 20:45:54 CST 2015
	 */
	protected int endNum;
	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to the database table TB_IC_REBATE_MESS_USER
	 * @abatorgenerated  Wed Jan 21 20:45:54 CST 2015
	 */
	protected int limitNum;

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_IC_REBATE_MESS_USER
	 * @abatorgenerated  Wed Jan 21 20:45:54 CST 2015
	 */
	public ICRebateMessMemberExample() {
		oredCriteria = new ArrayList();
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_IC_REBATE_MESS_USER
	 * @abatorgenerated  Wed Jan 21 20:45:54 CST 2015
	 */
	protected ICRebateMessMemberExample(ICRebateMessMemberExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_IC_REBATE_MESS_USER
	 * @abatorgenerated  Wed Jan 21 20:45:54 CST 2015
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_IC_REBATE_MESS_USER
	 * @abatorgenerated  Wed Jan 21 20:45:54 CST 2015
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_IC_REBATE_MESS_USER
	 * @abatorgenerated  Wed Jan 21 20:45:54 CST 2015
	 */
	public List getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_IC_REBATE_MESS_USER
	 * @abatorgenerated  Wed Jan 21 20:45:54 CST 2015
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_IC_REBATE_MESS_USER
	 * @abatorgenerated  Wed Jan 21 20:45:54 CST 2015
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_IC_REBATE_MESS_USER
	 * @abatorgenerated  Wed Jan 21 20:45:54 CST 2015
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_IC_REBATE_MESS_USER
	 * @abatorgenerated  Wed Jan 21 20:45:54 CST 2015
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_IC_REBATE_MESS_USER
	 * @abatorgenerated  Wed Jan 21 20:45:54 CST 2015
	 */
	public static String tableName() {
		return "TB_IC_REBATE_MESS_USER";
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_IC_REBATE_MESS_USER
	 * @abatorgenerated  Wed Jan 21 20:45:54 CST 2015
	 */
	public static String daoInterface() {
		return "com.ctfo.yppt.baseservice.dao.rebate.ICRebateMessMemberDAO";
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_IC_REBATE_MESS_USER
	 * @abatorgenerated  Wed Jan 21 20:45:54 CST 2015
	 */
	public void setSkipNum(int skipNum) {
		this.skipNum = skipNum;
		this.endNum = this.skipNum + this.limitNum + 1;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_IC_REBATE_MESS_USER
	 * @abatorgenerated  Wed Jan 21 20:45:54 CST 2015
	 */
	public int getSkipNum() {
		return this.skipNum;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_IC_REBATE_MESS_USER
	 * @abatorgenerated  Wed Jan 21 20:45:54 CST 2015
	 */
	public void setEndNum(int endNum) {
		this.endNum = endNum;
		this.limitNum = this.endNum - this.skipNum - 1;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_IC_REBATE_MESS_USER
	 * @abatorgenerated  Wed Jan 21 20:45:54 CST 2015
	 */
	public int getEndNum() {
		return this.endNum;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_IC_REBATE_MESS_USER
	 * @abatorgenerated  Wed Jan 21 20:45:54 CST 2015
	 */
	public void setLimitNum(int limitNum) {
		this.limitNum = limitNum;
		this.endNum = this.skipNum + this.limitNum + 1;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_IC_REBATE_MESS_USER
	 * @abatorgenerated  Wed Jan 21 20:45:54 CST 2015
	 */
	public int getLimitNum() {
		return this.limitNum;
	}

	/**
	 * This class was generated by Abator for iBATIS. This class corresponds to the database table TB_IC_REBATE_MESS_USER
	 * @abatorgenerated  Wed Jan 21 20:45:54 CST 2015
	 */
	public static class Criteria implements Serializable {
		protected List criteriaWithoutValue;
		protected List criteriaWithSingleValue;
		protected List criteriaWithListValue;
		protected List criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList();
			criteriaWithSingleValue = new ArrayList();
			criteriaWithListValue = new ArrayList();
			criteriaWithBetweenValue = new ArrayList();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0
					|| criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition, List values,
				String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			List list = new ArrayList();
			list.add(value1);
			list.add(value2);
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		public Criteria andIdIsNull() {
			addCriterion("ID is null");
			return this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("ID is not null");
			return this;
		}

		public Criteria andIdEqualTo(String value) {
			addCriterion("ID =", value, "id");
			return this;
		}

		public Criteria andIdNotEqualTo(String value) {
			addCriterion("ID <>", value, "id");
			return this;
		}

		public Criteria andIdGreaterThan(String value) {
			addCriterion("ID >", value, "id");
			return this;
		}

		public Criteria andIdGreaterThanOrEqualTo(String value) {
			addCriterion("ID >=", value, "id");
			return this;
		}

		public Criteria andIdLessThan(String value) {
			addCriterion("ID <", value, "id");
			return this;
		}

		public Criteria andIdLessThanOrEqualTo(String value) {
			addCriterion("ID <=", value, "id");
			return this;
		}

		public Criteria andIdLike(String value) {
			addCriterion("ID like", value, "id");
			return this;
		}

		public Criteria andIdNotLike(String value) {
			addCriterion("ID not like", value, "id");
			return this;
		}

		public Criteria andIdIn(List values) {
			addCriterion("ID in", values, "id");
			return this;
		}

		public Criteria andIdNotIn(List values) {
			addCriterion("ID not in", values, "id");
			return this;
		}

		public Criteria andIdBetween(String value1, String value2) {
			addCriterion("ID between", value1, value2, "id");
			return this;
		}

		public Criteria andIdNotBetween(String value1, String value2) {
			addCriterion("ID not between", value1, value2, "id");
			return this;
		}

		public Criteria andUserIdIsNull() {
			addCriterion("USER_ID is null");
			return this;
		}

		public Criteria andUserIdIsNotNull() {
			addCriterion("USER_ID is not null");
			return this;
		}

		public Criteria andUserIdEqualTo(String value) {
			addCriterion("USER_ID =", value, "userId");
			return this;
		}

		public Criteria andUserIdNotEqualTo(String value) {
			addCriterion("USER_ID <>", value, "userId");
			return this;
		}

		public Criteria andUserIdGreaterThan(String value) {
			addCriterion("USER_ID >", value, "userId");
			return this;
		}

		public Criteria andUserIdGreaterThanOrEqualTo(String value) {
			addCriterion("USER_ID >=", value, "userId");
			return this;
		}

		public Criteria andUserIdLessThan(String value) {
			addCriterion("USER_ID <", value, "userId");
			return this;
		}

		public Criteria andUserIdLessThanOrEqualTo(String value) {
			addCriterion("USER_ID <=", value, "userId");
			return this;
		}

		public Criteria andUserIdLike(String value) {
			addCriterion("USER_ID like", value, "userId");
			return this;
		}

		public Criteria andUserIdNotLike(String value) {
			addCriterion("USER_ID not like", value, "userId");
			return this;
		}

		public Criteria andUserIdIn(List values) {
			addCriterion("USER_ID in", values, "userId");
			return this;
		}

		public Criteria andUserIdNotIn(List values) {
			addCriterion("USER_ID not in", values, "userId");
			return this;
		}

		public Criteria andUserIdBetween(String value1, String value2) {
			addCriterion("USER_ID between", value1, value2, "userId");
			return this;
		}

		public Criteria andUserIdNotBetween(String value1, String value2) {
			addCriterion("USER_ID not between", value1, value2, "userId");
			return this;
		}

		public Criteria andUserTypeIsNull() {
			addCriterion("USER_TYPE is null");
			return this;
		}

		public Criteria andUserTypeIsNotNull() {
			addCriterion("USER_TYPE is not null");
			return this;
		}

		public Criteria andUserTypeEqualTo(String value) {
			addCriterion("USER_TYPE =", value, "userType");
			return this;
		}

		public Criteria andUserTypeNotEqualTo(String value) {
			addCriterion("USER_TYPE <>", value, "userType");
			return this;
		}

		public Criteria andUserTypeGreaterThan(String value) {
			addCriterion("USER_TYPE >", value, "userType");
			return this;
		}

		public Criteria andUserTypeGreaterThanOrEqualTo(String value) {
			addCriterion("USER_TYPE >=", value, "userType");
			return this;
		}

		public Criteria andUserTypeLessThan(String value) {
			addCriterion("USER_TYPE <", value, "userType");
			return this;
		}

		public Criteria andUserTypeLessThanOrEqualTo(String value) {
			addCriterion("USER_TYPE <=", value, "userType");
			return this;
		}

		public Criteria andUserTypeLike(String value) {
			addCriterion("USER_TYPE like", value, "userType");
			return this;
		}

		public Criteria andUserTypeNotLike(String value) {
			addCriterion("USER_TYPE not like", value, "userType");
			return this;
		}

		public Criteria andUserTypeIn(List values) {
			addCriterion("USER_TYPE in", values, "userType");
			return this;
		}

		public Criteria andUserTypeNotIn(List values) {
			addCriterion("USER_TYPE not in", values, "userType");
			return this;
		}

		public Criteria andUserTypeBetween(String value1, String value2) {
			addCriterion("USER_TYPE between", value1, value2, "userType");
			return this;
		}

		public Criteria andUserTypeNotBetween(String value1, String value2) {
			addCriterion("USER_TYPE not between", value1, value2, "userType");
			return this;
		}

		public Criteria andUserNameIsNull() {
			addCriterion("USER_NAME is null");
			return this;
		}

		public Criteria andUserNameIsNotNull() {
			addCriterion("USER_NAME is not null");
			return this;
		}

		public Criteria andUserNameEqualTo(String value) {
			addCriterion("USER_NAME =", value, "userName");
			return this;
		}

		public Criteria andUserNameNotEqualTo(String value) {
			addCriterion("USER_NAME <>", value, "userName");
			return this;
		}

		public Criteria andUserNameGreaterThan(String value) {
			addCriterion("USER_NAME >", value, "userName");
			return this;
		}

		public Criteria andUserNameGreaterThanOrEqualTo(String value) {
			addCriterion("USER_NAME >=", value, "userName");
			return this;
		}

		public Criteria andUserNameLessThan(String value) {
			addCriterion("USER_NAME <", value, "userName");
			return this;
		}

		public Criteria andUserNameLessThanOrEqualTo(String value) {
			addCriterion("USER_NAME <=", value, "userName");
			return this;
		}

		public Criteria andUserNameLike(String value) {
			addCriterion("USER_NAME like", value, "userName");
			return this;
		}

		public Criteria andUserNameNotLike(String value) {
			addCriterion("USER_NAME not like", value, "userName");
			return this;
		}

		public Criteria andUserNameIn(List values) {
			addCriterion("USER_NAME in", values, "userName");
			return this;
		}

		public Criteria andUserNameNotIn(List values) {
			addCriterion("USER_NAME not in", values, "userName");
			return this;
		}

		public Criteria andUserNameBetween(String value1, String value2) {
			addCriterion("USER_NAME between", value1, value2, "userName");
			return this;
		}

		public Criteria andUserNameNotBetween(String value1, String value2) {
			addCriterion("USER_NAME not between", value1, value2, "userName");
			return this;
		}

		public Criteria andAccountdateIsNull() {
			addCriterion("ACCOUNTDATE is null");
			return this;
		}

		public Criteria andAccountdateIsNotNull() {
			addCriterion("ACCOUNTDATE is not null");
			return this;
		}

		public Criteria andAccountdateEqualTo(String value) {
			addCriterion("ACCOUNTDATE =", value, "accountdate");
			return this;
		}

		public Criteria andAccountdateNotEqualTo(String value) {
			addCriterion("ACCOUNTDATE <>", value, "accountdate");
			return this;
		}

		public Criteria andAccountdateGreaterThan(String value) {
			addCriterion("ACCOUNTDATE >", value, "accountdate");
			return this;
		}

		public Criteria andAccountdateGreaterThanOrEqualTo(String value) {
			addCriterion("ACCOUNTDATE >=", value, "accountdate");
			return this;
		}

		public Criteria andAccountdateLessThan(String value) {
			addCriterion("ACCOUNTDATE <", value, "accountdate");
			return this;
		}

		public Criteria andAccountdateLessThanOrEqualTo(String value) {
			addCriterion("ACCOUNTDATE <=", value, "accountdate");
			return this;
		}

		public Criteria andAccountdateLike(String value) {
			addCriterion("ACCOUNTDATE like", value, "accountdate");
			return this;
		}

		public Criteria andAccountdateNotLike(String value) {
			addCriterion("ACCOUNTDATE not like", value, "accountdate");
			return this;
		}

		public Criteria andAccountdateIn(List values) {
			addCriterion("ACCOUNTDATE in", values, "accountdate");
			return this;
		}

		public Criteria andAccountdateNotIn(List values) {
			addCriterion("ACCOUNTDATE not in", values, "accountdate");
			return this;
		}

		public Criteria andAccountdateBetween(String value1, String value2) {
			addCriterion("ACCOUNTDATE between", value1, value2, "accountdate");
			return this;
		}

		public Criteria andAccountdateNotBetween(String value1, String value2) {
			addCriterion("ACCOUNTDATE not between", value1, value2,
					"accountdate");
			return this;
		}

		public Criteria andAccountStartDateIsNull() {
			addCriterion("ACCOUNT_START_DATE is null");
			return this;
		}

		public Criteria andAccountStartDateIsNotNull() {
			addCriterion("ACCOUNT_START_DATE is not null");
			return this;
		}

		public Criteria andAccountStartDateEqualTo(Long value) {
			addCriterion("ACCOUNT_START_DATE =", value, "accountStartDate");
			return this;
		}

		public Criteria andAccountStartDateNotEqualTo(Long value) {
			addCriterion("ACCOUNT_START_DATE <>", value, "accountStartDate");
			return this;
		}

		public Criteria andAccountStartDateGreaterThan(Long value) {
			addCriterion("ACCOUNT_START_DATE >", value, "accountStartDate");
			return this;
		}

		public Criteria andAccountStartDateGreaterThanOrEqualTo(Long value) {
			addCriterion("ACCOUNT_START_DATE >=", value, "accountStartDate");
			return this;
		}

		public Criteria andAccountStartDateLessThan(Long value) {
			addCriterion("ACCOUNT_START_DATE <", value, "accountStartDate");
			return this;
		}

		public Criteria andAccountStartDateLessThanOrEqualTo(Long value) {
			addCriterion("ACCOUNT_START_DATE <=", value, "accountStartDate");
			return this;
		}

		public Criteria andAccountStartDateIn(List values) {
			addCriterion("ACCOUNT_START_DATE in", values, "accountStartDate");
			return this;
		}

		public Criteria andAccountStartDateNotIn(List values) {
			addCriterion("ACCOUNT_START_DATE not in", values,
					"accountStartDate");
			return this;
		}

		public Criteria andAccountStartDateBetween(Long value1, Long value2) {
			addCriterion("ACCOUNT_START_DATE between", value1, value2,
					"accountStartDate");
			return this;
		}

		public Criteria andAccountStartDateNotBetween(Long value1, Long value2) {
			addCriterion("ACCOUNT_START_DATE not between", value1, value2,
					"accountStartDate");
			return this;
		}

		public Criteria andAccountEndDateIsNull() {
			addCriterion("ACCOUNT_END_DATE is null");
			return this;
		}

		public Criteria andAccountEndDateIsNotNull() {
			addCriterion("ACCOUNT_END_DATE is not null");
			return this;
		}

		public Criteria andAccountEndDateEqualTo(Long value) {
			addCriterion("ACCOUNT_END_DATE =", value, "accountEndDate");
			return this;
		}

		public Criteria andAccountEndDateNotEqualTo(Long value) {
			addCriterion("ACCOUNT_END_DATE <>", value, "accountEndDate");
			return this;
		}

		public Criteria andAccountEndDateGreaterThan(Long value) {
			addCriterion("ACCOUNT_END_DATE >", value, "accountEndDate");
			return this;
		}

		public Criteria andAccountEndDateGreaterThanOrEqualTo(Long value) {
			addCriterion("ACCOUNT_END_DATE >=", value, "accountEndDate");
			return this;
		}

		public Criteria andAccountEndDateLessThan(Long value) {
			addCriterion("ACCOUNT_END_DATE <", value, "accountEndDate");
			return this;
		}

		public Criteria andAccountEndDateLessThanOrEqualTo(Long value) {
			addCriterion("ACCOUNT_END_DATE <=", value, "accountEndDate");
			return this;
		}

		public Criteria andAccountEndDateIn(List values) {
			addCriterion("ACCOUNT_END_DATE in", values, "accountEndDate");
			return this;
		}

		public Criteria andAccountEndDateNotIn(List values) {
			addCriterion("ACCOUNT_END_DATE not in", values, "accountEndDate");
			return this;
		}

		public Criteria andAccountEndDateBetween(Long value1, Long value2) {
			addCriterion("ACCOUNT_END_DATE between", value1, value2,
					"accountEndDate");
			return this;
		}

		public Criteria andAccountEndDateNotBetween(Long value1, Long value2) {
			addCriterion("ACCOUNT_END_DATE not between", value1, value2,
					"accountEndDate");
			return this;
		}

		public Criteria andTotalMoneyIsNull() {
			addCriterion("TOTAL_MONEY is null");
			return this;
		}

		public Criteria andTotalMoneyIsNotNull() {
			addCriterion("TOTAL_MONEY is not null");
			return this;
		}

		public Criteria andTotalMoneyEqualTo(Long value) {
			addCriterion("TOTAL_MONEY =", value, "totalMoney");
			return this;
		}

		public Criteria andTotalMoneyNotEqualTo(Long value) {
			addCriterion("TOTAL_MONEY <>", value, "totalMoney");
			return this;
		}

		public Criteria andTotalMoneyGreaterThan(Long value) {
			addCriterion("TOTAL_MONEY >", value, "totalMoney");
			return this;
		}

		public Criteria andTotalMoneyGreaterThanOrEqualTo(Long value) {
			addCriterion("TOTAL_MONEY >=", value, "totalMoney");
			return this;
		}

		public Criteria andTotalMoneyLessThan(Long value) {
			addCriterion("TOTAL_MONEY <", value, "totalMoney");
			return this;
		}

		public Criteria andTotalMoneyLessThanOrEqualTo(Long value) {
			addCriterion("TOTAL_MONEY <=", value, "totalMoney");
			return this;
		}

		public Criteria andTotalMoneyIn(List values) {
			addCriterion("TOTAL_MONEY in", values, "totalMoney");
			return this;
		}

		public Criteria andTotalMoneyNotIn(List values) {
			addCriterion("TOTAL_MONEY not in", values, "totalMoney");
			return this;
		}

		public Criteria andTotalMoneyBetween(Long value1, Long value2) {
			addCriterion("TOTAL_MONEY between", value1, value2, "totalMoney");
			return this;
		}

		public Criteria andTotalMoneyNotBetween(Long value1, Long value2) {
			addCriterion("TOTAL_MONEY not between", value1, value2,
					"totalMoney");
			return this;
		}

		public Criteria andTotalNumIsNull() {
			addCriterion("TOTAL_NUM is null");
			return this;
		}

		public Criteria andTotalNumIsNotNull() {
			addCriterion("TOTAL_NUM is not null");
			return this;
		}

		public Criteria andTotalNumEqualTo(BigDecimal value) {
			addCriterion("TOTAL_NUM =", value, "totalNum");
			return this;
		}

		public Criteria andTotalNumNotEqualTo(BigDecimal value) {
			addCriterion("TOTAL_NUM <>", value, "totalNum");
			return this;
		}

		public Criteria andTotalNumGreaterThan(BigDecimal value) {
			addCriterion("TOTAL_NUM >", value, "totalNum");
			return this;
		}

		public Criteria andTotalNumGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("TOTAL_NUM >=", value, "totalNum");
			return this;
		}

		public Criteria andTotalNumLessThan(BigDecimal value) {
			addCriterion("TOTAL_NUM <", value, "totalNum");
			return this;
		}

		public Criteria andTotalNumLessThanOrEqualTo(BigDecimal value) {
			addCriterion("TOTAL_NUM <=", value, "totalNum");
			return this;
		}

		public Criteria andTotalNumIn(List values) {
			addCriterion("TOTAL_NUM in", values, "totalNum");
			return this;
		}

		public Criteria andTotalNumNotIn(List values) {
			addCriterion("TOTAL_NUM not in", values, "totalNum");
			return this;
		}

		public Criteria andTotalNumBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("TOTAL_NUM between", value1, value2, "totalNum");
			return this;
		}

		public Criteria andTotalNumNotBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("TOTAL_NUM not between", value1, value2, "totalNum");
			return this;
		}

		public Criteria andRebateMoneyIsNull() {
			addCriterion("REBATE_MONEY is null");
			return this;
		}

		public Criteria andRebateMoneyIsNotNull() {
			addCriterion("REBATE_MONEY is not null");
			return this;
		}

		public Criteria andRebateMoneyEqualTo(Long value) {
			addCriterion("REBATE_MONEY =", value, "rebateMoney");
			return this;
		}

		public Criteria andRebateMoneyNotEqualTo(Long value) {
			addCriterion("REBATE_MONEY <>", value, "rebateMoney");
			return this;
		}

		public Criteria andRebateMoneyGreaterThan(Long value) {
			addCriterion("REBATE_MONEY >", value, "rebateMoney");
			return this;
		}

		public Criteria andRebateMoneyGreaterThanOrEqualTo(Long value) {
			addCriterion("REBATE_MONEY >=", value, "rebateMoney");
			return this;
		}

		public Criteria andRebateMoneyLessThan(Long value) {
			addCriterion("REBATE_MONEY <", value, "rebateMoney");
			return this;
		}

		public Criteria andRebateMoneyLessThanOrEqualTo(Long value) {
			addCriterion("REBATE_MONEY <=", value, "rebateMoney");
			return this;
		}

		public Criteria andRebateMoneyIn(List values) {
			addCriterion("REBATE_MONEY in", values, "rebateMoney");
			return this;
		}

		public Criteria andRebateMoneyNotIn(List values) {
			addCriterion("REBATE_MONEY not in", values, "rebateMoney");
			return this;
		}

		public Criteria andRebateMoneyBetween(Long value1, Long value2) {
			addCriterion("REBATE_MONEY between", value1, value2, "rebateMoney");
			return this;
		}

		public Criteria andRebateMoneyNotBetween(Long value1, Long value2) {
			addCriterion("REBATE_MONEY not between", value1, value2,
					"rebateMoney");
			return this;
		}

		public Criteria andCardNumIsNull() {
			addCriterion("CARD_NUM is null");
			return this;
		}

		public Criteria andCardNumIsNotNull() {
			addCriterion("CARD_NUM is not null");
			return this;
		}

		public Criteria andCardNumEqualTo(Integer value) {
			addCriterion("CARD_NUM =", value, "cardNum");
			return this;
		}

		public Criteria andCardNumNotEqualTo(Integer value) {
			addCriterion("CARD_NUM <>", value, "cardNum");
			return this;
		}

		public Criteria andCardNumGreaterThan(Integer value) {
			addCriterion("CARD_NUM >", value, "cardNum");
			return this;
		}

		public Criteria andCardNumGreaterThanOrEqualTo(Integer value) {
			addCriterion("CARD_NUM >=", value, "cardNum");
			return this;
		}

		public Criteria andCardNumLessThan(Integer value) {
			addCriterion("CARD_NUM <", value, "cardNum");
			return this;
		}

		public Criteria andCardNumLessThanOrEqualTo(Integer value) {
			addCriterion("CARD_NUM <=", value, "cardNum");
			return this;
		}

		public Criteria andCardNumIn(List values) {
			addCriterion("CARD_NUM in", values, "cardNum");
			return this;
		}

		public Criteria andCardNumNotIn(List values) {
			addCriterion("CARD_NUM not in", values, "cardNum");
			return this;
		}

		public Criteria andCardNumBetween(Integer value1, Integer value2) {
			addCriterion("CARD_NUM between", value1, value2, "cardNum");
			return this;
		}

		public Criteria andCardNumNotBetween(Integer value1, Integer value2) {
			addCriterion("CARD_NUM not between", value1, value2, "cardNum");
			return this;
		}

		public Criteria andApplyTimeIsNull() {
			addCriterion("APPLY_TIME is null");
			return this;
		}

		public Criteria andApplyTimeIsNotNull() {
			addCriterion("APPLY_TIME is not null");
			return this;
		}

		public Criteria andApplyTimeEqualTo(Long value) {
			addCriterion("APPLY_TIME =", value, "applyTime");
			return this;
		}

		public Criteria andApplyTimeNotEqualTo(Long value) {
			addCriterion("APPLY_TIME <>", value, "applyTime");
			return this;
		}

		public Criteria andApplyTimeGreaterThan(Long value) {
			addCriterion("APPLY_TIME >", value, "applyTime");
			return this;
		}

		public Criteria andApplyTimeGreaterThanOrEqualTo(Long value) {
			addCriterion("APPLY_TIME >=", value, "applyTime");
			return this;
		}

		public Criteria andApplyTimeLessThan(Long value) {
			addCriterion("APPLY_TIME <", value, "applyTime");
			return this;
		}

		public Criteria andApplyTimeLessThanOrEqualTo(Long value) {
			addCriterion("APPLY_TIME <=", value, "applyTime");
			return this;
		}

		public Criteria andApplyTimeIn(List values) {
			addCriterion("APPLY_TIME in", values, "applyTime");
			return this;
		}

		public Criteria andApplyTimeNotIn(List values) {
			addCriterion("APPLY_TIME not in", values, "applyTime");
			return this;
		}

		public Criteria andApplyTimeBetween(Long value1, Long value2) {
			addCriterion("APPLY_TIME between", value1, value2, "applyTime");
			return this;
		}

		public Criteria andApplyTimeNotBetween(Long value1, Long value2) {
			addCriterion("APPLY_TIME not between", value1, value2, "applyTime");
			return this;
		}

		public Criteria andSelltyStateIsNull() {
			addCriterion("SELLTY_STATE is null");
			return this;
		}

		public Criteria andSelltyStateIsNotNull() {
			addCriterion("SELLTY_STATE is not null");
			return this;
		}

		public Criteria andSelltyStateEqualTo(String value) {
			addCriterion("SELLTY_STATE =", value, "selltyState");
			return this;
		}

		public Criteria andSelltyStateNotEqualTo(String value) {
			addCriterion("SELLTY_STATE <>", value, "selltyState");
			return this;
		}

		public Criteria andSelltyStateGreaterThan(String value) {
			addCriterion("SELLTY_STATE >", value, "selltyState");
			return this;
		}

		public Criteria andSelltyStateGreaterThanOrEqualTo(String value) {
			addCriterion("SELLTY_STATE >=", value, "selltyState");
			return this;
		}

		public Criteria andSelltyStateLessThan(String value) {
			addCriterion("SELLTY_STATE <", value, "selltyState");
			return this;
		}

		public Criteria andSelltyStateLessThanOrEqualTo(String value) {
			addCriterion("SELLTY_STATE <=", value, "selltyState");
			return this;
		}

		public Criteria andSelltyStateLike(String value) {
			addCriterion("SELLTY_STATE like", value, "selltyState");
			return this;
		}

		public Criteria andSelltyStateNotLike(String value) {
			addCriterion("SELLTY_STATE not like", value, "selltyState");
			return this;
		}

		public Criteria andSelltyStateIn(List values) {
			addCriterion("SELLTY_STATE in", values, "selltyState");
			return this;
		}

		public Criteria andSelltyStateNotIn(List values) {
			addCriterion("SELLTY_STATE not in", values, "selltyState");
			return this;
		}

		public Criteria andSelltyStateBetween(String value1, String value2) {
			addCriterion("SELLTY_STATE between", value1, value2, "selltyState");
			return this;
		}

		public Criteria andSelltyStateNotBetween(String value1, String value2) {
			addCriterion("SELLTY_STATE not between", value1, value2,
					"selltyState");
			return this;
		}

		public Criteria andRemarkIsNull() {
			addCriterion("REMARK is null");
			return this;
		}

		public Criteria andRemarkIsNotNull() {
			addCriterion("REMARK is not null");
			return this;
		}

		public Criteria andRemarkEqualTo(String value) {
			addCriterion("REMARK =", value, "remark");
			return this;
		}

		public Criteria andRemarkNotEqualTo(String value) {
			addCriterion("REMARK <>", value, "remark");
			return this;
		}

		public Criteria andRemarkGreaterThan(String value) {
			addCriterion("REMARK >", value, "remark");
			return this;
		}

		public Criteria andRemarkGreaterThanOrEqualTo(String value) {
			addCriterion("REMARK >=", value, "remark");
			return this;
		}

		public Criteria andRemarkLessThan(String value) {
			addCriterion("REMARK <", value, "remark");
			return this;
		}

		public Criteria andRemarkLessThanOrEqualTo(String value) {
			addCriterion("REMARK <=", value, "remark");
			return this;
		}

		public Criteria andRemarkLike(String value) {
			addCriterion("REMARK like", value, "remark");
			return this;
		}

		public Criteria andRemarkNotLike(String value) {
			addCriterion("REMARK not like", value, "remark");
			return this;
		}

		public Criteria andRemarkIn(List values) {
			addCriterion("REMARK in", values, "remark");
			return this;
		}

		public Criteria andRemarkNotIn(List values) {
			addCriterion("REMARK not in", values, "remark");
			return this;
		}

		public Criteria andRemarkBetween(String value1, String value2) {
			addCriterion("REMARK between", value1, value2, "remark");
			return this;
		}

		public Criteria andRemarkNotBetween(String value1, String value2) {
			addCriterion("REMARK not between", value1, value2, "remark");
			return this;
		}

		public Criteria andAdjustMoneyIsNull() {
			addCriterion("ADJUST_MONEY is null");
			return this;
		}

		public Criteria andAdjustMoneyIsNotNull() {
			addCriterion("ADJUST_MONEY is not null");
			return this;
		}

		public Criteria andAdjustMoneyEqualTo(BigDecimal value) {
			addCriterion("ADJUST_MONEY =", value, "adjustMoney");
			return this;
		}

		public Criteria andAdjustMoneyNotEqualTo(BigDecimal value) {
			addCriterion("ADJUST_MONEY <>", value, "adjustMoney");
			return this;
		}

		public Criteria andAdjustMoneyGreaterThan(BigDecimal value) {
			addCriterion("ADJUST_MONEY >", value, "adjustMoney");
			return this;
		}

		public Criteria andAdjustMoneyGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("ADJUST_MONEY >=", value, "adjustMoney");
			return this;
		}

		public Criteria andAdjustMoneyLessThan(BigDecimal value) {
			addCriterion("ADJUST_MONEY <", value, "adjustMoney");
			return this;
		}

		public Criteria andAdjustMoneyLessThanOrEqualTo(BigDecimal value) {
			addCriterion("ADJUST_MONEY <=", value, "adjustMoney");
			return this;
		}

		public Criteria andAdjustMoneyIn(List values) {
			addCriterion("ADJUST_MONEY in", values, "adjustMoney");
			return this;
		}

		public Criteria andAdjustMoneyNotIn(List values) {
			addCriterion("ADJUST_MONEY not in", values, "adjustMoney");
			return this;
		}

		public Criteria andAdjustMoneyBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("ADJUST_MONEY between", value1, value2, "adjustMoney");
			return this;
		}

		public Criteria andAdjustMoneyNotBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("ADJUST_MONEY not between", value1, value2,
					"adjustMoney");
			return this;
		}
	}
}