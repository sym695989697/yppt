package com.ctfo.yppt.baseservice.rebate.beans;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ICRebateMonthMessExample implements Serializable {

	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to the database table TB_IC_REBATE_MONTH_MESS
	 * @abatorgenerated  Wed Jan 21 20:45:53 CST 2015
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to the database table TB_IC_REBATE_MONTH_MESS
	 * @abatorgenerated  Wed Jan 21 20:45:53 CST 2015
	 */
	protected List oredCriteria;
	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to the database table TB_IC_REBATE_MONTH_MESS
	 * @abatorgenerated  Wed Jan 21 20:45:53 CST 2015
	 */
	protected int skipNum;
	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to the database table TB_IC_REBATE_MONTH_MESS
	 * @abatorgenerated  Wed Jan 21 20:45:53 CST 2015
	 */
	protected int endNum;
	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to the database table TB_IC_REBATE_MONTH_MESS
	 * @abatorgenerated  Wed Jan 21 20:45:53 CST 2015
	 */
	protected int limitNum;

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_IC_REBATE_MONTH_MESS
	 * @abatorgenerated  Wed Jan 21 20:45:53 CST 2015
	 */
	public ICRebateMonthMessExample() {
		oredCriteria = new ArrayList();
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_IC_REBATE_MONTH_MESS
	 * @abatorgenerated  Wed Jan 21 20:45:53 CST 2015
	 */
	protected ICRebateMonthMessExample(ICRebateMonthMessExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_IC_REBATE_MONTH_MESS
	 * @abatorgenerated  Wed Jan 21 20:45:53 CST 2015
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_IC_REBATE_MONTH_MESS
	 * @abatorgenerated  Wed Jan 21 20:45:53 CST 2015
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_IC_REBATE_MONTH_MESS
	 * @abatorgenerated  Wed Jan 21 20:45:53 CST 2015
	 */
	public List getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_IC_REBATE_MONTH_MESS
	 * @abatorgenerated  Wed Jan 21 20:45:53 CST 2015
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_IC_REBATE_MONTH_MESS
	 * @abatorgenerated  Wed Jan 21 20:45:53 CST 2015
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_IC_REBATE_MONTH_MESS
	 * @abatorgenerated  Wed Jan 21 20:45:53 CST 2015
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_IC_REBATE_MONTH_MESS
	 * @abatorgenerated  Wed Jan 21 20:45:53 CST 2015
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_IC_REBATE_MONTH_MESS
	 * @abatorgenerated  Wed Jan 21 20:45:53 CST 2015
	 */
	public static String tableName() {
		return "TB_IC_REBATE_MONTH_MESS";
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_IC_REBATE_MONTH_MESS
	 * @abatorgenerated  Wed Jan 21 20:45:53 CST 2015
	 */
	public static String daoInterface() {
		return "com.ctfo.yppt.baseservice.dao.rebate.ICRebateMonthMessDAO";
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_IC_REBATE_MONTH_MESS
	 * @abatorgenerated  Wed Jan 21 20:45:53 CST 2015
	 */
	public void setSkipNum(int skipNum) {
		this.skipNum = skipNum;
		this.endNum = this.skipNum + this.limitNum + 1;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_IC_REBATE_MONTH_MESS
	 * @abatorgenerated  Wed Jan 21 20:45:53 CST 2015
	 */
	public int getSkipNum() {
		return this.skipNum;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_IC_REBATE_MONTH_MESS
	 * @abatorgenerated  Wed Jan 21 20:45:53 CST 2015
	 */
	public void setEndNum(int endNum) {
		this.endNum = endNum;
		this.limitNum = this.endNum - this.skipNum - 1;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_IC_REBATE_MONTH_MESS
	 * @abatorgenerated  Wed Jan 21 20:45:53 CST 2015
	 */
	public int getEndNum() {
		return this.endNum;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_IC_REBATE_MONTH_MESS
	 * @abatorgenerated  Wed Jan 21 20:45:53 CST 2015
	 */
	public void setLimitNum(int limitNum) {
		this.limitNum = limitNum;
		this.endNum = this.skipNum + this.limitNum + 1;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_IC_REBATE_MONTH_MESS
	 * @abatorgenerated  Wed Jan 21 20:45:53 CST 2015
	 */
	public int getLimitNum() {
		return this.limitNum;
	}

	/**
	 * This class was generated by Abator for iBATIS. This class corresponds to the database table TB_IC_REBATE_MONTH_MESS
	 * @abatorgenerated  Wed Jan 21 20:45:53 CST 2015
	 */
	public static class Criteria implements Serializable {
		protected List criteriaWithoutValue;
		protected List criteriaWithSingleValue;
		protected List criteriaWithListValue;
		protected List criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList();
			criteriaWithSingleValue = new ArrayList();
			criteriaWithListValue = new ArrayList();
			criteriaWithBetweenValue = new ArrayList();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0
					|| criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition, List values,
				String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			List list = new ArrayList();
			list.add(value1);
			list.add(value2);
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		public Criteria andIdIsNull() {
			addCriterion("ID is null");
			return this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("ID is not null");
			return this;
		}

		public Criteria andIdEqualTo(String value) {
			addCriterion("ID =", value, "id");
			return this;
		}

		public Criteria andIdNotEqualTo(String value) {
			addCriterion("ID <>", value, "id");
			return this;
		}

		public Criteria andIdGreaterThan(String value) {
			addCriterion("ID >", value, "id");
			return this;
		}

		public Criteria andIdGreaterThanOrEqualTo(String value) {
			addCriterion("ID >=", value, "id");
			return this;
		}

		public Criteria andIdLessThan(String value) {
			addCriterion("ID <", value, "id");
			return this;
		}

		public Criteria andIdLessThanOrEqualTo(String value) {
			addCriterion("ID <=", value, "id");
			return this;
		}

		public Criteria andIdLike(String value) {
			addCriterion("ID like", value, "id");
			return this;
		}

		public Criteria andIdNotLike(String value) {
			addCriterion("ID not like", value, "id");
			return this;
		}

		public Criteria andIdIn(List values) {
			addCriterion("ID in", values, "id");
			return this;
		}

		public Criteria andIdNotIn(List values) {
			addCriterion("ID not in", values, "id");
			return this;
		}

		public Criteria andIdBetween(String value1, String value2) {
			addCriterion("ID between", value1, value2, "id");
			return this;
		}

		public Criteria andIdNotBetween(String value1, String value2) {
			addCriterion("ID not between", value1, value2, "id");
			return this;
		}

		public Criteria andAccountdateIsNull() {
			addCriterion("ACCOUNTDATE is null");
			return this;
		}

		public Criteria andAccountdateIsNotNull() {
			addCriterion("ACCOUNTDATE is not null");
			return this;
		}

		public Criteria andAccountdateEqualTo(String value) {
			addCriterion("ACCOUNTDATE =", value, "accountdate");
			return this;
		}

		public Criteria andAccountdateNotEqualTo(String value) {
			addCriterion("ACCOUNTDATE <>", value, "accountdate");
			return this;
		}

		public Criteria andAccountdateGreaterThan(String value) {
			addCriterion("ACCOUNTDATE >", value, "accountdate");
			return this;
		}

		public Criteria andAccountdateGreaterThanOrEqualTo(String value) {
			addCriterion("ACCOUNTDATE >=", value, "accountdate");
			return this;
		}

		public Criteria andAccountdateLessThan(String value) {
			addCriterion("ACCOUNTDATE <", value, "accountdate");
			return this;
		}

		public Criteria andAccountdateLessThanOrEqualTo(String value) {
			addCriterion("ACCOUNTDATE <=", value, "accountdate");
			return this;
		}

		public Criteria andAccountdateLike(String value) {
			addCriterion("ACCOUNTDATE like", value, "accountdate");
			return this;
		}

		public Criteria andAccountdateNotLike(String value) {
			addCriterion("ACCOUNTDATE not like", value, "accountdate");
			return this;
		}

		public Criteria andAccountdateIn(List values) {
			addCriterion("ACCOUNTDATE in", values, "accountdate");
			return this;
		}

		public Criteria andAccountdateNotIn(List values) {
			addCriterion("ACCOUNTDATE not in", values, "accountdate");
			return this;
		}

		public Criteria andAccountdateBetween(String value1, String value2) {
			addCriterion("ACCOUNTDATE between", value1, value2, "accountdate");
			return this;
		}

		public Criteria andAccountdateNotBetween(String value1, String value2) {
			addCriterion("ACCOUNTDATE not between", value1, value2,
					"accountdate");
			return this;
		}

		public Criteria andAccountStartDateIsNull() {
			addCriterion("ACCOUNT_START_DATE is null");
			return this;
		}

		public Criteria andAccountStartDateIsNotNull() {
			addCriterion("ACCOUNT_START_DATE is not null");
			return this;
		}

		public Criteria andAccountStartDateEqualTo(Long value) {
			addCriterion("ACCOUNT_START_DATE =", value, "accountStartDate");
			return this;
		}

		public Criteria andAccountStartDateNotEqualTo(Long value) {
			addCriterion("ACCOUNT_START_DATE <>", value, "accountStartDate");
			return this;
		}

		public Criteria andAccountStartDateGreaterThan(Long value) {
			addCriterion("ACCOUNT_START_DATE >", value, "accountStartDate");
			return this;
		}

		public Criteria andAccountStartDateGreaterThanOrEqualTo(Long value) {
			addCriterion("ACCOUNT_START_DATE >=", value, "accountStartDate");
			return this;
		}

		public Criteria andAccountStartDateLessThan(Long value) {
			addCriterion("ACCOUNT_START_DATE <", value, "accountStartDate");
			return this;
		}

		public Criteria andAccountStartDateLessThanOrEqualTo(Long value) {
			addCriterion("ACCOUNT_START_DATE <=", value, "accountStartDate");
			return this;
		}

		public Criteria andAccountStartDateIn(List values) {
			addCriterion("ACCOUNT_START_DATE in", values, "accountStartDate");
			return this;
		}

		public Criteria andAccountStartDateNotIn(List values) {
			addCriterion("ACCOUNT_START_DATE not in", values,
					"accountStartDate");
			return this;
		}

		public Criteria andAccountStartDateBetween(Long value1, Long value2) {
			addCriterion("ACCOUNT_START_DATE between", value1, value2,
					"accountStartDate");
			return this;
		}

		public Criteria andAccountStartDateNotBetween(Long value1, Long value2) {
			addCriterion("ACCOUNT_START_DATE not between", value1, value2,
					"accountStartDate");
			return this;
		}

		public Criteria andAccountEndDateIsNull() {
			addCriterion("ACCOUNT_END_DATE is null");
			return this;
		}

		public Criteria andAccountEndDateIsNotNull() {
			addCriterion("ACCOUNT_END_DATE is not null");
			return this;
		}

		public Criteria andAccountEndDateEqualTo(Long value) {
			addCriterion("ACCOUNT_END_DATE =", value, "accountEndDate");
			return this;
		}

		public Criteria andAccountEndDateNotEqualTo(Long value) {
			addCriterion("ACCOUNT_END_DATE <>", value, "accountEndDate");
			return this;
		}

		public Criteria andAccountEndDateGreaterThan(Long value) {
			addCriterion("ACCOUNT_END_DATE >", value, "accountEndDate");
			return this;
		}

		public Criteria andAccountEndDateGreaterThanOrEqualTo(Long value) {
			addCriterion("ACCOUNT_END_DATE >=", value, "accountEndDate");
			return this;
		}

		public Criteria andAccountEndDateLessThan(Long value) {
			addCriterion("ACCOUNT_END_DATE <", value, "accountEndDate");
			return this;
		}

		public Criteria andAccountEndDateLessThanOrEqualTo(Long value) {
			addCriterion("ACCOUNT_END_DATE <=", value, "accountEndDate");
			return this;
		}

		public Criteria andAccountEndDateIn(List values) {
			addCriterion("ACCOUNT_END_DATE in", values, "accountEndDate");
			return this;
		}

		public Criteria andAccountEndDateNotIn(List values) {
			addCriterion("ACCOUNT_END_DATE not in", values, "accountEndDate");
			return this;
		}

		public Criteria andAccountEndDateBetween(Long value1, Long value2) {
			addCriterion("ACCOUNT_END_DATE between", value1, value2,
					"accountEndDate");
			return this;
		}

		public Criteria andAccountEndDateNotBetween(Long value1, Long value2) {
			addCriterion("ACCOUNT_END_DATE not between", value1, value2,
					"accountEndDate");
			return this;
		}

		public Criteria andSettledCountIsNull() {
			addCriterion("SETTLED_COUNT is null");
			return this;
		}

		public Criteria andSettledCountIsNotNull() {
			addCriterion("SETTLED_COUNT is not null");
			return this;
		}

		public Criteria andSettledCountEqualTo(Long value) {
			addCriterion("SETTLED_COUNT =", value, "settledCount");
			return this;
		}

		public Criteria andSettledCountNotEqualTo(Long value) {
			addCriterion("SETTLED_COUNT <>", value, "settledCount");
			return this;
		}

		public Criteria andSettledCountGreaterThan(Long value) {
			addCriterion("SETTLED_COUNT >", value, "settledCount");
			return this;
		}

		public Criteria andSettledCountGreaterThanOrEqualTo(Long value) {
			addCriterion("SETTLED_COUNT >=", value, "settledCount");
			return this;
		}

		public Criteria andSettledCountLessThan(Long value) {
			addCriterion("SETTLED_COUNT <", value, "settledCount");
			return this;
		}

		public Criteria andSettledCountLessThanOrEqualTo(Long value) {
			addCriterion("SETTLED_COUNT <=", value, "settledCount");
			return this;
		}

		public Criteria andSettledCountIn(List values) {
			addCriterion("SETTLED_COUNT in", values, "settledCount");
			return this;
		}

		public Criteria andSettledCountNotIn(List values) {
			addCriterion("SETTLED_COUNT not in", values, "settledCount");
			return this;
		}

		public Criteria andSettledCountBetween(Long value1, Long value2) {
			addCriterion("SETTLED_COUNT between", value1, value2,
					"settledCount");
			return this;
		}

		public Criteria andSettledCountNotBetween(Long value1, Long value2) {
			addCriterion("SETTLED_COUNT not between", value1, value2,
					"settledCount");
			return this;
		}

		public Criteria andNotSettledCountIsNull() {
			addCriterion("NOT_SETTLED_COUNT is null");
			return this;
		}

		public Criteria andNotSettledCountIsNotNull() {
			addCriterion("NOT_SETTLED_COUNT is not null");
			return this;
		}

		public Criteria andNotSettledCountEqualTo(Long value) {
			addCriterion("NOT_SETTLED_COUNT =", value, "notSettledCount");
			return this;
		}

		public Criteria andNotSettledCountNotEqualTo(Long value) {
			addCriterion("NOT_SETTLED_COUNT <>", value, "notSettledCount");
			return this;
		}

		public Criteria andNotSettledCountGreaterThan(Long value) {
			addCriterion("NOT_SETTLED_COUNT >", value, "notSettledCount");
			return this;
		}

		public Criteria andNotSettledCountGreaterThanOrEqualTo(Long value) {
			addCriterion("NOT_SETTLED_COUNT >=", value, "notSettledCount");
			return this;
		}

		public Criteria andNotSettledCountLessThan(Long value) {
			addCriterion("NOT_SETTLED_COUNT <", value, "notSettledCount");
			return this;
		}

		public Criteria andNotSettledCountLessThanOrEqualTo(Long value) {
			addCriterion("NOT_SETTLED_COUNT <=", value, "notSettledCount");
			return this;
		}

		public Criteria andNotSettledCountIn(List values) {
			addCriterion("NOT_SETTLED_COUNT in", values, "notSettledCount");
			return this;
		}

		public Criteria andNotSettledCountNotIn(List values) {
			addCriterion("NOT_SETTLED_COUNT not in", values, "notSettledCount");
			return this;
		}

		public Criteria andNotSettledCountBetween(Long value1, Long value2) {
			addCriterion("NOT_SETTLED_COUNT between", value1, value2,
					"notSettledCount");
			return this;
		}

		public Criteria andNotSettledCountNotBetween(Long value1, Long value2) {
			addCriterion("NOT_SETTLED_COUNT not between", value1, value2,
					"notSettledCount");
			return this;
		}

		public Criteria andTotalCountIsNull() {
			addCriterion("TOTAL_COUNT is null");
			return this;
		}

		public Criteria andTotalCountIsNotNull() {
			addCriterion("TOTAL_COUNT is not null");
			return this;
		}

		public Criteria andTotalCountEqualTo(Long value) {
			addCriterion("TOTAL_COUNT =", value, "totalCount");
			return this;
		}

		public Criteria andTotalCountNotEqualTo(Long value) {
			addCriterion("TOTAL_COUNT <>", value, "totalCount");
			return this;
		}

		public Criteria andTotalCountGreaterThan(Long value) {
			addCriterion("TOTAL_COUNT >", value, "totalCount");
			return this;
		}

		public Criteria andTotalCountGreaterThanOrEqualTo(Long value) {
			addCriterion("TOTAL_COUNT >=", value, "totalCount");
			return this;
		}

		public Criteria andTotalCountLessThan(Long value) {
			addCriterion("TOTAL_COUNT <", value, "totalCount");
			return this;
		}

		public Criteria andTotalCountLessThanOrEqualTo(Long value) {
			addCriterion("TOTAL_COUNT <=", value, "totalCount");
			return this;
		}

		public Criteria andTotalCountIn(List values) {
			addCriterion("TOTAL_COUNT in", values, "totalCount");
			return this;
		}

		public Criteria andTotalCountNotIn(List values) {
			addCriterion("TOTAL_COUNT not in", values, "totalCount");
			return this;
		}

		public Criteria andTotalCountBetween(Long value1, Long value2) {
			addCriterion("TOTAL_COUNT between", value1, value2, "totalCount");
			return this;
		}

		public Criteria andTotalCountNotBetween(Long value1, Long value2) {
			addCriterion("TOTAL_COUNT not between", value1, value2,
					"totalCount");
			return this;
		}

		public Criteria andTotalMoneyIsNull() {
			addCriterion("TOTAL_MONEY is null");
			return this;
		}

		public Criteria andTotalMoneyIsNotNull() {
			addCriterion("TOTAL_MONEY is not null");
			return this;
		}

		public Criteria andTotalMoneyEqualTo(Long value) {
			addCriterion("TOTAL_MONEY =", value, "totalMoney");
			return this;
		}

		public Criteria andTotalMoneyNotEqualTo(Long value) {
			addCriterion("TOTAL_MONEY <>", value, "totalMoney");
			return this;
		}

		public Criteria andTotalMoneyGreaterThan(Long value) {
			addCriterion("TOTAL_MONEY >", value, "totalMoney");
			return this;
		}

		public Criteria andTotalMoneyGreaterThanOrEqualTo(Long value) {
			addCriterion("TOTAL_MONEY >=", value, "totalMoney");
			return this;
		}

		public Criteria andTotalMoneyLessThan(Long value) {
			addCriterion("TOTAL_MONEY <", value, "totalMoney");
			return this;
		}

		public Criteria andTotalMoneyLessThanOrEqualTo(Long value) {
			addCriterion("TOTAL_MONEY <=", value, "totalMoney");
			return this;
		}

		public Criteria andTotalMoneyIn(List values) {
			addCriterion("TOTAL_MONEY in", values, "totalMoney");
			return this;
		}

		public Criteria andTotalMoneyNotIn(List values) {
			addCriterion("TOTAL_MONEY not in", values, "totalMoney");
			return this;
		}

		public Criteria andTotalMoneyBetween(Long value1, Long value2) {
			addCriterion("TOTAL_MONEY between", value1, value2, "totalMoney");
			return this;
		}

		public Criteria andTotalMoneyNotBetween(Long value1, Long value2) {
			addCriterion("TOTAL_MONEY not between", value1, value2,
					"totalMoney");
			return this;
		}

		public Criteria andTotalRebateAmountIsNull() {
			addCriterion("TOTAL_REBATE_AMOUNT is null");
			return this;
		}

		public Criteria andTotalRebateAmountIsNotNull() {
			addCriterion("TOTAL_REBATE_AMOUNT is not null");
			return this;
		}

		public Criteria andTotalRebateAmountEqualTo(Long value) {
			addCriterion("TOTAL_REBATE_AMOUNT =", value, "totalRebateAmount");
			return this;
		}

		public Criteria andTotalRebateAmountNotEqualTo(Long value) {
			addCriterion("TOTAL_REBATE_AMOUNT <>", value, "totalRebateAmount");
			return this;
		}

		public Criteria andTotalRebateAmountGreaterThan(Long value) {
			addCriterion("TOTAL_REBATE_AMOUNT >", value, "totalRebateAmount");
			return this;
		}

		public Criteria andTotalRebateAmountGreaterThanOrEqualTo(Long value) {
			addCriterion("TOTAL_REBATE_AMOUNT >=", value, "totalRebateAmount");
			return this;
		}

		public Criteria andTotalRebateAmountLessThan(Long value) {
			addCriterion("TOTAL_REBATE_AMOUNT <", value, "totalRebateAmount");
			return this;
		}

		public Criteria andTotalRebateAmountLessThanOrEqualTo(Long value) {
			addCriterion("TOTAL_REBATE_AMOUNT <=", value, "totalRebateAmount");
			return this;
		}

		public Criteria andTotalRebateAmountIn(List values) {
			addCriterion("TOTAL_REBATE_AMOUNT in", values, "totalRebateAmount");
			return this;
		}

		public Criteria andTotalRebateAmountNotIn(List values) {
			addCriterion("TOTAL_REBATE_AMOUNT not in", values,
					"totalRebateAmount");
			return this;
		}

		public Criteria andTotalRebateAmountBetween(Long value1, Long value2) {
			addCriterion("TOTAL_REBATE_AMOUNT between", value1, value2,
					"totalRebateAmount");
			return this;
		}

		public Criteria andTotalRebateAmountNotBetween(Long value1, Long value2) {
			addCriterion("TOTAL_REBATE_AMOUNT not between", value1, value2,
					"totalRebateAmount");
			return this;
		}

		public Criteria andSettledAmountIsNull() {
			addCriterion("SETTLED_AMOUNT is null");
			return this;
		}

		public Criteria andSettledAmountIsNotNull() {
			addCriterion("SETTLED_AMOUNT is not null");
			return this;
		}

		public Criteria andSettledAmountEqualTo(Long value) {
			addCriterion("SETTLED_AMOUNT =", value, "settledAmount");
			return this;
		}

		public Criteria andSettledAmountNotEqualTo(Long value) {
			addCriterion("SETTLED_AMOUNT <>", value, "settledAmount");
			return this;
		}

		public Criteria andSettledAmountGreaterThan(Long value) {
			addCriterion("SETTLED_AMOUNT >", value, "settledAmount");
			return this;
		}

		public Criteria andSettledAmountGreaterThanOrEqualTo(Long value) {
			addCriterion("SETTLED_AMOUNT >=", value, "settledAmount");
			return this;
		}

		public Criteria andSettledAmountLessThan(Long value) {
			addCriterion("SETTLED_AMOUNT <", value, "settledAmount");
			return this;
		}

		public Criteria andSettledAmountLessThanOrEqualTo(Long value) {
			addCriterion("SETTLED_AMOUNT <=", value, "settledAmount");
			return this;
		}

		public Criteria andSettledAmountIn(List values) {
			addCriterion("SETTLED_AMOUNT in", values, "settledAmount");
			return this;
		}

		public Criteria andSettledAmountNotIn(List values) {
			addCriterion("SETTLED_AMOUNT not in", values, "settledAmount");
			return this;
		}

		public Criteria andSettledAmountBetween(Long value1, Long value2) {
			addCriterion("SETTLED_AMOUNT between", value1, value2,
					"settledAmount");
			return this;
		}

		public Criteria andSettledAmountNotBetween(Long value1, Long value2) {
			addCriterion("SETTLED_AMOUNT not between", value1, value2,
					"settledAmount");
			return this;
		}

		public Criteria andNotSettledAmountIsNull() {
			addCriterion("NOT_SETTLED_AMOUNT is null");
			return this;
		}

		public Criteria andNotSettledAmountIsNotNull() {
			addCriterion("NOT_SETTLED_AMOUNT is not null");
			return this;
		}

		public Criteria andNotSettledAmountEqualTo(Long value) {
			addCriterion("NOT_SETTLED_AMOUNT =", value, "notSettledAmount");
			return this;
		}

		public Criteria andNotSettledAmountNotEqualTo(Long value) {
			addCriterion("NOT_SETTLED_AMOUNT <>", value, "notSettledAmount");
			return this;
		}

		public Criteria andNotSettledAmountGreaterThan(Long value) {
			addCriterion("NOT_SETTLED_AMOUNT >", value, "notSettledAmount");
			return this;
		}

		public Criteria andNotSettledAmountGreaterThanOrEqualTo(Long value) {
			addCriterion("NOT_SETTLED_AMOUNT >=", value, "notSettledAmount");
			return this;
		}

		public Criteria andNotSettledAmountLessThan(Long value) {
			addCriterion("NOT_SETTLED_AMOUNT <", value, "notSettledAmount");
			return this;
		}

		public Criteria andNotSettledAmountLessThanOrEqualTo(Long value) {
			addCriterion("NOT_SETTLED_AMOUNT <=", value, "notSettledAmount");
			return this;
		}

		public Criteria andNotSettledAmountIn(List values) {
			addCriterion("NOT_SETTLED_AMOUNT in", values, "notSettledAmount");
			return this;
		}

		public Criteria andNotSettledAmountNotIn(List values) {
			addCriterion("NOT_SETTLED_AMOUNT not in", values,
					"notSettledAmount");
			return this;
		}

		public Criteria andNotSettledAmountBetween(Long value1, Long value2) {
			addCriterion("NOT_SETTLED_AMOUNT between", value1, value2,
					"notSettledAmount");
			return this;
		}

		public Criteria andNotSettledAmountNotBetween(Long value1, Long value2) {
			addCriterion("NOT_SETTLED_AMOUNT not between", value1, value2,
					"notSettledAmount");
			return this;
		}

		public Criteria andCreateTimeIsNull() {
			addCriterion("CREATE_TIME is null");
			return this;
		}

		public Criteria andCreateTimeIsNotNull() {
			addCriterion("CREATE_TIME is not null");
			return this;
		}

		public Criteria andCreateTimeEqualTo(Long value) {
			addCriterion("CREATE_TIME =", value, "createTime");
			return this;
		}

		public Criteria andCreateTimeNotEqualTo(Long value) {
			addCriterion("CREATE_TIME <>", value, "createTime");
			return this;
		}

		public Criteria andCreateTimeGreaterThan(Long value) {
			addCriterion("CREATE_TIME >", value, "createTime");
			return this;
		}

		public Criteria andCreateTimeGreaterThanOrEqualTo(Long value) {
			addCriterion("CREATE_TIME >=", value, "createTime");
			return this;
		}

		public Criteria andCreateTimeLessThan(Long value) {
			addCriterion("CREATE_TIME <", value, "createTime");
			return this;
		}

		public Criteria andCreateTimeLessThanOrEqualTo(Long value) {
			addCriterion("CREATE_TIME <=", value, "createTime");
			return this;
		}

		public Criteria andCreateTimeIn(List values) {
			addCriterion("CREATE_TIME in", values, "createTime");
			return this;
		}

		public Criteria andCreateTimeNotIn(List values) {
			addCriterion("CREATE_TIME not in", values, "createTime");
			return this;
		}

		public Criteria andCreateTimeBetween(Long value1, Long value2) {
			addCriterion("CREATE_TIME between", value1, value2, "createTime");
			return this;
		}

		public Criteria andCreateTimeNotBetween(Long value1, Long value2) {
			addCriterion("CREATE_TIME not between", value1, value2,
					"createTime");
			return this;
		}

		public Criteria andRemarkIsNull() {
			addCriterion("REMARK is null");
			return this;
		}

		public Criteria andRemarkIsNotNull() {
			addCriterion("REMARK is not null");
			return this;
		}

		public Criteria andRemarkEqualTo(String value) {
			addCriterion("REMARK =", value, "remark");
			return this;
		}

		public Criteria andRemarkNotEqualTo(String value) {
			addCriterion("REMARK <>", value, "remark");
			return this;
		}

		public Criteria andRemarkGreaterThan(String value) {
			addCriterion("REMARK >", value, "remark");
			return this;
		}

		public Criteria andRemarkGreaterThanOrEqualTo(String value) {
			addCriterion("REMARK >=", value, "remark");
			return this;
		}

		public Criteria andRemarkLessThan(String value) {
			addCriterion("REMARK <", value, "remark");
			return this;
		}

		public Criteria andRemarkLessThanOrEqualTo(String value) {
			addCriterion("REMARK <=", value, "remark");
			return this;
		}

		public Criteria andRemarkLike(String value) {
			addCriterion("REMARK like", value, "remark");
			return this;
		}

		public Criteria andRemarkNotLike(String value) {
			addCriterion("REMARK not like", value, "remark");
			return this;
		}

		public Criteria andRemarkIn(List values) {
			addCriterion("REMARK in", values, "remark");
			return this;
		}

		public Criteria andRemarkNotIn(List values) {
			addCriterion("REMARK not in", values, "remark");
			return this;
		}

		public Criteria andRemarkBetween(String value1, String value2) {
			addCriterion("REMARK between", value1, value2, "remark");
			return this;
		}

		public Criteria andRemarkNotBetween(String value1, String value2) {
			addCriterion("REMARK not between", value1, value2, "remark");
			return this;
		}
	}
}