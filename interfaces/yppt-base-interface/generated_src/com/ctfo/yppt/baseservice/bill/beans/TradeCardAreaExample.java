package com.ctfo.yppt.baseservice.bill.beans;

import java.io.Serializable;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class TradeCardAreaExample implements Serializable {
    /**
     * This field was generated by Abator for iBATIS.
     * This field corresponds to the database table TS_TRADE_CARD_AREA
     *
     * @abatorgenerated Tue Mar 24 15:20:55 CST 2015
     */
    private static final long serialVersionUID = 1L;

    /**
     * This field was generated by Abator for iBATIS.
     * This field corresponds to the database table TS_TRADE_CARD_AREA
     *
     * @abatorgenerated Tue Mar 24 15:20:55 CST 2015
     */
    protected String orderByClause;

    /**
     * This field was generated by Abator for iBATIS.
     * This field corresponds to the database table TS_TRADE_CARD_AREA
     *
     * @abatorgenerated Tue Mar 24 15:20:55 CST 2015
     */
    protected List oredCriteria;

    /**
     * This field was generated by Abator for iBATIS.
     * This field corresponds to the database table TS_TRADE_CARD_AREA
     *
     * @abatorgenerated Tue Mar 24 15:20:56 CST 2015
     */
    protected int skipNum;

    /**
     * This field was generated by Abator for iBATIS.
     * This field corresponds to the database table TS_TRADE_CARD_AREA
     *
     * @abatorgenerated Tue Mar 24 15:20:56 CST 2015
     */
    protected int endNum;

    /**
     * This field was generated by Abator for iBATIS.
     * This field corresponds to the database table TS_TRADE_CARD_AREA
     *
     * @abatorgenerated Tue Mar 24 15:20:56 CST 2015
     */
    protected int limitNum;

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table TS_TRADE_CARD_AREA
     *
     * @abatorgenerated Tue Mar 24 15:20:55 CST 2015
     */
    public TradeCardAreaExample() {
        oredCriteria = new ArrayList();
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table TS_TRADE_CARD_AREA
     *
     * @abatorgenerated Tue Mar 24 15:20:55 CST 2015
     */
    protected TradeCardAreaExample(TradeCardAreaExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table TS_TRADE_CARD_AREA
     *
     * @abatorgenerated Tue Mar 24 15:20:55 CST 2015
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table TS_TRADE_CARD_AREA
     *
     * @abatorgenerated Tue Mar 24 15:20:55 CST 2015
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table TS_TRADE_CARD_AREA
     *
     * @abatorgenerated Tue Mar 24 15:20:55 CST 2015
     */
    public List getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table TS_TRADE_CARD_AREA
     *
     * @abatorgenerated Tue Mar 24 15:20:55 CST 2015
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table TS_TRADE_CARD_AREA
     *
     * @abatorgenerated Tue Mar 24 15:20:55 CST 2015
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table TS_TRADE_CARD_AREA
     *
     * @abatorgenerated Tue Mar 24 15:20:55 CST 2015
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table TS_TRADE_CARD_AREA
     *
     * @abatorgenerated Tue Mar 24 15:20:55 CST 2015
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table TS_TRADE_CARD_AREA
     *
     * @abatorgenerated Tue Mar 24 15:20:56 CST 2015
     */
    public static String tableName() {
        return "TS_TRADE_CARD_AREA";
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table TS_TRADE_CARD_AREA
     *
     * @abatorgenerated Tue Mar 24 15:20:56 CST 2015
     */
    public static String daoInterface() {
        return "com.ctfo.yppt.baseservice.dao.bill.TradeCardAreaDAO";
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table TS_TRADE_CARD_AREA
     *
     * @abatorgenerated Tue Mar 24 15:20:56 CST 2015
     */
    public void setSkipNum(int skipNum) {
        this.skipNum = skipNum;
        this.endNum = this.skipNum + this.limitNum +1;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table TS_TRADE_CARD_AREA
     *
     * @abatorgenerated Tue Mar 24 15:20:56 CST 2015
     */
    public int getSkipNum() {
        return this.skipNum;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table TS_TRADE_CARD_AREA
     *
     * @abatorgenerated Tue Mar 24 15:20:56 CST 2015
     */
    public void setEndNum(int endNum) {
        this.endNum = endNum;
        this.limitNum = this.endNum - this.skipNum -1;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table TS_TRADE_CARD_AREA
     *
     * @abatorgenerated Tue Mar 24 15:20:56 CST 2015
     */
    public int getEndNum() {
        return this.endNum;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table TS_TRADE_CARD_AREA
     *
     * @abatorgenerated Tue Mar 24 15:20:56 CST 2015
     */
    public void setLimitNum(int limitNum) {
        this.limitNum = limitNum;
        this.endNum = this.skipNum + this.limitNum +1;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table TS_TRADE_CARD_AREA
     *
     * @abatorgenerated Tue Mar 24 15:20:56 CST 2015
     */
    public int getLimitNum() {
        return this.limitNum;
    }

    /**
     * This class was generated by Abator for iBATIS.
     * This class corresponds to the database table TS_TRADE_CARD_AREA
     *
     * @abatorgenerated Tue Mar 24 15:20:55 CST 2015
     */
    public static class Criteria implements Serializable {
        /**
         * This field was generated by Abator for iBATIS.
         * This field corresponds to the database table TS_TRADE_CARD_AREA
         *
         * @abatorgenerated Tue Mar 24 15:20:55 CST 2015
         */
        private static final long serialVersionUID = 1L;

        protected List criteriaWithoutValue;

        protected List criteriaWithSingleValue;

        protected List criteriaWithListValue;

        protected List criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList();
            criteriaWithSingleValue = new ArrayList();
            criteriaWithListValue = new ArrayList();
            criteriaWithBetweenValue = new ArrayList();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List list = new ArrayList();
            list.add(value1);
            list.add(value2);
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andIdIsNull() {
            addCriterion("ID is null");
            return this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("ID is not null");
            return this;
        }

        public Criteria andIdEqualTo(String value) {
            addCriterion("ID =", value, "id");
            return this;
        }

        public Criteria andIdNotEqualTo(String value) {
            addCriterion("ID <>", value, "id");
            return this;
        }

        public Criteria andIdGreaterThan(String value) {
            addCriterion("ID >", value, "id");
            return this;
        }

        public Criteria andIdGreaterThanOrEqualTo(String value) {
            addCriterion("ID >=", value, "id");
            return this;
        }

        public Criteria andIdLessThan(String value) {
            addCriterion("ID <", value, "id");
            return this;
        }

        public Criteria andIdLessThanOrEqualTo(String value) {
            addCriterion("ID <=", value, "id");
            return this;
        }

        public Criteria andIdLike(String value) {
            addCriterion("ID like", value, "id");
            return this;
        }

        public Criteria andIdNotLike(String value) {
            addCriterion("ID not like", value, "id");
            return this;
        }

        public Criteria andIdIn(List values) {
            addCriterion("ID in", values, "id");
            return this;
        }

        public Criteria andIdNotIn(List values) {
            addCriterion("ID not in", values, "id");
            return this;
        }

        public Criteria andIdBetween(String value1, String value2) {
            addCriterion("ID between", value1, value2, "id");
            return this;
        }

        public Criteria andIdNotBetween(String value1, String value2) {
            addCriterion("ID not between", value1, value2, "id");
            return this;
        }

        public Criteria andUserIdIsNull() {
            addCriterion("USER_ID is null");
            return this;
        }

        public Criteria andUserIdIsNotNull() {
            addCriterion("USER_ID is not null");
            return this;
        }

        public Criteria andUserIdEqualTo(String value) {
            addCriterion("USER_ID =", value, "userId");
            return this;
        }

        public Criteria andUserIdNotEqualTo(String value) {
            addCriterion("USER_ID <>", value, "userId");
            return this;
        }

        public Criteria andUserIdGreaterThan(String value) {
            addCriterion("USER_ID >", value, "userId");
            return this;
        }

        public Criteria andUserIdGreaterThanOrEqualTo(String value) {
            addCriterion("USER_ID >=", value, "userId");
            return this;
        }

        public Criteria andUserIdLessThan(String value) {
            addCriterion("USER_ID <", value, "userId");
            return this;
        }

        public Criteria andUserIdLessThanOrEqualTo(String value) {
            addCriterion("USER_ID <=", value, "userId");
            return this;
        }

        public Criteria andUserIdLike(String value) {
            addCriterion("USER_ID like", value, "userId");
            return this;
        }

        public Criteria andUserIdNotLike(String value) {
            addCriterion("USER_ID not like", value, "userId");
            return this;
        }

        public Criteria andUserIdIn(List values) {
            addCriterion("USER_ID in", values, "userId");
            return this;
        }

        public Criteria andUserIdNotIn(List values) {
            addCriterion("USER_ID not in", values, "userId");
            return this;
        }

        public Criteria andUserIdBetween(String value1, String value2) {
            addCriterion("USER_ID between", value1, value2, "userId");
            return this;
        }

        public Criteria andUserIdNotBetween(String value1, String value2) {
            addCriterion("USER_ID not between", value1, value2, "userId");
            return this;
        }

        public Criteria andCardNoIsNull() {
            addCriterion("CARD_NO is null");
            return this;
        }

        public Criteria andCardNoIsNotNull() {
            addCriterion("CARD_NO is not null");
            return this;
        }

        public Criteria andCardNoEqualTo(String value) {
            addCriterion("CARD_NO =", value, "cardNo");
            return this;
        }

        public Criteria andCardNoNotEqualTo(String value) {
            addCriterion("CARD_NO <>", value, "cardNo");
            return this;
        }

        public Criteria andCardNoGreaterThan(String value) {
            addCriterion("CARD_NO >", value, "cardNo");
            return this;
        }

        public Criteria andCardNoGreaterThanOrEqualTo(String value) {
            addCriterion("CARD_NO >=", value, "cardNo");
            return this;
        }

        public Criteria andCardNoLessThan(String value) {
            addCriterion("CARD_NO <", value, "cardNo");
            return this;
        }

        public Criteria andCardNoLessThanOrEqualTo(String value) {
            addCriterion("CARD_NO <=", value, "cardNo");
            return this;
        }

        public Criteria andCardNoLike(String value) {
            addCriterion("CARD_NO like", value, "cardNo");
            return this;
        }

        public Criteria andCardNoNotLike(String value) {
            addCriterion("CARD_NO not like", value, "cardNo");
            return this;
        }

        public Criteria andCardNoIn(List values) {
            addCriterion("CARD_NO in", values, "cardNo");
            return this;
        }

        public Criteria andCardNoNotIn(List values) {
            addCriterion("CARD_NO not in", values, "cardNo");
            return this;
        }

        public Criteria andCardNoBetween(String value1, String value2) {
            addCriterion("CARD_NO between", value1, value2, "cardNo");
            return this;
        }

        public Criteria andCardNoNotBetween(String value1, String value2) {
            addCriterion("CARD_NO not between", value1, value2, "cardNo");
            return this;
        }

        public Criteria andTradeAreaIsNull() {
            addCriterion("TRADE_AREA is null");
            return this;
        }

        public Criteria andTradeAreaIsNotNull() {
            addCriterion("TRADE_AREA is not null");
            return this;
        }

        public Criteria andTradeAreaEqualTo(String value) {
            addCriterion("TRADE_AREA =", value, "tradeArea");
            return this;
        }

        public Criteria andTradeAreaNotEqualTo(String value) {
            addCriterion("TRADE_AREA <>", value, "tradeArea");
            return this;
        }

        public Criteria andTradeAreaGreaterThan(String value) {
            addCriterion("TRADE_AREA >", value, "tradeArea");
            return this;
        }

        public Criteria andTradeAreaGreaterThanOrEqualTo(String value) {
            addCriterion("TRADE_AREA >=", value, "tradeArea");
            return this;
        }

        public Criteria andTradeAreaLessThan(String value) {
            addCriterion("TRADE_AREA <", value, "tradeArea");
            return this;
        }

        public Criteria andTradeAreaLessThanOrEqualTo(String value) {
            addCriterion("TRADE_AREA <=", value, "tradeArea");
            return this;
        }

        public Criteria andTradeAreaLike(String value) {
            addCriterion("TRADE_AREA like", value, "tradeArea");
            return this;
        }

        public Criteria andTradeAreaNotLike(String value) {
            addCriterion("TRADE_AREA not like", value, "tradeArea");
            return this;
        }

        public Criteria andTradeAreaIn(List values) {
            addCriterion("TRADE_AREA in", values, "tradeArea");
            return this;
        }

        public Criteria andTradeAreaNotIn(List values) {
            addCriterion("TRADE_AREA not in", values, "tradeArea");
            return this;
        }

        public Criteria andTradeAreaBetween(String value1, String value2) {
            addCriterion("TRADE_AREA between", value1, value2, "tradeArea");
            return this;
        }

        public Criteria andTradeAreaNotBetween(String value1, String value2) {
            addCriterion("TRADE_AREA not between", value1, value2, "tradeArea");
            return this;
        }

        public Criteria andCardTypeIsNull() {
            addCriterion("CARD_TYPE is null");
            return this;
        }

        public Criteria andCardTypeIsNotNull() {
            addCriterion("CARD_TYPE is not null");
            return this;
        }

        public Criteria andCardTypeEqualTo(String value) {
            addCriterion("CARD_TYPE =", value, "cardType");
            return this;
        }

        public Criteria andCardTypeNotEqualTo(String value) {
            addCriterion("CARD_TYPE <>", value, "cardType");
            return this;
        }

        public Criteria andCardTypeGreaterThan(String value) {
            addCriterion("CARD_TYPE >", value, "cardType");
            return this;
        }

        public Criteria andCardTypeGreaterThanOrEqualTo(String value) {
            addCriterion("CARD_TYPE >=", value, "cardType");
            return this;
        }

        public Criteria andCardTypeLessThan(String value) {
            addCriterion("CARD_TYPE <", value, "cardType");
            return this;
        }

        public Criteria andCardTypeLessThanOrEqualTo(String value) {
            addCriterion("CARD_TYPE <=", value, "cardType");
            return this;
        }

        public Criteria andCardTypeLike(String value) {
            addCriterion("CARD_TYPE like", value, "cardType");
            return this;
        }

        public Criteria andCardTypeNotLike(String value) {
            addCriterion("CARD_TYPE not like", value, "cardType");
            return this;
        }

        public Criteria andCardTypeIn(List values) {
            addCriterion("CARD_TYPE in", values, "cardType");
            return this;
        }

        public Criteria andCardTypeNotIn(List values) {
            addCriterion("CARD_TYPE not in", values, "cardType");
            return this;
        }

        public Criteria andCardTypeBetween(String value1, String value2) {
            addCriterion("CARD_TYPE between", value1, value2, "cardType");
            return this;
        }

        public Criteria andCardTypeNotBetween(String value1, String value2) {
            addCriterion("CARD_TYPE not between", value1, value2, "cardType");
            return this;
        }

        public Criteria andSumMoneyCyIsNull() {
            addCriterion("SUM_MONEY_CY is null");
            return this;
        }

        public Criteria andSumMoneyCyIsNotNull() {
            addCriterion("SUM_MONEY_CY is not null");
            return this;
        }

        public Criteria andSumMoneyCyEqualTo(Long value) {
            addCriterion("SUM_MONEY_CY =", value, "sumMoneyCy");
            return this;
        }

        public Criteria andSumMoneyCyNotEqualTo(Long value) {
            addCriterion("SUM_MONEY_CY <>", value, "sumMoneyCy");
            return this;
        }

        public Criteria andSumMoneyCyGreaterThan(Long value) {
            addCriterion("SUM_MONEY_CY >", value, "sumMoneyCy");
            return this;
        }

        public Criteria andSumMoneyCyGreaterThanOrEqualTo(Long value) {
            addCriterion("SUM_MONEY_CY >=", value, "sumMoneyCy");
            return this;
        }

        public Criteria andSumMoneyCyLessThan(Long value) {
            addCriterion("SUM_MONEY_CY <", value, "sumMoneyCy");
            return this;
        }

        public Criteria andSumMoneyCyLessThanOrEqualTo(Long value) {
            addCriterion("SUM_MONEY_CY <=", value, "sumMoneyCy");
            return this;
        }

        public Criteria andSumMoneyCyIn(List values) {
            addCriterion("SUM_MONEY_CY in", values, "sumMoneyCy");
            return this;
        }

        public Criteria andSumMoneyCyNotIn(List values) {
            addCriterion("SUM_MONEY_CY not in", values, "sumMoneyCy");
            return this;
        }

        public Criteria andSumMoneyCyBetween(Long value1, Long value2) {
            addCriterion("SUM_MONEY_CY between", value1, value2, "sumMoneyCy");
            return this;
        }

        public Criteria andSumMoneyCyNotBetween(Long value1, Long value2) {
            addCriterion("SUM_MONEY_CY not between", value1, value2, "sumMoneyCy");
            return this;
        }

        public Criteria andSumMoneyQyIsNull() {
            addCriterion("SUM_MONEY_QY is null");
            return this;
        }

        public Criteria andSumMoneyQyIsNotNull() {
            addCriterion("SUM_MONEY_QY is not null");
            return this;
        }

        public Criteria andSumMoneyQyEqualTo(Long value) {
            addCriterion("SUM_MONEY_QY =", value, "sumMoneyQy");
            return this;
        }

        public Criteria andSumMoneyQyNotEqualTo(Long value) {
            addCriterion("SUM_MONEY_QY <>", value, "sumMoneyQy");
            return this;
        }

        public Criteria andSumMoneyQyGreaterThan(Long value) {
            addCriterion("SUM_MONEY_QY >", value, "sumMoneyQy");
            return this;
        }

        public Criteria andSumMoneyQyGreaterThanOrEqualTo(Long value) {
            addCriterion("SUM_MONEY_QY >=", value, "sumMoneyQy");
            return this;
        }

        public Criteria andSumMoneyQyLessThan(Long value) {
            addCriterion("SUM_MONEY_QY <", value, "sumMoneyQy");
            return this;
        }

        public Criteria andSumMoneyQyLessThanOrEqualTo(Long value) {
            addCriterion("SUM_MONEY_QY <=", value, "sumMoneyQy");
            return this;
        }

        public Criteria andSumMoneyQyIn(List values) {
            addCriterion("SUM_MONEY_QY in", values, "sumMoneyQy");
            return this;
        }

        public Criteria andSumMoneyQyNotIn(List values) {
            addCriterion("SUM_MONEY_QY not in", values, "sumMoneyQy");
            return this;
        }

        public Criteria andSumMoneyQyBetween(Long value1, Long value2) {
            addCriterion("SUM_MONEY_QY between", value1, value2, "sumMoneyQy");
            return this;
        }

        public Criteria andSumMoneyQyNotBetween(Long value1, Long value2) {
            addCriterion("SUM_MONEY_QY not between", value1, value2, "sumMoneyQy");
            return this;
        }

        public Criteria andSumMoneyOrtherIsNull() {
            addCriterion("SUM_MONEY_ORTHER is null");
            return this;
        }

        public Criteria andSumMoneyOrtherIsNotNull() {
            addCriterion("SUM_MONEY_ORTHER is not null");
            return this;
        }

        public Criteria andSumMoneyOrtherEqualTo(Long value) {
            addCriterion("SUM_MONEY_ORTHER =", value, "sumMoneyOrther");
            return this;
        }

        public Criteria andSumMoneyOrtherNotEqualTo(Long value) {
            addCriterion("SUM_MONEY_ORTHER <>", value, "sumMoneyOrther");
            return this;
        }

        public Criteria andSumMoneyOrtherGreaterThan(Long value) {
            addCriterion("SUM_MONEY_ORTHER >", value, "sumMoneyOrther");
            return this;
        }

        public Criteria andSumMoneyOrtherGreaterThanOrEqualTo(Long value) {
            addCriterion("SUM_MONEY_ORTHER >=", value, "sumMoneyOrther");
            return this;
        }

        public Criteria andSumMoneyOrtherLessThan(Long value) {
            addCriterion("SUM_MONEY_ORTHER <", value, "sumMoneyOrther");
            return this;
        }

        public Criteria andSumMoneyOrtherLessThanOrEqualTo(Long value) {
            addCriterion("SUM_MONEY_ORTHER <=", value, "sumMoneyOrther");
            return this;
        }

        public Criteria andSumMoneyOrtherIn(List values) {
            addCriterion("SUM_MONEY_ORTHER in", values, "sumMoneyOrther");
            return this;
        }

        public Criteria andSumMoneyOrtherNotIn(List values) {
            addCriterion("SUM_MONEY_ORTHER not in", values, "sumMoneyOrther");
            return this;
        }

        public Criteria andSumMoneyOrtherBetween(Long value1, Long value2) {
            addCriterion("SUM_MONEY_ORTHER between", value1, value2, "sumMoneyOrther");
            return this;
        }

        public Criteria andSumMoneyOrtherNotBetween(Long value1, Long value2) {
            addCriterion("SUM_MONEY_ORTHER not between", value1, value2, "sumMoneyOrther");
            return this;
        }

        public Criteria andSumOilCyIsNull() {
            addCriterion("SUM_OIL_CY is null");
            return this;
        }

        public Criteria andSumOilCyIsNotNull() {
            addCriterion("SUM_OIL_CY is not null");
            return this;
        }

        public Criteria andSumOilCyEqualTo(BigDecimal value) {
            addCriterion("SUM_OIL_CY =", value, "sumOilCy");
            return this;
        }

        public Criteria andSumOilCyNotEqualTo(BigDecimal value) {
            addCriterion("SUM_OIL_CY <>", value, "sumOilCy");
            return this;
        }

        public Criteria andSumOilCyGreaterThan(BigDecimal value) {
            addCriterion("SUM_OIL_CY >", value, "sumOilCy");
            return this;
        }

        public Criteria andSumOilCyGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("SUM_OIL_CY >=", value, "sumOilCy");
            return this;
        }

        public Criteria andSumOilCyLessThan(BigDecimal value) {
            addCriterion("SUM_OIL_CY <", value, "sumOilCy");
            return this;
        }

        public Criteria andSumOilCyLessThanOrEqualTo(BigDecimal value) {
            addCriterion("SUM_OIL_CY <=", value, "sumOilCy");
            return this;
        }

        public Criteria andSumOilCyIn(List values) {
            addCriterion("SUM_OIL_CY in", values, "sumOilCy");
            return this;
        }

        public Criteria andSumOilCyNotIn(List values) {
            addCriterion("SUM_OIL_CY not in", values, "sumOilCy");
            return this;
        }

        public Criteria andSumOilCyBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("SUM_OIL_CY between", value1, value2, "sumOilCy");
            return this;
        }

        public Criteria andSumOilCyNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("SUM_OIL_CY not between", value1, value2, "sumOilCy");
            return this;
        }

        public Criteria andSumOilQyIsNull() {
            addCriterion("SUM_OIL_QY is null");
            return this;
        }

        public Criteria andSumOilQyIsNotNull() {
            addCriterion("SUM_OIL_QY is not null");
            return this;
        }

        public Criteria andSumOilQyEqualTo(BigDecimal value) {
            addCriterion("SUM_OIL_QY =", value, "sumOilQy");
            return this;
        }

        public Criteria andSumOilQyNotEqualTo(BigDecimal value) {
            addCriterion("SUM_OIL_QY <>", value, "sumOilQy");
            return this;
        }

        public Criteria andSumOilQyGreaterThan(BigDecimal value) {
            addCriterion("SUM_OIL_QY >", value, "sumOilQy");
            return this;
        }

        public Criteria andSumOilQyGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("SUM_OIL_QY >=", value, "sumOilQy");
            return this;
        }

        public Criteria andSumOilQyLessThan(BigDecimal value) {
            addCriterion("SUM_OIL_QY <", value, "sumOilQy");
            return this;
        }

        public Criteria andSumOilQyLessThanOrEqualTo(BigDecimal value) {
            addCriterion("SUM_OIL_QY <=", value, "sumOilQy");
            return this;
        }

        public Criteria andSumOilQyIn(List values) {
            addCriterion("SUM_OIL_QY in", values, "sumOilQy");
            return this;
        }

        public Criteria andSumOilQyNotIn(List values) {
            addCriterion("SUM_OIL_QY not in", values, "sumOilQy");
            return this;
        }

        public Criteria andSumOilQyBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("SUM_OIL_QY between", value1, value2, "sumOilQy");
            return this;
        }

        public Criteria andSumOilQyNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("SUM_OIL_QY not between", value1, value2, "sumOilQy");
            return this;
        }

        public Criteria andSumOrtherIsNull() {
            addCriterion("SUM_ORTHER is null");
            return this;
        }

        public Criteria andSumOrtherIsNotNull() {
            addCriterion("SUM_ORTHER is not null");
            return this;
        }

        public Criteria andSumOrtherEqualTo(Long value) {
            addCriterion("SUM_ORTHER =", value, "sumOrther");
            return this;
        }

        public Criteria andSumOrtherNotEqualTo(Long value) {
            addCriterion("SUM_ORTHER <>", value, "sumOrther");
            return this;
        }

        public Criteria andSumOrtherGreaterThan(Long value) {
            addCriterion("SUM_ORTHER >", value, "sumOrther");
            return this;
        }

        public Criteria andSumOrtherGreaterThanOrEqualTo(Long value) {
            addCriterion("SUM_ORTHER >=", value, "sumOrther");
            return this;
        }

        public Criteria andSumOrtherLessThan(Long value) {
            addCriterion("SUM_ORTHER <", value, "sumOrther");
            return this;
        }

        public Criteria andSumOrtherLessThanOrEqualTo(Long value) {
            addCriterion("SUM_ORTHER <=", value, "sumOrther");
            return this;
        }

        public Criteria andSumOrtherIn(List values) {
            addCriterion("SUM_ORTHER in", values, "sumOrther");
            return this;
        }

        public Criteria andSumOrtherNotIn(List values) {
            addCriterion("SUM_ORTHER not in", values, "sumOrther");
            return this;
        }

        public Criteria andSumOrtherBetween(Long value1, Long value2) {
            addCriterion("SUM_ORTHER between", value1, value2, "sumOrther");
            return this;
        }

        public Criteria andSumOrtherNotBetween(Long value1, Long value2) {
            addCriterion("SUM_ORTHER not between", value1, value2, "sumOrther");
            return this;
        }

        public Criteria andSumMoneyRebateCyIsNull() {
            addCriterion("SUM_MONEY_REBATE_CY is null");
            return this;
        }

        public Criteria andSumMoneyRebateCyIsNotNull() {
            addCriterion("SUM_MONEY_REBATE_CY is not null");
            return this;
        }

        public Criteria andSumMoneyRebateCyEqualTo(Long value) {
            addCriterion("SUM_MONEY_REBATE_CY =", value, "sumMoneyRebateCy");
            return this;
        }

        public Criteria andSumMoneyRebateCyNotEqualTo(Long value) {
            addCriterion("SUM_MONEY_REBATE_CY <>", value, "sumMoneyRebateCy");
            return this;
        }

        public Criteria andSumMoneyRebateCyGreaterThan(Long value) {
            addCriterion("SUM_MONEY_REBATE_CY >", value, "sumMoneyRebateCy");
            return this;
        }

        public Criteria andSumMoneyRebateCyGreaterThanOrEqualTo(Long value) {
            addCriterion("SUM_MONEY_REBATE_CY >=", value, "sumMoneyRebateCy");
            return this;
        }

        public Criteria andSumMoneyRebateCyLessThan(Long value) {
            addCriterion("SUM_MONEY_REBATE_CY <", value, "sumMoneyRebateCy");
            return this;
        }

        public Criteria andSumMoneyRebateCyLessThanOrEqualTo(Long value) {
            addCriterion("SUM_MONEY_REBATE_CY <=", value, "sumMoneyRebateCy");
            return this;
        }

        public Criteria andSumMoneyRebateCyIn(List values) {
            addCriterion("SUM_MONEY_REBATE_CY in", values, "sumMoneyRebateCy");
            return this;
        }

        public Criteria andSumMoneyRebateCyNotIn(List values) {
            addCriterion("SUM_MONEY_REBATE_CY not in", values, "sumMoneyRebateCy");
            return this;
        }

        public Criteria andSumMoneyRebateCyBetween(Long value1, Long value2) {
            addCriterion("SUM_MONEY_REBATE_CY between", value1, value2, "sumMoneyRebateCy");
            return this;
        }

        public Criteria andSumMoneyRebateCyNotBetween(Long value1, Long value2) {
            addCriterion("SUM_MONEY_REBATE_CY not between", value1, value2, "sumMoneyRebateCy");
            return this;
        }

        public Criteria andSumMoneyRebateQyIsNull() {
            addCriterion("SUM_MONEY_REBATE_QY is null");
            return this;
        }

        public Criteria andSumMoneyRebateQyIsNotNull() {
            addCriterion("SUM_MONEY_REBATE_QY is not null");
            return this;
        }

        public Criteria andSumMoneyRebateQyEqualTo(Long value) {
            addCriterion("SUM_MONEY_REBATE_QY =", value, "sumMoneyRebateQy");
            return this;
        }

        public Criteria andSumMoneyRebateQyNotEqualTo(Long value) {
            addCriterion("SUM_MONEY_REBATE_QY <>", value, "sumMoneyRebateQy");
            return this;
        }

        public Criteria andSumMoneyRebateQyGreaterThan(Long value) {
            addCriterion("SUM_MONEY_REBATE_QY >", value, "sumMoneyRebateQy");
            return this;
        }

        public Criteria andSumMoneyRebateQyGreaterThanOrEqualTo(Long value) {
            addCriterion("SUM_MONEY_REBATE_QY >=", value, "sumMoneyRebateQy");
            return this;
        }

        public Criteria andSumMoneyRebateQyLessThan(Long value) {
            addCriterion("SUM_MONEY_REBATE_QY <", value, "sumMoneyRebateQy");
            return this;
        }

        public Criteria andSumMoneyRebateQyLessThanOrEqualTo(Long value) {
            addCriterion("SUM_MONEY_REBATE_QY <=", value, "sumMoneyRebateQy");
            return this;
        }

        public Criteria andSumMoneyRebateQyIn(List values) {
            addCriterion("SUM_MONEY_REBATE_QY in", values, "sumMoneyRebateQy");
            return this;
        }

        public Criteria andSumMoneyRebateQyNotIn(List values) {
            addCriterion("SUM_MONEY_REBATE_QY not in", values, "sumMoneyRebateQy");
            return this;
        }

        public Criteria andSumMoneyRebateQyBetween(Long value1, Long value2) {
            addCriterion("SUM_MONEY_REBATE_QY between", value1, value2, "sumMoneyRebateQy");
            return this;
        }

        public Criteria andSumMoneyRebateQyNotBetween(Long value1, Long value2) {
            addCriterion("SUM_MONEY_REBATE_QY not between", value1, value2, "sumMoneyRebateQy");
            return this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("CREATE_TIME is null");
            return this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("CREATE_TIME is not null");
            return this;
        }

        public Criteria andCreateTimeEqualTo(Long value) {
            addCriterion("CREATE_TIME =", value, "createTime");
            return this;
        }

        public Criteria andCreateTimeNotEqualTo(Long value) {
            addCriterion("CREATE_TIME <>", value, "createTime");
            return this;
        }

        public Criteria andCreateTimeGreaterThan(Long value) {
            addCriterion("CREATE_TIME >", value, "createTime");
            return this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(Long value) {
            addCriterion("CREATE_TIME >=", value, "createTime");
            return this;
        }

        public Criteria andCreateTimeLessThan(Long value) {
            addCriterion("CREATE_TIME <", value, "createTime");
            return this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(Long value) {
            addCriterion("CREATE_TIME <=", value, "createTime");
            return this;
        }

        public Criteria andCreateTimeIn(List values) {
            addCriterion("CREATE_TIME in", values, "createTime");
            return this;
        }

        public Criteria andCreateTimeNotIn(List values) {
            addCriterion("CREATE_TIME not in", values, "createTime");
            return this;
        }

        public Criteria andCreateTimeBetween(Long value1, Long value2) {
            addCriterion("CREATE_TIME between", value1, value2, "createTime");
            return this;
        }

        public Criteria andCreateTimeNotBetween(Long value1, Long value2) {
            addCriterion("CREATE_TIME not between", value1, value2, "createTime");
            return this;
        }

        public Criteria andTradeMonthIsNull() {
            addCriterion("TRADE_MONTH is null");
            return this;
        }

        public Criteria andTradeMonthIsNotNull() {
            addCriterion("TRADE_MONTH is not null");
            return this;
        }

        public Criteria andTradeMonthEqualTo(String value) {
            addCriterion("TRADE_MONTH =", value, "tradeMonth");
            return this;
        }

        public Criteria andTradeMonthNotEqualTo(String value) {
            addCriterion("TRADE_MONTH <>", value, "tradeMonth");
            return this;
        }

        public Criteria andTradeMonthGreaterThan(String value) {
            addCriterion("TRADE_MONTH >", value, "tradeMonth");
            return this;
        }

        public Criteria andTradeMonthGreaterThanOrEqualTo(String value) {
            addCriterion("TRADE_MONTH >=", value, "tradeMonth");
            return this;
        }

        public Criteria andTradeMonthLessThan(String value) {
            addCriterion("TRADE_MONTH <", value, "tradeMonth");
            return this;
        }

        public Criteria andTradeMonthLessThanOrEqualTo(String value) {
            addCriterion("TRADE_MONTH <=", value, "tradeMonth");
            return this;
        }

        public Criteria andTradeMonthLike(String value) {
            addCriterion("TRADE_MONTH like", value, "tradeMonth");
            return this;
        }

        public Criteria andTradeMonthNotLike(String value) {
            addCriterion("TRADE_MONTH not like", value, "tradeMonth");
            return this;
        }

        public Criteria andTradeMonthIn(List values) {
            addCriterion("TRADE_MONTH in", values, "tradeMonth");
            return this;
        }

        public Criteria andTradeMonthNotIn(List values) {
            addCriterion("TRADE_MONTH not in", values, "tradeMonth");
            return this;
        }

        public Criteria andTradeMonthBetween(String value1, String value2) {
            addCriterion("TRADE_MONTH between", value1, value2, "tradeMonth");
            return this;
        }

        public Criteria andTradeMonthNotBetween(String value1, String value2) {
            addCriterion("TRADE_MONTH not between", value1, value2, "tradeMonth");
            return this;
        }
    }
}