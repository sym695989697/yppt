package com.ctfo.yppt.baseservice.recharge.beans;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.math.BigDecimal;

public class ICCardPaymentOrderExampleExtended implements Serializable {

	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to the database table TB_IC_CARD_PAYMENT_ORDER
	 * @abatorgenerated  Thu Feb 05 21:08:30 CST 2015
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to the database table TB_IC_CARD_PAYMENT_ORDER
	 * @abatorgenerated  Thu Feb 05 21:08:30 CST 2015
	 */
	protected List oredCriteria;
	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to the database table TB_IC_CARD_PAYMENT_ORDER
	 * @abatorgenerated  Thu Feb 05 21:08:30 CST 2015
	 */
	protected String selectedField;
	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to the database table TB_IC_CARD_PAYMENT_ORDER
	 * @abatorgenerated  Thu Feb 05 21:08:30 CST 2015
	 */
	protected int skipNum;
	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to the database table TB_IC_CARD_PAYMENT_ORDER
	 * @abatorgenerated  Thu Feb 05 21:08:30 CST 2015
	 */
	protected int endNum;
	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to the database table TB_IC_CARD_PAYMENT_ORDER
	 * @abatorgenerated  Thu Feb 05 21:08:30 CST 2015
	 */
	protected int limitNum;

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_IC_CARD_PAYMENT_ORDER
	 * @abatorgenerated  Thu Feb 05 21:08:30 CST 2015
	 */
	public ICCardPaymentOrderExampleExtended() {
		oredCriteria = new ArrayList();
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_IC_CARD_PAYMENT_ORDER
	 * @abatorgenerated  Thu Feb 05 21:08:30 CST 2015
	 */
	protected ICCardPaymentOrderExampleExtended(
			ICCardPaymentOrderExampleExtended example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_IC_CARD_PAYMENT_ORDER
	 * @abatorgenerated  Thu Feb 05 21:08:30 CST 2015
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_IC_CARD_PAYMENT_ORDER
	 * @abatorgenerated  Thu Feb 05 21:08:30 CST 2015
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_IC_CARD_PAYMENT_ORDER
	 * @abatorgenerated  Thu Feb 05 21:08:30 CST 2015
	 */
	public List getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_IC_CARD_PAYMENT_ORDER
	 * @abatorgenerated  Thu Feb 05 21:08:30 CST 2015
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_IC_CARD_PAYMENT_ORDER
	 * @abatorgenerated  Thu Feb 05 21:08:30 CST 2015
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_IC_CARD_PAYMENT_ORDER
	 * @abatorgenerated  Thu Feb 05 21:08:30 CST 2015
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_IC_CARD_PAYMENT_ORDER
	 * @abatorgenerated  Thu Feb 05 21:08:30 CST 2015
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_IC_CARD_PAYMENT_ORDER
	 * @abatorgenerated  Thu Feb 05 21:08:30 CST 2015
	 */
	public void setSelectedField(String selectedField) {
		this.selectedField = selectedField;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_IC_CARD_PAYMENT_ORDER
	 * @abatorgenerated  Thu Feb 05 21:08:30 CST 2015
	 */
	public String getSelectedField() {
		return selectedField;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_IC_CARD_PAYMENT_ORDER
	 * @abatorgenerated  Thu Feb 05 21:08:30 CST 2015
	 */
	public static String tableName() {
		return "TB_IC_CARD_PAYMENT_ORDER";
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_IC_CARD_PAYMENT_ORDER
	 * @abatorgenerated  Thu Feb 05 21:08:30 CST 2015
	 */
	public static String daoInterface() {
		return "com.ctfo.yppt.baseservice.dao.recharge.ICCardPaymentOrderDAO";
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_IC_CARD_PAYMENT_ORDER
	 * @abatorgenerated  Thu Feb 05 21:08:30 CST 2015
	 */
	public void setSkipNum(int skipNum) {
		this.skipNum = skipNum;
		this.endNum = this.skipNum + this.limitNum + 1;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_IC_CARD_PAYMENT_ORDER
	 * @abatorgenerated  Thu Feb 05 21:08:30 CST 2015
	 */
	public int getSkipNum() {
		return this.skipNum;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_IC_CARD_PAYMENT_ORDER
	 * @abatorgenerated  Thu Feb 05 21:08:30 CST 2015
	 */
	public void setEndNum(int endNum) {
		this.endNum = endNum;
		this.limitNum = this.endNum - this.skipNum - 1;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_IC_CARD_PAYMENT_ORDER
	 * @abatorgenerated  Thu Feb 05 21:08:30 CST 2015
	 */
	public int getEndNum() {
		return this.endNum;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_IC_CARD_PAYMENT_ORDER
	 * @abatorgenerated  Thu Feb 05 21:08:30 CST 2015
	 */
	public void setLimitNum(int limitNum) {
		this.limitNum = limitNum;
		this.endNum = this.skipNum + this.limitNum + 1;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_IC_CARD_PAYMENT_ORDER
	 * @abatorgenerated  Thu Feb 05 21:08:30 CST 2015
	 */
	public int getLimitNum() {
		return this.limitNum;
	}

	/**
	 * This class was generated by Abator for iBATIS. This class corresponds to the database table TB_IC_CARD_PAYMENT_ORDER
	 * @abatorgenerated  Thu Feb 05 21:08:30 CST 2015
	 */
	public static class Criteria implements Serializable {
		protected List criteriaWithoutValue;
		protected List criteriaWithSingleValue;
		protected List criteriaWithListValue;
		protected List criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList();
			criteriaWithSingleValue = new ArrayList();
			criteriaWithListValue = new ArrayList();
			criteriaWithBetweenValue = new ArrayList();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0
					|| criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition, List values,
				String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			List list = new ArrayList();
			list.add(value1);
			list.add(value2);
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		public Criteria andIdIsNull() {
			addCriterion("ID is null");
			return this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("ID is not null");
			return this;
		}

		public Criteria andIdEqualTo(String value) {
			addCriterion("ID =", value, "id");
			return this;
		}

		public Criteria andIdNotEqualTo(String value) {
			addCriterion("ID <>", value, "id");
			return this;
		}

		public Criteria andIdGreaterThan(String value) {
			addCriterion("ID >", value, "id");
			return this;
		}

		public Criteria andIdGreaterThanOrEqualTo(String value) {
			addCriterion("ID >=", value, "id");
			return this;
		}

		public Criteria andIdLessThan(String value) {
			addCriterion("ID <", value, "id");
			return this;
		}

		public Criteria andIdLessThanOrEqualTo(String value) {
			addCriterion("ID <=", value, "id");
			return this;
		}

		public Criteria andIdLike(String value) {
			addCriterion("ID like", value, "id");
			return this;
		}

		public Criteria andIdNotLike(String value) {
			addCriterion("ID not like", value, "id");
			return this;
		}

		public Criteria andIdIn(List values) {
			addCriterion("ID in", values, "id");
			return this;
		}

		public Criteria andIdNotIn(List values) {
			addCriterion("ID not in", values, "id");
			return this;
		}

		public Criteria andIdBetween(String value1, String value2) {
			addCriterion("ID between", value1, value2, "id");
			return this;
		}

		public Criteria andIdNotBetween(String value1, String value2) {
			addCriterion("ID not between", value1, value2, "id");
			return this;
		}

		public Criteria andTbaleNameIsNull() {
			addCriterion("TBALE_NAME is null");
			return this;
		}

		public Criteria andTbaleNameIsNotNull() {
			addCriterion("TBALE_NAME is not null");
			return this;
		}

		public Criteria andTbaleNameEqualTo(String value) {
			addCriterion("TBALE_NAME =", value, "tbaleName");
			return this;
		}

		public Criteria andTbaleNameNotEqualTo(String value) {
			addCriterion("TBALE_NAME <>", value, "tbaleName");
			return this;
		}

		public Criteria andTbaleNameGreaterThan(String value) {
			addCriterion("TBALE_NAME >", value, "tbaleName");
			return this;
		}

		public Criteria andTbaleNameGreaterThanOrEqualTo(String value) {
			addCriterion("TBALE_NAME >=", value, "tbaleName");
			return this;
		}

		public Criteria andTbaleNameLessThan(String value) {
			addCriterion("TBALE_NAME <", value, "tbaleName");
			return this;
		}

		public Criteria andTbaleNameLessThanOrEqualTo(String value) {
			addCriterion("TBALE_NAME <=", value, "tbaleName");
			return this;
		}

		public Criteria andTbaleNameLike(String value) {
			addCriterion("TBALE_NAME like", value, "tbaleName");
			return this;
		}

		public Criteria andTbaleNameNotLike(String value) {
			addCriterion("TBALE_NAME not like", value, "tbaleName");
			return this;
		}

		public Criteria andTbaleNameIn(List values) {
			addCriterion("TBALE_NAME in", values, "tbaleName");
			return this;
		}

		public Criteria andTbaleNameNotIn(List values) {
			addCriterion("TBALE_NAME not in", values, "tbaleName");
			return this;
		}

		public Criteria andTbaleNameBetween(String value1, String value2) {
			addCriterion("TBALE_NAME between", value1, value2, "tbaleName");
			return this;
		}

		public Criteria andTbaleNameNotBetween(String value1, String value2) {
			addCriterion("TBALE_NAME not between", value1, value2, "tbaleName");
			return this;
		}

		public Criteria andLocalOrderNoIsNull() {
			addCriterion("LOCAL_ORDER_NO is null");
			return this;
		}

		public Criteria andLocalOrderNoIsNotNull() {
			addCriterion("LOCAL_ORDER_NO is not null");
			return this;
		}

		public Criteria andLocalOrderNoEqualTo(String value) {
			addCriterion("LOCAL_ORDER_NO =", value, "localOrderNo");
			return this;
		}

		public Criteria andLocalOrderNoNotEqualTo(String value) {
			addCriterion("LOCAL_ORDER_NO <>", value, "localOrderNo");
			return this;
		}

		public Criteria andLocalOrderNoGreaterThan(String value) {
			addCriterion("LOCAL_ORDER_NO >", value, "localOrderNo");
			return this;
		}

		public Criteria andLocalOrderNoGreaterThanOrEqualTo(String value) {
			addCriterion("LOCAL_ORDER_NO >=", value, "localOrderNo");
			return this;
		}

		public Criteria andLocalOrderNoLessThan(String value) {
			addCriterion("LOCAL_ORDER_NO <", value, "localOrderNo");
			return this;
		}

		public Criteria andLocalOrderNoLessThanOrEqualTo(String value) {
			addCriterion("LOCAL_ORDER_NO <=", value, "localOrderNo");
			return this;
		}

		public Criteria andLocalOrderNoLike(String value) {
			addCriterion("LOCAL_ORDER_NO like", value, "localOrderNo");
			return this;
		}

		public Criteria andLocalOrderNoNotLike(String value) {
			addCriterion("LOCAL_ORDER_NO not like", value, "localOrderNo");
			return this;
		}

		public Criteria andLocalOrderNoIn(List values) {
			addCriterion("LOCAL_ORDER_NO in", values, "localOrderNo");
			return this;
		}

		public Criteria andLocalOrderNoNotIn(List values) {
			addCriterion("LOCAL_ORDER_NO not in", values, "localOrderNo");
			return this;
		}

		public Criteria andLocalOrderNoBetween(String value1, String value2) {
			addCriterion("LOCAL_ORDER_NO between", value1, value2,
					"localOrderNo");
			return this;
		}

		public Criteria andLocalOrderNoNotBetween(String value1, String value2) {
			addCriterion("LOCAL_ORDER_NO not between", value1, value2,
					"localOrderNo");
			return this;
		}

		public Criteria andPayOrderNoIsNull() {
			addCriterion("PAY_ORDER_NO is null");
			return this;
		}

		public Criteria andPayOrderNoIsNotNull() {
			addCriterion("PAY_ORDER_NO is not null");
			return this;
		}

		public Criteria andPayOrderNoEqualTo(String value) {
			addCriterion("PAY_ORDER_NO =", value, "payOrderNo");
			return this;
		}

		public Criteria andPayOrderNoNotEqualTo(String value) {
			addCriterion("PAY_ORDER_NO <>", value, "payOrderNo");
			return this;
		}

		public Criteria andPayOrderNoGreaterThan(String value) {
			addCriterion("PAY_ORDER_NO >", value, "payOrderNo");
			return this;
		}

		public Criteria andPayOrderNoGreaterThanOrEqualTo(String value) {
			addCriterion("PAY_ORDER_NO >=", value, "payOrderNo");
			return this;
		}

		public Criteria andPayOrderNoLessThan(String value) {
			addCriterion("PAY_ORDER_NO <", value, "payOrderNo");
			return this;
		}

		public Criteria andPayOrderNoLessThanOrEqualTo(String value) {
			addCriterion("PAY_ORDER_NO <=", value, "payOrderNo");
			return this;
		}

		public Criteria andPayOrderNoLike(String value) {
			addCriterion("PAY_ORDER_NO like", value, "payOrderNo");
			return this;
		}

		public Criteria andPayOrderNoNotLike(String value) {
			addCriterion("PAY_ORDER_NO not like", value, "payOrderNo");
			return this;
		}

		public Criteria andPayOrderNoIn(List values) {
			addCriterion("PAY_ORDER_NO in", values, "payOrderNo");
			return this;
		}

		public Criteria andPayOrderNoNotIn(List values) {
			addCriterion("PAY_ORDER_NO not in", values, "payOrderNo");
			return this;
		}

		public Criteria andPayOrderNoBetween(String value1, String value2) {
			addCriterion("PAY_ORDER_NO between", value1, value2, "payOrderNo");
			return this;
		}

		public Criteria andPayOrderNoNotBetween(String value1, String value2) {
			addCriterion("PAY_ORDER_NO not between", value1, value2,
					"payOrderNo");
			return this;
		}

		public Criteria andStatusIsNull() {
			addCriterion("STATUS is null");
			return this;
		}

		public Criteria andStatusIsNotNull() {
			addCriterion("STATUS is not null");
			return this;
		}

		public Criteria andStatusEqualTo(String value) {
			addCriterion("STATUS =", value, "status");
			return this;
		}

		public Criteria andStatusNotEqualTo(String value) {
			addCriterion("STATUS <>", value, "status");
			return this;
		}

		public Criteria andStatusGreaterThan(String value) {
			addCriterion("STATUS >", value, "status");
			return this;
		}

		public Criteria andStatusGreaterThanOrEqualTo(String value) {
			addCriterion("STATUS >=", value, "status");
			return this;
		}

		public Criteria andStatusLessThan(String value) {
			addCriterion("STATUS <", value, "status");
			return this;
		}

		public Criteria andStatusLessThanOrEqualTo(String value) {
			addCriterion("STATUS <=", value, "status");
			return this;
		}

		public Criteria andStatusLike(String value) {
			addCriterion("STATUS like", value, "status");
			return this;
		}

		public Criteria andStatusNotLike(String value) {
			addCriterion("STATUS not like", value, "status");
			return this;
		}

		public Criteria andStatusIn(List values) {
			addCriterion("STATUS in", values, "status");
			return this;
		}

		public Criteria andStatusNotIn(List values) {
			addCriterion("STATUS not in", values, "status");
			return this;
		}

		public Criteria andStatusBetween(String value1, String value2) {
			addCriterion("STATUS between", value1, value2, "status");
			return this;
		}

		public Criteria andStatusNotBetween(String value1, String value2) {
			addCriterion("STATUS not between", value1, value2, "status");
			return this;
		}

		public Criteria andRemarkIsNull() {
			addCriterion("REMARK is null");
			return this;
		}

		public Criteria andRemarkIsNotNull() {
			addCriterion("REMARK is not null");
			return this;
		}

		public Criteria andRemarkEqualTo(String value) {
			addCriterion("REMARK =", value, "remark");
			return this;
		}

		public Criteria andRemarkNotEqualTo(String value) {
			addCriterion("REMARK <>", value, "remark");
			return this;
		}

		public Criteria andRemarkGreaterThan(String value) {
			addCriterion("REMARK >", value, "remark");
			return this;
		}

		public Criteria andRemarkGreaterThanOrEqualTo(String value) {
			addCriterion("REMARK >=", value, "remark");
			return this;
		}

		public Criteria andRemarkLessThan(String value) {
			addCriterion("REMARK <", value, "remark");
			return this;
		}

		public Criteria andRemarkLessThanOrEqualTo(String value) {
			addCriterion("REMARK <=", value, "remark");
			return this;
		}

		public Criteria andRemarkLike(String value) {
			addCriterion("REMARK like", value, "remark");
			return this;
		}

		public Criteria andRemarkNotLike(String value) {
			addCriterion("REMARK not like", value, "remark");
			return this;
		}

		public Criteria andRemarkIn(List values) {
			addCriterion("REMARK in", values, "remark");
			return this;
		}

		public Criteria andRemarkNotIn(List values) {
			addCriterion("REMARK not in", values, "remark");
			return this;
		}

		public Criteria andRemarkBetween(String value1, String value2) {
			addCriterion("REMARK between", value1, value2, "remark");
			return this;
		}

		public Criteria andRemarkNotBetween(String value1, String value2) {
			addCriterion("REMARK not between", value1, value2, "remark");
			return this;
		}

		public Criteria andPayTypeIsNull() {
			addCriterion("PAY_TYPE is null");
			return this;
		}

		public Criteria andPayTypeIsNotNull() {
			addCriterion("PAY_TYPE is not null");
			return this;
		}

		public Criteria andPayTypeEqualTo(String value) {
			addCriterion("PAY_TYPE =", value, "payType");
			return this;
		}

		public Criteria andPayTypeNotEqualTo(String value) {
			addCriterion("PAY_TYPE <>", value, "payType");
			return this;
		}

		public Criteria andPayTypeGreaterThan(String value) {
			addCriterion("PAY_TYPE >", value, "payType");
			return this;
		}

		public Criteria andPayTypeGreaterThanOrEqualTo(String value) {
			addCriterion("PAY_TYPE >=", value, "payType");
			return this;
		}

		public Criteria andPayTypeLessThan(String value) {
			addCriterion("PAY_TYPE <", value, "payType");
			return this;
		}

		public Criteria andPayTypeLessThanOrEqualTo(String value) {
			addCriterion("PAY_TYPE <=", value, "payType");
			return this;
		}

		public Criteria andPayTypeLike(String value) {
			addCriterion("PAY_TYPE like", value, "payType");
			return this;
		}

		public Criteria andPayTypeNotLike(String value) {
			addCriterion("PAY_TYPE not like", value, "payType");
			return this;
		}

		public Criteria andPayTypeIn(List values) {
			addCriterion("PAY_TYPE in", values, "payType");
			return this;
		}

		public Criteria andPayTypeNotIn(List values) {
			addCriterion("PAY_TYPE not in", values, "payType");
			return this;
		}

		public Criteria andPayTypeBetween(String value1, String value2) {
			addCriterion("PAY_TYPE between", value1, value2, "payType");
			return this;
		}

		public Criteria andPayTypeNotBetween(String value1, String value2) {
			addCriterion("PAY_TYPE not between", value1, value2, "payType");
			return this;
		}

		public Criteria andTradeMoneyIsNull() {
			addCriterion("TRADE_MONEY is null");
			return this;
		}

		public Criteria andTradeMoneyIsNotNull() {
			addCriterion("TRADE_MONEY is not null");
			return this;
		}

		public Criteria andTradeMoneyEqualTo(BigDecimal value) {
			addCriterion("TRADE_MONEY =", value, "tradeMoney");
			return this;
		}

		public Criteria andTradeMoneyNotEqualTo(BigDecimal value) {
			addCriterion("TRADE_MONEY <>", value, "tradeMoney");
			return this;
		}

		public Criteria andTradeMoneyGreaterThan(BigDecimal value) {
			addCriterion("TRADE_MONEY >", value, "tradeMoney");
			return this;
		}

		public Criteria andTradeMoneyGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("TRADE_MONEY >=", value, "tradeMoney");
			return this;
		}

		public Criteria andTradeMoneyLessThan(BigDecimal value) {
			addCriterion("TRADE_MONEY <", value, "tradeMoney");
			return this;
		}

		public Criteria andTradeMoneyLessThanOrEqualTo(BigDecimal value) {
			addCriterion("TRADE_MONEY <=", value, "tradeMoney");
			return this;
		}

		public Criteria andTradeMoneyIn(List values) {
			addCriterion("TRADE_MONEY in", values, "tradeMoney");
			return this;
		}

		public Criteria andTradeMoneyNotIn(List values) {
			addCriterion("TRADE_MONEY not in", values, "tradeMoney");
			return this;
		}

		public Criteria andTradeMoneyBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("TRADE_MONEY between", value1, value2, "tradeMoney");
			return this;
		}

		public Criteria andTradeMoneyNotBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("TRADE_MONEY not between", value1, value2,
					"tradeMoney");
			return this;
		}

		public Criteria andPayConfirmDateIsNull() {
			addCriterion("PAY_CONFIRM_DATE is null");
			return this;
		}

		public Criteria andPayConfirmDateIsNotNull() {
			addCriterion("PAY_CONFIRM_DATE is not null");
			return this;
		}

		public Criteria andPayConfirmDateEqualTo(Long value) {
			addCriterion("PAY_CONFIRM_DATE =", value, "payConfirmDate");
			return this;
		}

		public Criteria andPayConfirmDateNotEqualTo(Long value) {
			addCriterion("PAY_CONFIRM_DATE <>", value, "payConfirmDate");
			return this;
		}

		public Criteria andPayConfirmDateGreaterThan(Long value) {
			addCriterion("PAY_CONFIRM_DATE >", value, "payConfirmDate");
			return this;
		}

		public Criteria andPayConfirmDateGreaterThanOrEqualTo(Long value) {
			addCriterion("PAY_CONFIRM_DATE >=", value, "payConfirmDate");
			return this;
		}

		public Criteria andPayConfirmDateLessThan(Long value) {
			addCriterion("PAY_CONFIRM_DATE <", value, "payConfirmDate");
			return this;
		}

		public Criteria andPayConfirmDateLessThanOrEqualTo(Long value) {
			addCriterion("PAY_CONFIRM_DATE <=", value, "payConfirmDate");
			return this;
		}

		public Criteria andPayConfirmDateIn(List values) {
			addCriterion("PAY_CONFIRM_DATE in", values, "payConfirmDate");
			return this;
		}

		public Criteria andPayConfirmDateNotIn(List values) {
			addCriterion("PAY_CONFIRM_DATE not in", values, "payConfirmDate");
			return this;
		}

		public Criteria andPayConfirmDateBetween(Long value1, Long value2) {
			addCriterion("PAY_CONFIRM_DATE between", value1, value2,
					"payConfirmDate");
			return this;
		}

		public Criteria andPayConfirmDateNotBetween(Long value1, Long value2) {
			addCriterion("PAY_CONFIRM_DATE not between", value1, value2,
					"payConfirmDate");
			return this;
		}

		public Criteria andCreditTimeIsNull() {
			addCriterion("CREDIT_TIME is null");
			return this;
		}

		public Criteria andCreditTimeIsNotNull() {
			addCriterion("CREDIT_TIME is not null");
			return this;
		}

		public Criteria andCreditTimeEqualTo(Long value) {
			addCriterion("CREDIT_TIME =", value, "creditTime");
			return this;
		}

		public Criteria andCreditTimeNotEqualTo(Long value) {
			addCriterion("CREDIT_TIME <>", value, "creditTime");
			return this;
		}

		public Criteria andCreditTimeGreaterThan(Long value) {
			addCriterion("CREDIT_TIME >", value, "creditTime");
			return this;
		}

		public Criteria andCreditTimeGreaterThanOrEqualTo(Long value) {
			addCriterion("CREDIT_TIME >=", value, "creditTime");
			return this;
		}

		public Criteria andCreditTimeLessThan(Long value) {
			addCriterion("CREDIT_TIME <", value, "creditTime");
			return this;
		}

		public Criteria andCreditTimeLessThanOrEqualTo(Long value) {
			addCriterion("CREDIT_TIME <=", value, "creditTime");
			return this;
		}

		public Criteria andCreditTimeIn(List values) {
			addCriterion("CREDIT_TIME in", values, "creditTime");
			return this;
		}

		public Criteria andCreditTimeNotIn(List values) {
			addCriterion("CREDIT_TIME not in", values, "creditTime");
			return this;
		}

		public Criteria andCreditTimeBetween(Long value1, Long value2) {
			addCriterion("CREDIT_TIME between", value1, value2, "creditTime");
			return this;
		}

		public Criteria andCreditTimeNotBetween(Long value1, Long value2) {
			addCriterion("CREDIT_TIME not between", value1, value2,
					"creditTime");
			return this;
		}

		public Criteria andReceivePayResultTimeIsNull() {
			addCriterion("RECEIVE_PAY_RESULT_TIME is null");
			return this;
		}

		public Criteria andReceivePayResultTimeIsNotNull() {
			addCriterion("RECEIVE_PAY_RESULT_TIME is not null");
			return this;
		}

		public Criteria andReceivePayResultTimeEqualTo(Long value) {
			addCriterion("RECEIVE_PAY_RESULT_TIME =", value,
					"receivePayResultTime");
			return this;
		}

		public Criteria andReceivePayResultTimeNotEqualTo(Long value) {
			addCriterion("RECEIVE_PAY_RESULT_TIME <>", value,
					"receivePayResultTime");
			return this;
		}

		public Criteria andReceivePayResultTimeGreaterThan(Long value) {
			addCriterion("RECEIVE_PAY_RESULT_TIME >", value,
					"receivePayResultTime");
			return this;
		}

		public Criteria andReceivePayResultTimeGreaterThanOrEqualTo(Long value) {
			addCriterion("RECEIVE_PAY_RESULT_TIME >=", value,
					"receivePayResultTime");
			return this;
		}

		public Criteria andReceivePayResultTimeLessThan(Long value) {
			addCriterion("RECEIVE_PAY_RESULT_TIME <", value,
					"receivePayResultTime");
			return this;
		}

		public Criteria andReceivePayResultTimeLessThanOrEqualTo(Long value) {
			addCriterion("RECEIVE_PAY_RESULT_TIME <=", value,
					"receivePayResultTime");
			return this;
		}

		public Criteria andReceivePayResultTimeIn(List values) {
			addCriterion("RECEIVE_PAY_RESULT_TIME in", values,
					"receivePayResultTime");
			return this;
		}

		public Criteria andReceivePayResultTimeNotIn(List values) {
			addCriterion("RECEIVE_PAY_RESULT_TIME not in", values,
					"receivePayResultTime");
			return this;
		}

		public Criteria andReceivePayResultTimeBetween(Long value1, Long value2) {
			addCriterion("RECEIVE_PAY_RESULT_TIME between", value1, value2,
					"receivePayResultTime");
			return this;
		}

		public Criteria andReceivePayResultTimeNotBetween(Long value1,
				Long value2) {
			addCriterion("RECEIVE_PAY_RESULT_TIME not between", value1, value2,
					"receivePayResultTime");
			return this;
		}

		public Criteria andAccountCheckStatusIsNull() {
			addCriterion("ACCOUNT_CHECK_STATUS is null");
			return this;
		}

		public Criteria andAccountCheckStatusIsNotNull() {
			addCriterion("ACCOUNT_CHECK_STATUS is not null");
			return this;
		}

		public Criteria andAccountCheckStatusEqualTo(String value) {
			addCriterion("ACCOUNT_CHECK_STATUS =", value, "accountCheckStatus");
			return this;
		}

		public Criteria andAccountCheckStatusNotEqualTo(String value) {
			addCriterion("ACCOUNT_CHECK_STATUS <>", value, "accountCheckStatus");
			return this;
		}

		public Criteria andAccountCheckStatusGreaterThan(String value) {
			addCriterion("ACCOUNT_CHECK_STATUS >", value, "accountCheckStatus");
			return this;
		}

		public Criteria andAccountCheckStatusGreaterThanOrEqualTo(String value) {
			addCriterion("ACCOUNT_CHECK_STATUS >=", value, "accountCheckStatus");
			return this;
		}

		public Criteria andAccountCheckStatusLessThan(String value) {
			addCriterion("ACCOUNT_CHECK_STATUS <", value, "accountCheckStatus");
			return this;
		}

		public Criteria andAccountCheckStatusLessThanOrEqualTo(String value) {
			addCriterion("ACCOUNT_CHECK_STATUS <=", value, "accountCheckStatus");
			return this;
		}

		public Criteria andAccountCheckStatusLike(String value) {
			addCriterion("ACCOUNT_CHECK_STATUS like", value,
					"accountCheckStatus");
			return this;
		}

		public Criteria andAccountCheckStatusNotLike(String value) {
			addCriterion("ACCOUNT_CHECK_STATUS not like", value,
					"accountCheckStatus");
			return this;
		}

		public Criteria andAccountCheckStatusIn(List values) {
			addCriterion("ACCOUNT_CHECK_STATUS in", values,
					"accountCheckStatus");
			return this;
		}

		public Criteria andAccountCheckStatusNotIn(List values) {
			addCriterion("ACCOUNT_CHECK_STATUS not in", values,
					"accountCheckStatus");
			return this;
		}

		public Criteria andAccountCheckStatusBetween(String value1,
				String value2) {
			addCriterion("ACCOUNT_CHECK_STATUS between", value1, value2,
					"accountCheckStatus");
			return this;
		}

		public Criteria andAccountCheckStatusNotBetween(String value1,
				String value2) {
			addCriterion("ACCOUNT_CHECK_STATUS not between", value1, value2,
					"accountCheckStatus");
			return this;
		}
	}
}