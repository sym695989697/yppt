package com.ctfo.yppt.baseservice.recharge.beans;

import java.io.Serializable;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ICRechargeApplyDetailExample implements Serializable {

	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to the database table TB_IC_RECHARGE_APPLY_DETAIL
	 * @abatorgenerated  Tue Feb 03 14:39:29 CST 2015
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to the database table TB_IC_RECHARGE_APPLY_DETAIL
	 * @abatorgenerated  Tue Feb 03 14:39:29 CST 2015
	 */
	protected List oredCriteria;
	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to the database table TB_IC_RECHARGE_APPLY_DETAIL
	 * @abatorgenerated  Tue Feb 03 14:39:29 CST 2015
	 */
	protected int skipNum;
	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to the database table TB_IC_RECHARGE_APPLY_DETAIL
	 * @abatorgenerated  Tue Feb 03 14:39:29 CST 2015
	 */
	protected int endNum;
	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to the database table TB_IC_RECHARGE_APPLY_DETAIL
	 * @abatorgenerated  Tue Feb 03 14:39:29 CST 2015
	 */
	protected int limitNum;

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_IC_RECHARGE_APPLY_DETAIL
	 * @abatorgenerated  Tue Feb 03 14:39:29 CST 2015
	 */
	public ICRechargeApplyDetailExample() {
		oredCriteria = new ArrayList();
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_IC_RECHARGE_APPLY_DETAIL
	 * @abatorgenerated  Tue Feb 03 14:39:29 CST 2015
	 */
	protected ICRechargeApplyDetailExample(ICRechargeApplyDetailExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_IC_RECHARGE_APPLY_DETAIL
	 * @abatorgenerated  Tue Feb 03 14:39:29 CST 2015
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_IC_RECHARGE_APPLY_DETAIL
	 * @abatorgenerated  Tue Feb 03 14:39:29 CST 2015
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_IC_RECHARGE_APPLY_DETAIL
	 * @abatorgenerated  Tue Feb 03 14:39:29 CST 2015
	 */
	public List getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_IC_RECHARGE_APPLY_DETAIL
	 * @abatorgenerated  Tue Feb 03 14:39:29 CST 2015
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_IC_RECHARGE_APPLY_DETAIL
	 * @abatorgenerated  Tue Feb 03 14:39:29 CST 2015
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_IC_RECHARGE_APPLY_DETAIL
	 * @abatorgenerated  Tue Feb 03 14:39:29 CST 2015
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_IC_RECHARGE_APPLY_DETAIL
	 * @abatorgenerated  Tue Feb 03 14:39:29 CST 2015
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_IC_RECHARGE_APPLY_DETAIL
	 * @abatorgenerated  Tue Feb 03 14:39:29 CST 2015
	 */
	public static String tableName() {
		return "TB_IC_RECHARGE_APPLY_DETAIL";
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_IC_RECHARGE_APPLY_DETAIL
	 * @abatorgenerated  Tue Feb 03 14:39:29 CST 2015
	 */
	public static String daoInterface() {
		return "com.ctfo.yppt.baseservice.dao.recharge.ICRechargeApplyDetailDAO";
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_IC_RECHARGE_APPLY_DETAIL
	 * @abatorgenerated  Tue Feb 03 14:39:29 CST 2015
	 */
	public void setSkipNum(int skipNum) {
		this.skipNum = skipNum;
		this.endNum = this.skipNum + this.limitNum + 1;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_IC_RECHARGE_APPLY_DETAIL
	 * @abatorgenerated  Tue Feb 03 14:39:29 CST 2015
	 */
	public int getSkipNum() {
		return this.skipNum;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_IC_RECHARGE_APPLY_DETAIL
	 * @abatorgenerated  Tue Feb 03 14:39:29 CST 2015
	 */
	public void setEndNum(int endNum) {
		this.endNum = endNum;
		this.limitNum = this.endNum - this.skipNum - 1;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_IC_RECHARGE_APPLY_DETAIL
	 * @abatorgenerated  Tue Feb 03 14:39:29 CST 2015
	 */
	public int getEndNum() {
		return this.endNum;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_IC_RECHARGE_APPLY_DETAIL
	 * @abatorgenerated  Tue Feb 03 14:39:29 CST 2015
	 */
	public void setLimitNum(int limitNum) {
		this.limitNum = limitNum;
		this.endNum = this.skipNum + this.limitNum + 1;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_IC_RECHARGE_APPLY_DETAIL
	 * @abatorgenerated  Tue Feb 03 14:39:29 CST 2015
	 */
	public int getLimitNum() {
		return this.limitNum;
	}

	/**
	 * This class was generated by Abator for iBATIS. This class corresponds to the database table TB_IC_RECHARGE_APPLY_DETAIL
	 * @abatorgenerated  Tue Feb 03 14:39:29 CST 2015
	 */
	public static class Criteria implements Serializable {
		protected List criteriaWithoutValue;
		protected List criteriaWithSingleValue;
		protected List criteriaWithListValue;
		protected List criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList();
			criteriaWithSingleValue = new ArrayList();
			criteriaWithListValue = new ArrayList();
			criteriaWithBetweenValue = new ArrayList();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0
					|| criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition, List values,
				String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			List list = new ArrayList();
			list.add(value1);
			list.add(value2);
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		public Criteria andIdIsNull() {
			addCriterion("ID is null");
			return this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("ID is not null");
			return this;
		}

		public Criteria andIdEqualTo(String value) {
			addCriterion("ID =", value, "id");
			return this;
		}

		public Criteria andIdNotEqualTo(String value) {
			addCriterion("ID <>", value, "id");
			return this;
		}

		public Criteria andIdGreaterThan(String value) {
			addCriterion("ID >", value, "id");
			return this;
		}

		public Criteria andIdGreaterThanOrEqualTo(String value) {
			addCriterion("ID >=", value, "id");
			return this;
		}

		public Criteria andIdLessThan(String value) {
			addCriterion("ID <", value, "id");
			return this;
		}

		public Criteria andIdLessThanOrEqualTo(String value) {
			addCriterion("ID <=", value, "id");
			return this;
		}

		public Criteria andIdLike(String value) {
			addCriterion("ID like", value, "id");
			return this;
		}

		public Criteria andIdNotLike(String value) {
			addCriterion("ID not like", value, "id");
			return this;
		}

		public Criteria andIdIn(List values) {
			addCriterion("ID in", values, "id");
			return this;
		}

		public Criteria andIdNotIn(List values) {
			addCriterion("ID not in", values, "id");
			return this;
		}

		public Criteria andIdBetween(String value1, String value2) {
			addCriterion("ID between", value1, value2, "id");
			return this;
		}

		public Criteria andIdNotBetween(String value1, String value2) {
			addCriterion("ID not between", value1, value2, "id");
			return this;
		}

		public Criteria andApplyIdIsNull() {
			addCriterion("APPLY_ID is null");
			return this;
		}

		public Criteria andApplyIdIsNotNull() {
			addCriterion("APPLY_ID is not null");
			return this;
		}

		public Criteria andApplyIdEqualTo(String value) {
			addCriterion("APPLY_ID =", value, "applyId");
			return this;
		}

		public Criteria andApplyIdNotEqualTo(String value) {
			addCriterion("APPLY_ID <>", value, "applyId");
			return this;
		}

		public Criteria andApplyIdGreaterThan(String value) {
			addCriterion("APPLY_ID >", value, "applyId");
			return this;
		}

		public Criteria andApplyIdGreaterThanOrEqualTo(String value) {
			addCriterion("APPLY_ID >=", value, "applyId");
			return this;
		}

		public Criteria andApplyIdLessThan(String value) {
			addCriterion("APPLY_ID <", value, "applyId");
			return this;
		}

		public Criteria andApplyIdLessThanOrEqualTo(String value) {
			addCriterion("APPLY_ID <=", value, "applyId");
			return this;
		}

		public Criteria andApplyIdLike(String value) {
			addCriterion("APPLY_ID like", value, "applyId");
			return this;
		}

		public Criteria andApplyIdNotLike(String value) {
			addCriterion("APPLY_ID not like", value, "applyId");
			return this;
		}

		public Criteria andApplyIdIn(List values) {
			addCriterion("APPLY_ID in", values, "applyId");
			return this;
		}

		public Criteria andApplyIdNotIn(List values) {
			addCriterion("APPLY_ID not in", values, "applyId");
			return this;
		}

		public Criteria andApplyIdBetween(String value1, String value2) {
			addCriterion("APPLY_ID between", value1, value2, "applyId");
			return this;
		}

		public Criteria andApplyIdNotBetween(String value1, String value2) {
			addCriterion("APPLY_ID not between", value1, value2, "applyId");
			return this;
		}

		public Criteria andCardIdIsNull() {
			addCriterion("CARD_ID is null");
			return this;
		}

		public Criteria andCardIdIsNotNull() {
			addCriterion("CARD_ID is not null");
			return this;
		}

		public Criteria andCardIdEqualTo(String value) {
			addCriterion("CARD_ID =", value, "cardId");
			return this;
		}

		public Criteria andCardIdNotEqualTo(String value) {
			addCriterion("CARD_ID <>", value, "cardId");
			return this;
		}

		public Criteria andCardIdGreaterThan(String value) {
			addCriterion("CARD_ID >", value, "cardId");
			return this;
		}

		public Criteria andCardIdGreaterThanOrEqualTo(String value) {
			addCriterion("CARD_ID >=", value, "cardId");
			return this;
		}

		public Criteria andCardIdLessThan(String value) {
			addCriterion("CARD_ID <", value, "cardId");
			return this;
		}

		public Criteria andCardIdLessThanOrEqualTo(String value) {
			addCriterion("CARD_ID <=", value, "cardId");
			return this;
		}

		public Criteria andCardIdLike(String value) {
			addCriterion("CARD_ID like", value, "cardId");
			return this;
		}

		public Criteria andCardIdNotLike(String value) {
			addCriterion("CARD_ID not like", value, "cardId");
			return this;
		}

		public Criteria andCardIdIn(List values) {
			addCriterion("CARD_ID in", values, "cardId");
			return this;
		}

		public Criteria andCardIdNotIn(List values) {
			addCriterion("CARD_ID not in", values, "cardId");
			return this;
		}

		public Criteria andCardIdBetween(String value1, String value2) {
			addCriterion("CARD_ID between", value1, value2, "cardId");
			return this;
		}

		public Criteria andCardIdNotBetween(String value1, String value2) {
			addCriterion("CARD_ID not between", value1, value2, "cardId");
			return this;
		}

		public Criteria andCardNoIsNull() {
			addCriterion("CARD_NO is null");
			return this;
		}

		public Criteria andCardNoIsNotNull() {
			addCriterion("CARD_NO is not null");
			return this;
		}

		public Criteria andCardNoEqualTo(String value) {
			addCriterion("CARD_NO =", value, "cardNo");
			return this;
		}

		public Criteria andCardNoNotEqualTo(String value) {
			addCriterion("CARD_NO <>", value, "cardNo");
			return this;
		}

		public Criteria andCardNoGreaterThan(String value) {
			addCriterion("CARD_NO >", value, "cardNo");
			return this;
		}

		public Criteria andCardNoGreaterThanOrEqualTo(String value) {
			addCriterion("CARD_NO >=", value, "cardNo");
			return this;
		}

		public Criteria andCardNoLessThan(String value) {
			addCriterion("CARD_NO <", value, "cardNo");
			return this;
		}

		public Criteria andCardNoLessThanOrEqualTo(String value) {
			addCriterion("CARD_NO <=", value, "cardNo");
			return this;
		}

		public Criteria andCardNoLike(String value) {
			addCriterion("CARD_NO like", value, "cardNo");
			return this;
		}

		public Criteria andCardNoNotLike(String value) {
			addCriterion("CARD_NO not like", value, "cardNo");
			return this;
		}

		public Criteria andCardNoIn(List values) {
			addCriterion("CARD_NO in", values, "cardNo");
			return this;
		}

		public Criteria andCardNoNotIn(List values) {
			addCriterion("CARD_NO not in", values, "cardNo");
			return this;
		}

		public Criteria andCardNoBetween(String value1, String value2) {
			addCriterion("CARD_NO between", value1, value2, "cardNo");
			return this;
		}

		public Criteria andCardNoNotBetween(String value1, String value2) {
			addCriterion("CARD_NO not between", value1, value2, "cardNo");
			return this;
		}

		public Criteria andCardTypeIsNull() {
			addCriterion("CARD_TYPE is null");
			return this;
		}

		public Criteria andCardTypeIsNotNull() {
			addCriterion("CARD_TYPE is not null");
			return this;
		}

		public Criteria andCardTypeEqualTo(String value) {
			addCriterion("CARD_TYPE =", value, "cardType");
			return this;
		}

		public Criteria andCardTypeNotEqualTo(String value) {
			addCriterion("CARD_TYPE <>", value, "cardType");
			return this;
		}

		public Criteria andCardTypeGreaterThan(String value) {
			addCriterion("CARD_TYPE >", value, "cardType");
			return this;
		}

		public Criteria andCardTypeGreaterThanOrEqualTo(String value) {
			addCriterion("CARD_TYPE >=", value, "cardType");
			return this;
		}

		public Criteria andCardTypeLessThan(String value) {
			addCriterion("CARD_TYPE <", value, "cardType");
			return this;
		}

		public Criteria andCardTypeLessThanOrEqualTo(String value) {
			addCriterion("CARD_TYPE <=", value, "cardType");
			return this;
		}

		public Criteria andCardTypeLike(String value) {
			addCriterion("CARD_TYPE like", value, "cardType");
			return this;
		}

		public Criteria andCardTypeNotLike(String value) {
			addCriterion("CARD_TYPE not like", value, "cardType");
			return this;
		}

		public Criteria andCardTypeIn(List values) {
			addCriterion("CARD_TYPE in", values, "cardType");
			return this;
		}

		public Criteria andCardTypeNotIn(List values) {
			addCriterion("CARD_TYPE not in", values, "cardType");
			return this;
		}

		public Criteria andCardTypeBetween(String value1, String value2) {
			addCriterion("CARD_TYPE between", value1, value2, "cardType");
			return this;
		}

		public Criteria andCardTypeNotBetween(String value1, String value2) {
			addCriterion("CARD_TYPE not between", value1, value2, "cardType");
			return this;
		}

		public Criteria andVehicleNoIsNull() {
			addCriterion("VEHICLE_NO is null");
			return this;
		}

		public Criteria andVehicleNoIsNotNull() {
			addCriterion("VEHICLE_NO is not null");
			return this;
		}

		public Criteria andVehicleNoEqualTo(String value) {
			addCriterion("VEHICLE_NO =", value, "vehicleNo");
			return this;
		}

		public Criteria andVehicleNoNotEqualTo(String value) {
			addCriterion("VEHICLE_NO <>", value, "vehicleNo");
			return this;
		}

		public Criteria andVehicleNoGreaterThan(String value) {
			addCriterion("VEHICLE_NO >", value, "vehicleNo");
			return this;
		}

		public Criteria andVehicleNoGreaterThanOrEqualTo(String value) {
			addCriterion("VEHICLE_NO >=", value, "vehicleNo");
			return this;
		}

		public Criteria andVehicleNoLessThan(String value) {
			addCriterion("VEHICLE_NO <", value, "vehicleNo");
			return this;
		}

		public Criteria andVehicleNoLessThanOrEqualTo(String value) {
			addCriterion("VEHICLE_NO <=", value, "vehicleNo");
			return this;
		}

		public Criteria andVehicleNoLike(String value) {
			addCriterion("VEHICLE_NO like", value, "vehicleNo");
			return this;
		}

		public Criteria andVehicleNoNotLike(String value) {
			addCriterion("VEHICLE_NO not like", value, "vehicleNo");
			return this;
		}

		public Criteria andVehicleNoIn(List values) {
			addCriterion("VEHICLE_NO in", values, "vehicleNo");
			return this;
		}

		public Criteria andVehicleNoNotIn(List values) {
			addCriterion("VEHICLE_NO not in", values, "vehicleNo");
			return this;
		}

		public Criteria andVehicleNoBetween(String value1, String value2) {
			addCriterion("VEHICLE_NO between", value1, value2, "vehicleNo");
			return this;
		}

		public Criteria andVehicleNoNotBetween(String value1, String value2) {
			addCriterion("VEHICLE_NO not between", value1, value2, "vehicleNo");
			return this;
		}

		public Criteria andVehicleColorIsNull() {
			addCriterion("VEHICLE_COLOR is null");
			return this;
		}

		public Criteria andVehicleColorIsNotNull() {
			addCriterion("VEHICLE_COLOR is not null");
			return this;
		}

		public Criteria andVehicleColorEqualTo(String value) {
			addCriterion("VEHICLE_COLOR =", value, "vehicleColor");
			return this;
		}

		public Criteria andVehicleColorNotEqualTo(String value) {
			addCriterion("VEHICLE_COLOR <>", value, "vehicleColor");
			return this;
		}

		public Criteria andVehicleColorGreaterThan(String value) {
			addCriterion("VEHICLE_COLOR >", value, "vehicleColor");
			return this;
		}

		public Criteria andVehicleColorGreaterThanOrEqualTo(String value) {
			addCriterion("VEHICLE_COLOR >=", value, "vehicleColor");
			return this;
		}

		public Criteria andVehicleColorLessThan(String value) {
			addCriterion("VEHICLE_COLOR <", value, "vehicleColor");
			return this;
		}

		public Criteria andVehicleColorLessThanOrEqualTo(String value) {
			addCriterion("VEHICLE_COLOR <=", value, "vehicleColor");
			return this;
		}

		public Criteria andVehicleColorLike(String value) {
			addCriterion("VEHICLE_COLOR like", value, "vehicleColor");
			return this;
		}

		public Criteria andVehicleColorNotLike(String value) {
			addCriterion("VEHICLE_COLOR not like", value, "vehicleColor");
			return this;
		}

		public Criteria andVehicleColorIn(List values) {
			addCriterion("VEHICLE_COLOR in", values, "vehicleColor");
			return this;
		}

		public Criteria andVehicleColorNotIn(List values) {
			addCriterion("VEHICLE_COLOR not in", values, "vehicleColor");
			return this;
		}

		public Criteria andVehicleColorBetween(String value1, String value2) {
			addCriterion("VEHICLE_COLOR between", value1, value2,
					"vehicleColor");
			return this;
		}

		public Criteria andVehicleColorNotBetween(String value1, String value2) {
			addCriterion("VEHICLE_COLOR not between", value1, value2,
					"vehicleColor");
			return this;
		}

		public Criteria andMoneyIsNull() {
			addCriterion("MONEY is null");
			return this;
		}

		public Criteria andMoneyIsNotNull() {
			addCriterion("MONEY is not null");
			return this;
		}

		public Criteria andMoneyEqualTo(BigDecimal value) {
			addCriterion("MONEY =", value, "money");
			return this;
		}

		public Criteria andMoneyNotEqualTo(BigDecimal value) {
			addCriterion("MONEY <>", value, "money");
			return this;
		}

		public Criteria andMoneyGreaterThan(BigDecimal value) {
			addCriterion("MONEY >", value, "money");
			return this;
		}

		public Criteria andMoneyGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("MONEY >=", value, "money");
			return this;
		}

		public Criteria andMoneyLessThan(BigDecimal value) {
			addCriterion("MONEY <", value, "money");
			return this;
		}

		public Criteria andMoneyLessThanOrEqualTo(BigDecimal value) {
			addCriterion("MONEY <=", value, "money");
			return this;
		}

		public Criteria andMoneyIn(List values) {
			addCriterion("MONEY in", values, "money");
			return this;
		}

		public Criteria andMoneyNotIn(List values) {
			addCriterion("MONEY not in", values, "money");
			return this;
		}

		public Criteria andMoneyBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("MONEY between", value1, value2, "money");
			return this;
		}

		public Criteria andMoneyNotBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("MONEY not between", value1, value2, "money");
			return this;
		}

		public Criteria andFaileReasonIsNull() {
			addCriterion("FAILE_REASON is null");
			return this;
		}

		public Criteria andFaileReasonIsNotNull() {
			addCriterion("FAILE_REASON is not null");
			return this;
		}

		public Criteria andFaileReasonEqualTo(String value) {
			addCriterion("FAILE_REASON =", value, "faileReason");
			return this;
		}

		public Criteria andFaileReasonNotEqualTo(String value) {
			addCriterion("FAILE_REASON <>", value, "faileReason");
			return this;
		}

		public Criteria andFaileReasonGreaterThan(String value) {
			addCriterion("FAILE_REASON >", value, "faileReason");
			return this;
		}

		public Criteria andFaileReasonGreaterThanOrEqualTo(String value) {
			addCriterion("FAILE_REASON >=", value, "faileReason");
			return this;
		}

		public Criteria andFaileReasonLessThan(String value) {
			addCriterion("FAILE_REASON <", value, "faileReason");
			return this;
		}

		public Criteria andFaileReasonLessThanOrEqualTo(String value) {
			addCriterion("FAILE_REASON <=", value, "faileReason");
			return this;
		}

		public Criteria andFaileReasonLike(String value) {
			addCriterion("FAILE_REASON like", value, "faileReason");
			return this;
		}

		public Criteria andFaileReasonNotLike(String value) {
			addCriterion("FAILE_REASON not like", value, "faileReason");
			return this;
		}

		public Criteria andFaileReasonIn(List values) {
			addCriterion("FAILE_REASON in", values, "faileReason");
			return this;
		}

		public Criteria andFaileReasonNotIn(List values) {
			addCriterion("FAILE_REASON not in", values, "faileReason");
			return this;
		}

		public Criteria andFaileReasonBetween(String value1, String value2) {
			addCriterion("FAILE_REASON between", value1, value2, "faileReason");
			return this;
		}

		public Criteria andFaileReasonNotBetween(String value1, String value2) {
			addCriterion("FAILE_REASON not between", value1, value2,
					"faileReason");
			return this;
		}

		public Criteria andActualDivMoneyIsNull() {
			addCriterion("ACTUAL_DIV_MONEY is null");
			return this;
		}

		public Criteria andActualDivMoneyIsNotNull() {
			addCriterion("ACTUAL_DIV_MONEY is not null");
			return this;
		}

		public Criteria andActualDivMoneyEqualTo(BigDecimal value) {
			addCriterion("ACTUAL_DIV_MONEY =", value, "actualDivMoney");
			return this;
		}

		public Criteria andActualDivMoneyNotEqualTo(BigDecimal value) {
			addCriterion("ACTUAL_DIV_MONEY <>", value, "actualDivMoney");
			return this;
		}

		public Criteria andActualDivMoneyGreaterThan(BigDecimal value) {
			addCriterion("ACTUAL_DIV_MONEY >", value, "actualDivMoney");
			return this;
		}

		public Criteria andActualDivMoneyGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("ACTUAL_DIV_MONEY >=", value, "actualDivMoney");
			return this;
		}

		public Criteria andActualDivMoneyLessThan(BigDecimal value) {
			addCriterion("ACTUAL_DIV_MONEY <", value, "actualDivMoney");
			return this;
		}

		public Criteria andActualDivMoneyLessThanOrEqualTo(BigDecimal value) {
			addCriterion("ACTUAL_DIV_MONEY <=", value, "actualDivMoney");
			return this;
		}

		public Criteria andActualDivMoneyIn(List values) {
			addCriterion("ACTUAL_DIV_MONEY in", values, "actualDivMoney");
			return this;
		}

		public Criteria andActualDivMoneyNotIn(List values) {
			addCriterion("ACTUAL_DIV_MONEY not in", values, "actualDivMoney");
			return this;
		}

		public Criteria andActualDivMoneyBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("ACTUAL_DIV_MONEY between", value1, value2,
					"actualDivMoney");
			return this;
		}

		public Criteria andActualDivMoneyNotBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("ACTUAL_DIV_MONEY not between", value1, value2,
					"actualDivMoney");
			return this;
		}

		public Criteria andParentCardNumberIsNull() {
			addCriterion("PARENT_CARD_NUMBER is null");
			return this;
		}

		public Criteria andParentCardNumberIsNotNull() {
			addCriterion("PARENT_CARD_NUMBER is not null");
			return this;
		}

		public Criteria andParentCardNumberEqualTo(String value) {
			addCriterion("PARENT_CARD_NUMBER =", value, "parentCardNumber");
			return this;
		}

		public Criteria andParentCardNumberNotEqualTo(String value) {
			addCriterion("PARENT_CARD_NUMBER <>", value, "parentCardNumber");
			return this;
		}

		public Criteria andParentCardNumberGreaterThan(String value) {
			addCriterion("PARENT_CARD_NUMBER >", value, "parentCardNumber");
			return this;
		}

		public Criteria andParentCardNumberGreaterThanOrEqualTo(String value) {
			addCriterion("PARENT_CARD_NUMBER >=", value, "parentCardNumber");
			return this;
		}

		public Criteria andParentCardNumberLessThan(String value) {
			addCriterion("PARENT_CARD_NUMBER <", value, "parentCardNumber");
			return this;
		}

		public Criteria andParentCardNumberLessThanOrEqualTo(String value) {
			addCriterion("PARENT_CARD_NUMBER <=", value, "parentCardNumber");
			return this;
		}

		public Criteria andParentCardNumberLike(String value) {
			addCriterion("PARENT_CARD_NUMBER like", value, "parentCardNumber");
			return this;
		}

		public Criteria andParentCardNumberNotLike(String value) {
			addCriterion("PARENT_CARD_NUMBER not like", value,
					"parentCardNumber");
			return this;
		}

		public Criteria andParentCardNumberIn(List values) {
			addCriterion("PARENT_CARD_NUMBER in", values, "parentCardNumber");
			return this;
		}

		public Criteria andParentCardNumberNotIn(List values) {
			addCriterion("PARENT_CARD_NUMBER not in", values,
					"parentCardNumber");
			return this;
		}

		public Criteria andParentCardNumberBetween(String value1, String value2) {
			addCriterion("PARENT_CARD_NUMBER between", value1, value2,
					"parentCardNumber");
			return this;
		}

		public Criteria andParentCardNumberNotBetween(String value1,
				String value2) {
			addCriterion("PARENT_CARD_NUMBER not between", value1, value2,
					"parentCardNumber");
			return this;
		}

		public Criteria andCardAreaCodeIsNull() {
			addCriterion("CARD_AREA_CODE is null");
			return this;
		}

		public Criteria andCardAreaCodeIsNotNull() {
			addCriterion("CARD_AREA_CODE is not null");
			return this;
		}

		public Criteria andCardAreaCodeEqualTo(String value) {
			addCriterion("CARD_AREA_CODE =", value, "cardAreaCode");
			return this;
		}

		public Criteria andCardAreaCodeNotEqualTo(String value) {
			addCriterion("CARD_AREA_CODE <>", value, "cardAreaCode");
			return this;
		}

		public Criteria andCardAreaCodeGreaterThan(String value) {
			addCriterion("CARD_AREA_CODE >", value, "cardAreaCode");
			return this;
		}

		public Criteria andCardAreaCodeGreaterThanOrEqualTo(String value) {
			addCriterion("CARD_AREA_CODE >=", value, "cardAreaCode");
			return this;
		}

		public Criteria andCardAreaCodeLessThan(String value) {
			addCriterion("CARD_AREA_CODE <", value, "cardAreaCode");
			return this;
		}

		public Criteria andCardAreaCodeLessThanOrEqualTo(String value) {
			addCriterion("CARD_AREA_CODE <=", value, "cardAreaCode");
			return this;
		}

		public Criteria andCardAreaCodeLike(String value) {
			addCriterion("CARD_AREA_CODE like", value, "cardAreaCode");
			return this;
		}

		public Criteria andCardAreaCodeNotLike(String value) {
			addCriterion("CARD_AREA_CODE not like", value, "cardAreaCode");
			return this;
		}

		public Criteria andCardAreaCodeIn(List values) {
			addCriterion("CARD_AREA_CODE in", values, "cardAreaCode");
			return this;
		}

		public Criteria andCardAreaCodeNotIn(List values) {
			addCriterion("CARD_AREA_CODE not in", values, "cardAreaCode");
			return this;
		}

		public Criteria andCardAreaCodeBetween(String value1, String value2) {
			addCriterion("CARD_AREA_CODE between", value1, value2,
					"cardAreaCode");
			return this;
		}

		public Criteria andCardAreaCodeNotBetween(String value1, String value2) {
			addCriterion("CARD_AREA_CODE not between", value1, value2,
					"cardAreaCode");
			return this;
		}
	}
}